<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0916.1526                               -->
<workbook original-version='18.1' source-build='2022.2.2 (20222.22.0916.1526)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='City Parameter ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;London&quot;'>
        <calculation class='tableau' formula='&quot;London&quot;' />
        <members>
          <member value='&quot;Abu Dhabi&quot;' />
          <member value='&quot;Agra&quot;' />
          <member value='&quot;Ahmedabad&quot;' />
          <member value='&quot;Albany&quot;' />
          <member value='&quot;Allahabad&quot;' />
          <member value='&quot;Amritsar&quot;' />
          <member value='&quot;Ankara&quot;' />
          <member value='&quot;Armidale&quot;' />
          <member value='&quot;Athens&quot;' />
          <member value='&quot;Auckland&quot;' />
          <member value='&quot;Augusta&quot;' />
          <member value='&quot;Aurangabad&quot;' />
          <member value='&quot;Balingup&quot;' />
          <member value='&quot;Bandung&quot;' />
          <member value='&quot;Bangalore&quot;' />
          <member value='&quot;Beechworth&quot;' />
          <member value='&quot;Bhopal&quot;' />
          <member value='&quot;Bhubaneshwar&quot;' />
          <member value='&quot;Birmingham&quot;' />
          <member value='&quot;Bogor&quot;' />
          <member value='&quot;Boise&quot;' />
          <member value='&quot;Brasí_lia&quot;' />
          <member value='&quot;Cape Town&quot;' />
          <member value='&quot;Cedar Rapids/Iowa City&quot;' />
          <member value='&quot;Chandigarh&quot;' />
          <member value='&quot;Chatham-Kent&quot;' />
          <member value='&quot;Chennai&quot;' />
          <member value='&quot;Clatskanie&quot;' />
          <member value='&quot;Cochrane&quot;' />
          <member value='&quot;Coimbatore&quot;' />
          <member value='&quot;Colombo&quot;' />
          <member value='&quot;Columbus&quot;' />
          <member value='&quot;Consort&quot;' />
          <member value='&quot;Dalton&quot;' />
          <member value='&quot;Davenport&quot;' />
          <member value='&quot;Dehradun&quot;' />
          <member value='&quot;Des Moines&quot;' />
          <member value='&quot;Dicky Beach&quot;' />
          <member value='&quot;Doha&quot;' />
          <member value='&quot;Dubai&quot;' />
          <member value='&quot;Dubuque&quot;' />
          <member value='&quot;East Ballina&quot;' />
          <member value='&quot;Edinburgh&quot;' />
          <member value='&quot;Faridabad&quot;' />
          <member value='&quot;Fernley&quot;' />
          <member value='&quot;Flaxton&quot;' />
          <member value='&quot;Forrest&quot;' />
          <member value='&quot;Gainesville&quot;' />
          <member value='&quot;Ghaziabad&quot;' />
          <member value='&quot;Goa&quot;' />
          <member value='&quot;Gurgaon&quot;' />
          <member value='&quot;Guwahati&quot;' />
          <member value='&quot;Hepburn Springs&quot;' />
          <member value='&quot;Huskisson&quot;' />
          <member value='&quot;Hyderabad&quot;' />
          <member value='&quot;Indore&quot;' />
          <member value='&quot;Inner City&quot;' />
          <member value='&quot;Inverloch&quot;' />
          <member value='&quot;Jaipur&quot;' />
          <member value='&quot;Jakarta&quot;' />
          <member value='&quot;Johannesburg&quot;' />
          <member value='&quot;Kanpur&quot;' />
          <member value='&quot;Kochi&quot;' />
          <member value='&quot;Kolkata&quot;' />
          <member value='&quot;Lakes Entrance&quot;' />
          <member value='&quot;Lakeview&quot;' />
          <member value='&quot;Lincoln&quot;' />
          <member value='&quot;London&quot;' />
          <member value='&quot;Lorn&quot;' />
          <member value='&quot;Lucknow&quot;' />
          <member value='&quot;Ludhiana&quot;' />
          <member value='&quot;Macedon&quot;' />
          <member value='&quot;Macon&quot;' />
          <member value='&quot;Makati City&quot;' />
          <member value='&quot;Manchester&quot;' />
          <member value='&quot;Mandaluyong City&quot;' />
          <member value='&quot;Mangalore&quot;' />
          <member value='&quot;Mayfield&quot;' />
          <member value='&quot;Mc Millan&quot;' />
          <member value='&quot;Middleton Beach&quot;' />
          <member value='&quot;Miller&quot;' />
          <member value='&quot;Mohali&quot;' />
          <member value='&quot;Monroe&quot;' />
          <member value='&quot;Montville&quot;' />
          <member value='&quot;Mumbai&quot;' />
          <member value='&quot;Mysore&quot;' />
          <member value='&quot;Nagpur&quot;' />
          <member value='&quot;Nashik&quot;' />
          <member value='&quot;New Delhi&quot;' />
          <member value='&quot;Noida&quot;' />
          <member value='&quot;Ojo Caliente&quot;' />
          <member value='&quot;Orlando&quot;' />
          <member value='&quot;Palm Cove&quot;' />
          <member value='&quot;Panchkula&quot;' />
          <member value='&quot;Pasay City&quot;' />
          <member value='&quot;Pasig City&quot;' />
          <member value='&quot;Patna&quot;' />
          <member value='&quot;Paynesville&quot;' />
          <member value='&quot;Penola&quot;' />
          <member value='&quot;Pensacola&quot;' />
          <member value='&quot;Phillip Island&quot;' />
          <member value='&quot;Pocatello&quot;' />
          <member value='&quot;Potrero&quot;' />
          <member value='&quot;Pretoria&quot;' />
          <member value='&quot;Princeton&quot;' />
          <member value='&quot;Puducherry&quot;' />
          <member value='&quot;Pune&quot;' />
          <member value='&quot;Quezon City&quot;' />
          <member value='&quot;Ranchi&quot;' />
          <member value='&quot;Randburg&quot;' />
          <member value='&quot;Rest of Hawaii&quot;' />
          <member value='&quot;Rio de Janeiro&quot;' />
          <member value='&quot;San Juan City&quot;' />
          <member value='&quot;Sandton&quot;' />
          <member value='&quot;Santa Rosa&quot;' />
          <member value='&quot;Savannah&quot;' />
          <member value='&quot;Secunderabad&quot;' />
          <member value='&quot;Sharjah&quot;' />
          <member value='&quot;Sí£o Paulo&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Sioux City&quot;' />
          <member value='&quot;Surat&quot;' />
          <member value='&quot;Tagaytay City&quot;' />
          <member value='&quot;Taguig City&quot;' />
          <member value='&quot;Tampa Bay&quot;' />
          <member value='&quot;Tangerang&quot;' />
          <member value='&quot;Tanunda&quot;' />
          <member value='&quot;Trentham East&quot;' />
          <member value='&quot;ÛÁstanbul&quot;' />
          <member value='&quot;Vadodara&quot;' />
          <member value='&quot;Valdosta&quot;' />
          <member value='&quot;Varanasi&quot;' />
          <member value='&quot;Vernonia&quot;' />
          <member value='&quot;Victor Harbor&quot;' />
          <member value='&quot;Vineland Station&quot;' />
          <member value='&quot;Vizag&quot;' />
          <member value='&quot;Waterloo&quot;' />
          <member value='&quot;Weirton&quot;' />
          <member value='&quot;Wellington City&quot;' />
          <member value='&quot;Winchester Bay&quot;' />
          <member value='&quot;Yorkton&quot;' />
        </members>
      </column>
      <column caption='datekey opening parameter' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2010-01-01#'>
        <calculation class='tableau' formula='#2010-01-01#' />
        <members>
          <member value='#2010-01-01#' />
          <member value='#2010-01-03#' />
          <member value='#2010-01-04#' />
          <member value='#2010-01-05#' />
          <member value='#2010-01-06#' />
          <member value='#2010-01-08#' />
          <member value='#2010-01-09#' />
          <member value='#2010-01-10#' />
          <member value='#2010-01-12#' />
          <member value='#2010-01-13#' />
          <member value='#2010-01-14#' />
          <member value='#2010-01-15#' />
          <member value='#2010-01-16#' />
          <member value='#2010-01-17#' />
          <member value='#2010-01-18#' />
          <member value='#2010-01-19#' />
          <member value='#2010-01-20#' />
          <member value='#2010-01-21#' />
          <member value='#2010-01-23#' />
          <member value='#2010-01-24#' />
          <member value='#2010-01-25#' />
          <member value='#2010-01-26#' />
          <member value='#2010-01-27#' />
          <member value='#2010-01-28#' />
          <member value='#2010-02-01#' />
          <member value='#2010-02-02#' />
          <member value='#2010-02-04#' />
          <member value='#2010-02-05#' />
          <member value='#2010-02-06#' />
          <member value='#2010-02-07#' />
          <member value='#2010-02-08#' />
          <member value='#2010-02-09#' />
          <member value='#2010-02-10#' />
          <member value='#2010-02-11#' />
          <member value='#2010-02-12#' />
          <member value='#2010-02-15#' />
          <member value='#2010-02-16#' />
          <member value='#2010-02-17#' />
          <member value='#2010-02-18#' />
          <member value='#2010-02-19#' />
          <member value='#2010-02-20#' />
          <member value='#2010-02-21#' />
          <member value='#2010-02-22#' />
          <member value='#2010-02-23#' />
          <member value='#2010-02-24#' />
          <member value='#2010-02-25#' />
          <member value='#2010-02-26#' />
          <member value='#2010-02-27#' />
          <member value='#2010-02-28#' />
          <member value='#2010-03-01#' />
          <member value='#2010-03-02#' />
          <member value='#2010-03-03#' />
          <member value='#2010-03-04#' />
          <member value='#2010-03-05#' />
          <member value='#2010-03-06#' />
          <member value='#2010-03-07#' />
          <member value='#2010-03-08#' />
          <member value='#2010-03-09#' />
          <member value='#2010-03-10#' />
          <member value='#2010-03-11#' />
          <member value='#2010-03-12#' />
          <member value='#2010-03-13#' />
          <member value='#2010-03-14#' />
          <member value='#2010-03-15#' />
          <member value='#2010-03-16#' />
          <member value='#2010-03-17#' />
          <member value='#2010-03-18#' />
          <member value='#2010-03-19#' />
          <member value='#2010-03-20#' />
          <member value='#2010-03-21#' />
          <member value='#2010-03-22#' />
          <member value='#2010-03-23#' />
          <member value='#2010-03-24#' />
          <member value='#2010-03-25#' />
          <member value='#2010-03-26#' />
          <member value='#2010-03-27#' />
          <member value='#2010-03-28#' />
          <member value='#2010-04-01#' />
          <member value='#2010-04-02#' />
          <member value='#2010-04-03#' />
          <member value='#2010-04-04#' />
          <member value='#2010-04-05#' />
          <member value='#2010-04-06#' />
          <member value='#2010-04-07#' />
          <member value='#2010-04-08#' />
          <member value='#2010-04-09#' />
          <member value='#2010-04-10#' />
          <member value='#2010-04-11#' />
          <member value='#2010-04-12#' />
          <member value='#2010-04-13#' />
          <member value='#2010-04-14#' />
          <member value='#2010-04-15#' />
          <member value='#2010-04-16#' />
          <member value='#2010-04-17#' />
          <member value='#2010-04-18#' />
          <member value='#2010-04-19#' />
          <member value='#2010-04-20#' />
          <member value='#2010-04-21#' />
          <member value='#2010-04-22#' />
          <member value='#2010-04-23#' />
          <member value='#2010-04-24#' />
          <member value='#2010-04-25#' />
          <member value='#2010-04-26#' />
          <member value='#2010-04-27#' />
          <member value='#2010-04-28#' />
          <member value='#2010-05-01#' />
          <member value='#2010-05-02#' />
          <member value='#2010-05-03#' />
          <member value='#2010-05-04#' />
          <member value='#2010-05-05#' />
          <member value='#2010-05-06#' />
          <member value='#2010-05-07#' />
          <member value='#2010-05-08#' />
          <member value='#2010-05-09#' />
          <member value='#2010-05-10#' />
          <member value='#2010-05-11#' />
          <member value='#2010-05-12#' />
          <member value='#2010-05-13#' />
          <member value='#2010-05-14#' />
          <member value='#2010-05-16#' />
          <member value='#2010-05-17#' />
          <member value='#2010-05-18#' />
          <member value='#2010-05-19#' />
          <member value='#2010-05-20#' />
          <member value='#2010-05-21#' />
          <member value='#2010-05-22#' />
          <member value='#2010-05-23#' />
          <member value='#2010-05-24#' />
          <member value='#2010-05-25#' />
          <member value='#2010-05-26#' />
          <member value='#2010-05-27#' />
          <member value='#2010-05-28#' />
          <member value='#2010-06-01#' />
          <member value='#2010-06-02#' />
          <member value='#2010-06-03#' />
          <member value='#2010-06-04#' />
          <member value='#2010-06-05#' />
          <member value='#2010-06-06#' />
          <member value='#2010-06-07#' />
          <member value='#2010-06-08#' />
          <member value='#2010-06-09#' />
          <member value='#2010-06-10#' />
          <member value='#2010-06-11#' />
          <member value='#2010-06-12#' />
          <member value='#2010-06-13#' />
          <member value='#2010-06-14#' />
          <member value='#2010-06-15#' />
          <member value='#2010-06-16#' />
          <member value='#2010-06-17#' />
          <member value='#2010-06-18#' />
          <member value='#2010-06-19#' />
          <member value='#2010-06-20#' />
          <member value='#2010-06-22#' />
          <member value='#2010-06-23#' />
          <member value='#2010-06-24#' />
          <member value='#2010-06-25#' />
          <member value='#2010-06-26#' />
          <member value='#2010-06-27#' />
          <member value='#2010-06-28#' />
          <member value='#2010-07-01#' />
          <member value='#2010-07-02#' />
          <member value='#2010-07-03#' />
          <member value='#2010-07-04#' />
          <member value='#2010-07-05#' />
          <member value='#2010-07-06#' />
          <member value='#2010-07-08#' />
          <member value='#2010-07-09#' />
          <member value='#2010-07-10#' />
          <member value='#2010-07-11#' />
          <member value='#2010-07-12#' />
          <member value='#2010-07-13#' />
          <member value='#2010-07-14#' />
          <member value='#2010-07-15#' />
          <member value='#2010-07-16#' />
          <member value='#2010-07-17#' />
          <member value='#2010-07-18#' />
          <member value='#2010-07-19#' />
          <member value='#2010-07-20#' />
          <member value='#2010-07-21#' />
          <member value='#2010-07-22#' />
          <member value='#2010-07-23#' />
          <member value='#2010-07-24#' />
          <member value='#2010-07-25#' />
          <member value='#2010-07-26#' />
          <member value='#2010-07-27#' />
          <member value='#2010-07-28#' />
          <member value='#2010-08-01#' />
          <member value='#2010-08-02#' />
          <member value='#2010-08-03#' />
          <member value='#2010-08-04#' />
          <member value='#2010-08-05#' />
          <member value='#2010-08-06#' />
          <member value='#2010-08-07#' />
          <member value='#2010-08-08#' />
          <member value='#2010-08-09#' />
          <member value='#2010-08-10#' />
          <member value='#2010-08-11#' />
          <member value='#2010-08-12#' />
          <member value='#2010-08-13#' />
          <member value='#2010-08-14#' />
          <member value='#2010-08-15#' />
          <member value='#2010-08-16#' />
          <member value='#2010-08-17#' />
          <member value='#2010-08-18#' />
          <member value='#2010-08-19#' />
          <member value='#2010-08-20#' />
          <member value='#2010-08-21#' />
          <member value='#2010-08-22#' />
          <member value='#2010-08-23#' />
          <member value='#2010-08-24#' />
          <member value='#2010-08-25#' />
          <member value='#2010-08-26#' />
          <member value='#2010-08-27#' />
          <member value='#2010-08-28#' />
          <member value='#2010-09-01#' />
          <member value='#2010-09-02#' />
          <member value='#2010-09-03#' />
          <member value='#2010-09-04#' />
          <member value='#2010-09-05#' />
          <member value='#2010-09-06#' />
          <member value='#2010-09-07#' />
          <member value='#2010-09-08#' />
          <member value='#2010-09-09#' />
          <member value='#2010-09-10#' />
          <member value='#2010-09-11#' />
          <member value='#2010-09-12#' />
          <member value='#2010-09-13#' />
          <member value='#2010-09-14#' />
          <member value='#2010-09-15#' />
          <member value='#2010-09-16#' />
          <member value='#2010-09-17#' />
          <member value='#2010-09-18#' />
          <member value='#2010-09-19#' />
          <member value='#2010-09-20#' />
          <member value='#2010-09-21#' />
          <member value='#2010-09-22#' />
          <member value='#2010-09-23#' />
          <member value='#2010-09-24#' />
          <member value='#2010-09-25#' />
          <member value='#2010-09-26#' />
          <member value='#2010-09-27#' />
          <member value='#2010-09-28#' />
          <member value='#2010-10-01#' />
          <member value='#2010-10-02#' />
          <member value='#2010-10-03#' />
          <member value='#2010-10-04#' />
          <member value='#2010-10-05#' />
          <member value='#2010-10-06#' />
          <member value='#2010-10-07#' />
          <member value='#2010-10-08#' />
          <member value='#2010-10-09#' />
          <member value='#2010-10-10#' />
          <member value='#2010-10-11#' />
          <member value='#2010-10-12#' />
          <member value='#2010-10-13#' />
          <member value='#2010-10-15#' />
          <member value='#2010-10-16#' />
          <member value='#2010-10-17#' />
          <member value='#2010-10-18#' />
          <member value='#2010-10-19#' />
          <member value='#2010-10-20#' />
          <member value='#2010-10-21#' />
          <member value='#2010-10-22#' />
          <member value='#2010-10-23#' />
          <member value='#2010-10-24#' />
          <member value='#2010-10-25#' />
          <member value='#2010-10-26#' />
          <member value='#2010-10-27#' />
          <member value='#2010-10-28#' />
          <member value='#2010-11-01#' />
          <member value='#2010-11-02#' />
          <member value='#2010-11-03#' />
          <member value='#2010-11-04#' />
          <member value='#2010-11-05#' />
          <member value='#2010-11-06#' />
          <member value='#2010-11-07#' />
          <member value='#2010-11-08#' />
          <member value='#2010-11-09#' />
          <member value='#2010-11-10#' />
          <member value='#2010-11-11#' />
          <member value='#2010-11-12#' />
          <member value='#2010-11-13#' />
          <member value='#2010-11-14#' />
          <member value='#2010-11-15#' />
          <member value='#2010-11-16#' />
          <member value='#2010-11-17#' />
          <member value='#2010-11-18#' />
          <member value='#2010-11-19#' />
          <member value='#2010-11-20#' />
          <member value='#2010-11-21#' />
          <member value='#2010-11-22#' />
          <member value='#2010-11-23#' />
          <member value='#2010-11-24#' />
          <member value='#2010-11-25#' />
          <member value='#2010-11-26#' />
          <member value='#2010-11-27#' />
          <member value='#2010-11-28#' />
          <member value='#2010-12-01#' />
          <member value='#2010-12-02#' />
          <member value='#2010-12-03#' />
          <member value='#2010-12-04#' />
          <member value='#2010-12-05#' />
          <member value='#2010-12-06#' />
          <member value='#2010-12-07#' />
          <member value='#2010-12-08#' />
          <member value='#2010-12-10#' />
          <member value='#2010-12-11#' />
          <member value='#2010-12-12#' />
          <member value='#2010-12-13#' />
          <member value='#2010-12-14#' />
          <member value='#2010-12-15#' />
          <member value='#2010-12-16#' />
          <member value='#2010-12-17#' />
          <member value='#2010-12-18#' />
          <member value='#2010-12-19#' />
          <member value='#2010-12-20#' />
          <member value='#2010-12-21#' />
          <member value='#2010-12-22#' />
          <member value='#2010-12-23#' />
          <member value='#2010-12-24#' />
          <member value='#2010-12-25#' />
          <member value='#2010-12-26#' />
          <member value='#2010-12-27#' />
          <member value='#2010-12-28#' />
          <member value='#2011-01-01#' />
          <member value='#2011-01-02#' />
          <member value='#2011-01-03#' />
          <member value='#2011-01-04#' />
          <member value='#2011-01-07#' />
          <member value='#2011-01-08#' />
          <member value='#2011-01-09#' />
          <member value='#2011-01-10#' />
          <member value='#2011-01-11#' />
          <member value='#2011-01-12#' />
          <member value='#2011-01-13#' />
          <member value='#2011-01-14#' />
          <member value='#2011-01-15#' />
          <member value='#2011-01-16#' />
          <member value='#2011-01-17#' />
          <member value='#2011-01-18#' />
          <member value='#2011-01-19#' />
          <member value='#2011-01-20#' />
          <member value='#2011-01-21#' />
          <member value='#2011-01-22#' />
          <member value='#2011-01-23#' />
          <member value='#2011-01-24#' />
          <member value='#2011-01-25#' />
          <member value='#2011-01-26#' />
          <member value='#2011-01-27#' />
          <member value='#2011-01-28#' />
          <member value='#2011-02-01#' />
          <member value='#2011-02-02#' />
          <member value='#2011-02-03#' />
          <member value='#2011-02-04#' />
          <member value='#2011-02-05#' />
          <member value='#2011-02-06#' />
          <member value='#2011-02-07#' />
          <member value='#2011-02-08#' />
          <member value='#2011-02-09#' />
          <member value='#2011-02-10#' />
          <member value='#2011-02-11#' />
          <member value='#2011-02-12#' />
          <member value='#2011-02-13#' />
          <member value='#2011-02-14#' />
          <member value='#2011-02-15#' />
          <member value='#2011-02-16#' />
          <member value='#2011-02-17#' />
          <member value='#2011-02-18#' />
          <member value='#2011-02-19#' />
          <member value='#2011-02-20#' />
          <member value='#2011-02-21#' />
          <member value='#2011-02-23#' />
          <member value='#2011-02-24#' />
          <member value='#2011-02-25#' />
          <member value='#2011-02-26#' />
          <member value='#2011-02-27#' />
          <member value='#2011-02-28#' />
          <member value='#2011-03-01#' />
          <member value='#2011-03-02#' />
          <member value='#2011-03-03#' />
          <member value='#2011-03-04#' />
          <member value='#2011-03-05#' />
          <member value='#2011-03-06#' />
          <member value='#2011-03-07#' />
          <member value='#2011-03-08#' />
          <member value='#2011-03-09#' />
          <member value='#2011-03-10#' />
          <member value='#2011-03-11#' />
          <member value='#2011-03-12#' />
          <member value='#2011-03-13#' />
          <member value='#2011-03-14#' />
          <member value='#2011-03-15#' />
          <member value='#2011-03-16#' />
          <member value='#2011-03-17#' />
          <member value='#2011-03-18#' />
          <member value='#2011-03-19#' />
          <member value='#2011-03-20#' />
          <member value='#2011-03-21#' />
          <member value='#2011-03-22#' />
          <member value='#2011-03-23#' />
          <member value='#2011-03-24#' />
          <member value='#2011-03-25#' />
          <member value='#2011-03-26#' />
          <member value='#2011-03-27#' />
          <member value='#2011-03-28#' />
          <member value='#2011-04-01#' />
          <member value='#2011-04-02#' />
          <member value='#2011-04-03#' />
          <member value='#2011-04-04#' />
          <member value='#2011-04-05#' />
          <member value='#2011-04-06#' />
          <member value='#2011-04-07#' />
          <member value='#2011-04-08#' />
          <member value='#2011-04-09#' />
          <member value='#2011-04-10#' />
          <member value='#2011-04-11#' />
          <member value='#2011-04-12#' />
          <member value='#2011-04-13#' />
          <member value='#2011-04-14#' />
          <member value='#2011-04-15#' />
          <member value='#2011-04-16#' />
          <member value='#2011-04-17#' />
          <member value='#2011-04-18#' />
          <member value='#2011-04-19#' />
          <member value='#2011-04-20#' />
          <member value='#2011-04-21#' />
          <member value='#2011-04-22#' />
          <member value='#2011-04-23#' />
          <member value='#2011-04-24#' />
          <member value='#2011-04-25#' />
          <member value='#2011-04-26#' />
          <member value='#2011-04-27#' />
          <member value='#2011-04-28#' />
          <member value='#2011-05-01#' />
          <member value='#2011-05-02#' />
          <member value='#2011-05-03#' />
          <member value='#2011-05-04#' />
          <member value='#2011-05-05#' />
          <member value='#2011-05-06#' />
          <member value='#2011-05-07#' />
          <member value='#2011-05-08#' />
          <member value='#2011-05-09#' />
          <member value='#2011-05-10#' />
          <member value='#2011-05-11#' />
          <member value='#2011-05-12#' />
          <member value='#2011-05-13#' />
          <member value='#2011-05-14#' />
          <member value='#2011-05-15#' />
          <member value='#2011-05-16#' />
          <member value='#2011-05-17#' />
          <member value='#2011-05-18#' />
          <member value='#2011-05-20#' />
          <member value='#2011-05-21#' />
          <member value='#2011-05-22#' />
          <member value='#2011-05-23#' />
          <member value='#2011-05-24#' />
          <member value='#2011-05-25#' />
          <member value='#2011-05-26#' />
          <member value='#2011-05-27#' />
          <member value='#2011-05-28#' />
          <member value='#2011-06-01#' />
          <member value='#2011-06-02#' />
          <member value='#2011-06-03#' />
          <member value='#2011-06-04#' />
          <member value='#2011-06-05#' />
          <member value='#2011-06-06#' />
          <member value='#2011-06-07#' />
          <member value='#2011-06-08#' />
          <member value='#2011-06-09#' />
          <member value='#2011-06-10#' />
          <member value='#2011-06-11#' />
          <member value='#2011-06-12#' />
          <member value='#2011-06-14#' />
          <member value='#2011-06-15#' />
          <member value='#2011-06-16#' />
          <member value='#2011-06-17#' />
          <member value='#2011-06-18#' />
          <member value='#2011-06-19#' />
          <member value='#2011-06-20#' />
          <member value='#2011-06-21#' />
          <member value='#2011-06-22#' />
          <member value='#2011-06-23#' />
          <member value='#2011-06-24#' />
          <member value='#2011-06-25#' />
          <member value='#2011-06-26#' />
          <member value='#2011-06-27#' />
          <member value='#2011-06-28#' />
          <member value='#2011-07-01#' />
          <member value='#2011-07-02#' />
          <member value='#2011-07-03#' />
          <member value='#2011-07-04#' />
          <member value='#2011-07-05#' />
          <member value='#2011-07-07#' />
          <member value='#2011-07-08#' />
          <member value='#2011-07-09#' />
          <member value='#2011-07-10#' />
          <member value='#2011-07-11#' />
          <member value='#2011-07-12#' />
          <member value='#2011-07-13#' />
          <member value='#2011-07-14#' />
          <member value='#2011-07-15#' />
          <member value='#2011-07-16#' />
          <member value='#2011-07-17#' />
          <member value='#2011-07-18#' />
          <member value='#2011-07-19#' />
          <member value='#2011-07-20#' />
          <member value='#2011-07-21#' />
          <member value='#2011-07-23#' />
          <member value='#2011-07-24#' />
          <member value='#2011-07-25#' />
          <member value='#2011-07-26#' />
          <member value='#2011-07-28#' />
          <member value='#2011-08-01#' />
          <member value='#2011-08-02#' />
          <member value='#2011-08-03#' />
          <member value='#2011-08-04#' />
          <member value='#2011-08-05#' />
          <member value='#2011-08-06#' />
          <member value='#2011-08-07#' />
          <member value='#2011-08-08#' />
          <member value='#2011-08-09#' />
          <member value='#2011-08-10#' />
          <member value='#2011-08-11#' />
          <member value='#2011-08-12#' />
          <member value='#2011-08-13#' />
          <member value='#2011-08-14#' />
          <member value='#2011-08-15#' />
          <member value='#2011-08-16#' />
          <member value='#2011-08-17#' />
          <member value='#2011-08-18#' />
          <member value='#2011-08-19#' />
          <member value='#2011-08-20#' />
          <member value='#2011-08-21#' />
          <member value='#2011-08-22#' />
          <member value='#2011-08-23#' />
          <member value='#2011-08-24#' />
          <member value='#2011-08-25#' />
          <member value='#2011-08-26#' />
          <member value='#2011-08-27#' />
          <member value='#2011-08-28#' />
          <member value='#2011-09-01#' />
          <member value='#2011-09-02#' />
          <member value='#2011-09-03#' />
          <member value='#2011-09-04#' />
          <member value='#2011-09-05#' />
          <member value='#2011-09-06#' />
          <member value='#2011-09-07#' />
          <member value='#2011-09-08#' />
          <member value='#2011-09-09#' />
          <member value='#2011-09-10#' />
          <member value='#2011-09-11#' />
          <member value='#2011-09-12#' />
          <member value='#2011-09-13#' />
          <member value='#2011-09-14#' />
          <member value='#2011-09-15#' />
          <member value='#2011-09-16#' />
          <member value='#2011-09-17#' />
          <member value='#2011-09-18#' />
          <member value='#2011-09-19#' />
          <member value='#2011-09-20#' />
          <member value='#2011-09-21#' />
          <member value='#2011-09-22#' />
          <member value='#2011-09-23#' />
          <member value='#2011-09-24#' />
          <member value='#2011-09-25#' />
          <member value='#2011-09-26#' />
          <member value='#2011-09-27#' />
          <member value='#2011-09-28#' />
          <member value='#2011-10-01#' />
          <member value='#2011-10-02#' />
          <member value='#2011-10-03#' />
          <member value='#2011-10-04#' />
          <member value='#2011-10-05#' />
          <member value='#2011-10-06#' />
          <member value='#2011-10-07#' />
          <member value='#2011-10-08#' />
          <member value='#2011-10-09#' />
          <member value='#2011-10-10#' />
          <member value='#2011-10-11#' />
          <member value='#2011-10-12#' />
          <member value='#2011-10-13#' />
          <member value='#2011-10-14#' />
          <member value='#2011-10-15#' />
          <member value='#2011-10-16#' />
          <member value='#2011-10-17#' />
          <member value='#2011-10-18#' />
          <member value='#2011-10-19#' />
          <member value='#2011-10-20#' />
          <member value='#2011-10-21#' />
          <member value='#2011-10-22#' />
          <member value='#2011-10-23#' />
          <member value='#2011-10-25#' />
          <member value='#2011-10-26#' />
          <member value='#2011-10-27#' />
          <member value='#2011-10-28#' />
          <member value='#2011-11-01#' />
          <member value='#2011-11-02#' />
          <member value='#2011-11-03#' />
          <member value='#2011-11-04#' />
          <member value='#2011-11-05#' />
          <member value='#2011-11-06#' />
          <member value='#2011-11-08#' />
          <member value='#2011-11-09#' />
          <member value='#2011-11-10#' />
          <member value='#2011-11-11#' />
          <member value='#2011-11-12#' />
          <member value='#2011-11-13#' />
          <member value='#2011-11-14#' />
          <member value='#2011-11-15#' />
          <member value='#2011-11-16#' />
          <member value='#2011-11-17#' />
          <member value='#2011-11-18#' />
          <member value='#2011-11-20#' />
          <member value='#2011-11-21#' />
          <member value='#2011-11-22#' />
          <member value='#2011-11-23#' />
          <member value='#2011-11-24#' />
          <member value='#2011-11-25#' />
          <member value='#2011-11-26#' />
          <member value='#2011-11-27#' />
          <member value='#2011-12-01#' />
          <member value='#2011-12-02#' />
          <member value='#2011-12-03#' />
          <member value='#2011-12-04#' />
          <member value='#2011-12-05#' />
          <member value='#2011-12-06#' />
          <member value='#2011-12-07#' />
          <member value='#2011-12-09#' />
          <member value='#2011-12-10#' />
          <member value='#2011-12-11#' />
          <member value='#2011-12-12#' />
          <member value='#2011-12-13#' />
          <member value='#2011-12-14#' />
          <member value='#2011-12-15#' />
          <member value='#2011-12-16#' />
          <member value='#2011-12-17#' />
          <member value='#2011-12-18#' />
          <member value='#2011-12-19#' />
          <member value='#2011-12-20#' />
          <member value='#2011-12-22#' />
          <member value='#2011-12-23#' />
          <member value='#2011-12-24#' />
          <member value='#2011-12-25#' />
          <member value='#2011-12-26#' />
          <member value='#2011-12-27#' />
          <member value='#2011-12-28#' />
          <member value='#2012-01-01#' />
          <member value='#2012-01-02#' />
          <member value='#2012-01-03#' />
          <member value='#2012-01-05#' />
          <member value='#2012-01-06#' />
          <member value='#2012-01-07#' />
          <member value='#2012-01-08#' />
          <member value='#2012-01-10#' />
          <member value='#2012-01-11#' />
          <member value='#2012-01-12#' />
          <member value='#2012-01-13#' />
          <member value='#2012-01-14#' />
          <member value='#2012-01-15#' />
          <member value='#2012-01-16#' />
          <member value='#2012-01-18#' />
          <member value='#2012-01-19#' />
          <member value='#2012-01-20#' />
          <member value='#2012-01-21#' />
          <member value='#2012-01-22#' />
          <member value='#2012-01-23#' />
          <member value='#2012-01-24#' />
          <member value='#2012-01-25#' />
          <member value='#2012-01-26#' />
          <member value='#2012-01-27#' />
          <member value='#2012-01-28#' />
          <member value='#2012-02-01#' />
          <member value='#2012-02-02#' />
          <member value='#2012-02-03#' />
          <member value='#2012-02-04#' />
          <member value='#2012-02-05#' />
          <member value='#2012-02-06#' />
          <member value='#2012-02-07#' />
          <member value='#2012-02-08#' />
          <member value='#2012-02-09#' />
          <member value='#2012-02-10#' />
          <member value='#2012-02-12#' />
          <member value='#2012-02-13#' />
          <member value='#2012-02-14#' />
          <member value='#2012-02-15#' />
          <member value='#2012-02-16#' />
          <member value='#2012-02-17#' />
          <member value='#2012-02-18#' />
          <member value='#2012-02-19#' />
          <member value='#2012-02-21#' />
          <member value='#2012-02-22#' />
          <member value='#2012-02-23#' />
          <member value='#2012-02-24#' />
          <member value='#2012-02-25#' />
          <member value='#2012-02-26#' />
          <member value='#2012-02-27#' />
          <member value='#2012-02-28#' />
          <member value='#2012-03-01#' />
          <member value='#2012-03-02#' />
          <member value='#2012-03-03#' />
          <member value='#2012-03-04#' />
          <member value='#2012-03-05#' />
          <member value='#2012-03-06#' />
          <member value='#2012-03-07#' />
          <member value='#2012-03-08#' />
          <member value='#2012-03-09#' />
          <member value='#2012-03-10#' />
          <member value='#2012-03-11#' />
          <member value='#2012-03-12#' />
          <member value='#2012-03-13#' />
          <member value='#2012-03-14#' />
          <member value='#2012-03-15#' />
          <member value='#2012-03-16#' />
          <member value='#2012-03-17#' />
          <member value='#2012-03-18#' />
          <member value='#2012-03-19#' />
          <member value='#2012-03-20#' />
          <member value='#2012-03-21#' />
          <member value='#2012-03-22#' />
          <member value='#2012-03-23#' />
          <member value='#2012-03-24#' />
          <member value='#2012-03-25#' />
          <member value='#2012-03-26#' />
          <member value='#2012-03-27#' />
          <member value='#2012-03-28#' />
          <member value='#2012-04-01#' />
          <member value='#2012-04-02#' />
          <member value='#2012-04-03#' />
          <member value='#2012-04-04#' />
          <member value='#2012-04-05#' />
          <member value='#2012-04-06#' />
          <member value='#2012-04-07#' />
          <member value='#2012-04-08#' />
          <member value='#2012-04-09#' />
          <member value='#2012-04-10#' />
          <member value='#2012-04-11#' />
          <member value='#2012-04-12#' />
          <member value='#2012-04-13#' />
          <member value='#2012-04-14#' />
          <member value='#2012-04-15#' />
          <member value='#2012-04-16#' />
          <member value='#2012-04-17#' />
          <member value='#2012-04-18#' />
          <member value='#2012-04-19#' />
          <member value='#2012-04-20#' />
          <member value='#2012-04-21#' />
          <member value='#2012-04-22#' />
          <member value='#2012-04-23#' />
          <member value='#2012-04-24#' />
          <member value='#2012-04-25#' />
          <member value='#2012-04-26#' />
          <member value='#2012-04-27#' />
          <member value='#2012-04-28#' />
          <member value='#2012-05-01#' />
          <member value='#2012-05-02#' />
          <member value='#2012-05-03#' />
          <member value='#2012-05-04#' />
          <member value='#2012-05-05#' />
          <member value='#2012-05-06#' />
          <member value='#2012-05-07#' />
          <member value='#2012-05-08#' />
          <member value='#2012-05-09#' />
          <member value='#2012-05-10#' />
          <member value='#2012-05-11#' />
          <member value='#2012-05-12#' />
          <member value='#2012-05-13#' />
          <member value='#2012-05-14#' />
          <member value='#2012-05-15#' />
          <member value='#2012-05-16#' />
          <member value='#2012-05-17#' />
          <member value='#2012-05-18#' />
          <member value='#2012-05-19#' />
          <member value='#2012-05-20#' />
          <member value='#2012-05-22#' />
          <member value='#2012-05-24#' />
          <member value='#2012-05-25#' />
          <member value='#2012-05-26#' />
          <member value='#2012-05-27#' />
          <member value='#2012-05-28#' />
          <member value='#2012-06-01#' />
          <member value='#2012-06-02#' />
          <member value='#2012-06-03#' />
          <member value='#2012-06-04#' />
          <member value='#2012-06-05#' />
          <member value='#2012-06-06#' />
          <member value='#2012-06-07#' />
          <member value='#2012-06-08#' />
          <member value='#2012-06-09#' />
          <member value='#2012-06-10#' />
          <member value='#2012-06-11#' />
          <member value='#2012-06-12#' />
          <member value='#2012-06-13#' />
          <member value='#2012-06-14#' />
          <member value='#2012-06-15#' />
          <member value='#2012-06-16#' />
          <member value='#2012-06-17#' />
          <member value='#2012-06-18#' />
          <member value='#2012-06-19#' />
          <member value='#2012-06-20#' />
          <member value='#2012-06-21#' />
          <member value='#2012-06-22#' />
          <member value='#2012-06-23#' />
          <member value='#2012-06-25#' />
          <member value='#2012-06-26#' />
          <member value='#2012-06-27#' />
          <member value='#2012-06-28#' />
          <member value='#2012-07-01#' />
          <member value='#2012-07-02#' />
          <member value='#2012-07-03#' />
          <member value='#2012-07-04#' />
          <member value='#2012-07-05#' />
          <member value='#2012-07-07#' />
          <member value='#2012-07-08#' />
          <member value='#2012-07-09#' />
          <member value='#2012-07-10#' />
          <member value='#2012-07-11#' />
          <member value='#2012-07-12#' />
          <member value='#2012-07-13#' />
          <member value='#2012-07-14#' />
          <member value='#2012-07-15#' />
          <member value='#2012-07-16#' />
          <member value='#2012-07-17#' />
          <member value='#2012-07-18#' />
          <member value='#2012-07-19#' />
          <member value='#2012-07-20#' />
          <member value='#2012-07-21#' />
          <member value='#2012-07-22#' />
          <member value='#2012-07-23#' />
          <member value='#2012-07-24#' />
          <member value='#2012-07-25#' />
          <member value='#2012-07-26#' />
          <member value='#2012-07-27#' />
          <member value='#2012-07-28#' />
          <member value='#2012-08-01#' />
          <member value='#2012-08-02#' />
          <member value='#2012-08-04#' />
          <member value='#2012-08-05#' />
          <member value='#2012-08-06#' />
          <member value='#2012-08-07#' />
          <member value='#2012-08-08#' />
          <member value='#2012-08-09#' />
          <member value='#2012-08-10#' />
          <member value='#2012-08-11#' />
          <member value='#2012-08-12#' />
          <member value='#2012-08-13#' />
          <member value='#2012-08-14#' />
          <member value='#2012-08-15#' />
          <member value='#2012-08-16#' />
          <member value='#2012-08-17#' />
          <member value='#2012-08-18#' />
          <member value='#2012-08-19#' />
          <member value='#2012-08-20#' />
          <member value='#2012-08-21#' />
          <member value='#2012-08-22#' />
          <member value='#2012-08-23#' />
          <member value='#2012-08-24#' />
          <member value='#2012-08-25#' />
          <member value='#2012-08-26#' />
          <member value='#2012-08-28#' />
          <member value='#2012-09-01#' />
          <member value='#2012-09-02#' />
          <member value='#2012-09-03#' />
          <member value='#2012-09-04#' />
          <member value='#2012-09-05#' />
          <member value='#2012-09-06#' />
          <member value='#2012-09-07#' />
          <member value='#2012-09-08#' />
          <member value='#2012-09-09#' />
          <member value='#2012-09-10#' />
          <member value='#2012-09-11#' />
          <member value='#2012-09-12#' />
          <member value='#2012-09-13#' />
          <member value='#2012-09-14#' />
          <member value='#2012-09-15#' />
          <member value='#2012-09-16#' />
          <member value='#2012-09-17#' />
          <member value='#2012-09-18#' />
          <member value='#2012-09-19#' />
          <member value='#2012-09-20#' />
          <member value='#2012-09-21#' />
          <member value='#2012-09-22#' />
          <member value='#2012-09-23#' />
          <member value='#2012-09-24#' />
          <member value='#2012-09-25#' />
          <member value='#2012-09-26#' />
          <member value='#2012-09-27#' />
          <member value='#2012-09-28#' />
          <member value='#2012-10-01#' />
          <member value='#2012-10-02#' />
          <member value='#2012-10-03#' />
          <member value='#2012-10-04#' />
          <member value='#2012-10-05#' />
          <member value='#2012-10-06#' />
          <member value='#2012-10-07#' />
          <member value='#2012-10-08#' />
          <member value='#2012-10-09#' />
          <member value='#2012-10-10#' />
          <member value='#2012-10-11#' />
          <member value='#2012-10-12#' />
          <member value='#2012-10-13#' />
          <member value='#2012-10-15#' />
          <member value='#2012-10-16#' />
          <member value='#2012-10-17#' />
          <member value='#2012-10-18#' />
          <member value='#2012-10-20#' />
          <member value='#2012-10-21#' />
          <member value='#2012-10-22#' />
          <member value='#2012-10-23#' />
          <member value='#2012-10-24#' />
          <member value='#2012-10-25#' />
          <member value='#2012-10-26#' />
          <member value='#2012-10-27#' />
          <member value='#2012-10-28#' />
          <member value='#2012-11-01#' />
          <member value='#2012-11-02#' />
          <member value='#2012-11-03#' />
          <member value='#2012-11-04#' />
          <member value='#2012-11-05#' />
          <member value='#2012-11-06#' />
          <member value='#2012-11-07#' />
          <member value='#2012-11-08#' />
          <member value='#2012-11-09#' />
          <member value='#2012-11-10#' />
          <member value='#2012-11-11#' />
          <member value='#2012-11-12#' />
          <member value='#2012-11-13#' />
          <member value='#2012-11-14#' />
          <member value='#2012-11-15#' />
          <member value='#2012-11-16#' />
          <member value='#2012-11-17#' />
          <member value='#2012-11-18#' />
          <member value='#2012-11-19#' />
          <member value='#2012-11-20#' />
          <member value='#2012-11-21#' />
          <member value='#2012-11-22#' />
          <member value='#2012-11-23#' />
          <member value='#2012-11-24#' />
          <member value='#2012-11-25#' />
          <member value='#2012-11-26#' />
          <member value='#2012-11-27#' />
          <member value='#2012-11-28#' />
          <member value='#2012-12-01#' />
          <member value='#2012-12-02#' />
          <member value='#2012-12-03#' />
          <member value='#2012-12-04#' />
          <member value='#2012-12-05#' />
          <member value='#2012-12-06#' />
          <member value='#2012-12-07#' />
          <member value='#2012-12-08#' />
          <member value='#2012-12-09#' />
          <member value='#2012-12-10#' />
          <member value='#2012-12-11#' />
          <member value='#2012-12-12#' />
          <member value='#2012-12-13#' />
          <member value='#2012-12-14#' />
          <member value='#2012-12-15#' />
          <member value='#2012-12-16#' />
          <member value='#2012-12-17#' />
          <member value='#2012-12-19#' />
          <member value='#2012-12-20#' />
          <member value='#2012-12-21#' />
          <member value='#2012-12-22#' />
          <member value='#2012-12-23#' />
          <member value='#2012-12-24#' />
          <member value='#2012-12-25#' />
          <member value='#2012-12-26#' />
          <member value='#2012-12-27#' />
          <member value='#2012-12-28#' />
          <member value='#2013-01-01#' />
          <member value='#2013-01-02#' />
          <member value='#2013-01-03#' />
          <member value='#2013-01-04#' />
          <member value='#2013-01-05#' />
          <member value='#2013-01-06#' />
          <member value='#2013-01-07#' />
          <member value='#2013-01-08#' />
          <member value='#2013-01-09#' />
          <member value='#2013-01-10#' />
          <member value='#2013-01-11#' />
          <member value='#2013-01-12#' />
          <member value='#2013-01-13#' />
          <member value='#2013-01-14#' />
          <member value='#2013-01-15#' />
          <member value='#2013-01-16#' />
          <member value='#2013-01-17#' />
          <member value='#2013-01-18#' />
          <member value='#2013-01-19#' />
          <member value='#2013-01-20#' />
          <member value='#2013-01-21#' />
          <member value='#2013-01-22#' />
          <member value='#2013-01-23#' />
          <member value='#2013-01-24#' />
          <member value='#2013-01-25#' />
          <member value='#2013-01-26#' />
          <member value='#2013-01-27#' />
          <member value='#2013-01-28#' />
          <member value='#2013-02-02#' />
          <member value='#2013-02-04#' />
          <member value='#2013-02-05#' />
          <member value='#2013-02-07#' />
          <member value='#2013-02-08#' />
          <member value='#2013-02-09#' />
          <member value='#2013-02-10#' />
          <member value='#2013-02-11#' />
          <member value='#2013-02-12#' />
          <member value='#2013-02-13#' />
          <member value='#2013-02-14#' />
          <member value='#2013-02-15#' />
          <member value='#2013-02-16#' />
          <member value='#2013-02-17#' />
          <member value='#2013-02-18#' />
          <member value='#2013-02-19#' />
          <member value='#2013-02-20#' />
          <member value='#2013-02-21#' />
          <member value='#2013-02-22#' />
          <member value='#2013-02-23#' />
          <member value='#2013-02-24#' />
          <member value='#2013-02-25#' />
          <member value='#2013-02-26#' />
          <member value='#2013-02-27#' />
          <member value='#2013-02-28#' />
          <member value='#2013-03-01#' />
          <member value='#2013-03-02#' />
          <member value='#2013-03-03#' />
          <member value='#2013-03-04#' />
          <member value='#2013-03-05#' />
          <member value='#2013-03-06#' />
          <member value='#2013-03-07#' />
          <member value='#2013-03-08#' />
          <member value='#2013-03-09#' />
          <member value='#2013-03-10#' />
          <member value='#2013-03-11#' />
          <member value='#2013-03-12#' />
          <member value='#2013-03-13#' />
          <member value='#2013-03-14#' />
          <member value='#2013-03-15#' />
          <member value='#2013-03-17#' />
          <member value='#2013-03-18#' />
          <member value='#2013-03-19#' />
          <member value='#2013-03-20#' />
          <member value='#2013-03-21#' />
          <member value='#2013-03-23#' />
          <member value='#2013-03-25#' />
          <member value='#2013-03-26#' />
          <member value='#2013-03-27#' />
          <member value='#2013-03-28#' />
          <member value='#2013-04-01#' />
          <member value='#2013-04-02#' />
          <member value='#2013-04-03#' />
          <member value='#2013-04-04#' />
          <member value='#2013-04-05#' />
          <member value='#2013-04-06#' />
          <member value='#2013-04-07#' />
          <member value='#2013-04-08#' />
          <member value='#2013-04-09#' />
          <member value='#2013-04-10#' />
          <member value='#2013-04-11#' />
          <member value='#2013-04-12#' />
          <member value='#2013-04-13#' />
          <member value='#2013-04-14#' />
          <member value='#2013-04-15#' />
          <member value='#2013-04-16#' />
          <member value='#2013-04-17#' />
          <member value='#2013-04-18#' />
          <member value='#2013-04-19#' />
          <member value='#2013-04-20#' />
          <member value='#2013-04-21#' />
          <member value='#2013-04-22#' />
          <member value='#2013-04-23#' />
          <member value='#2013-04-24#' />
          <member value='#2013-04-25#' />
          <member value='#2013-04-26#' />
          <member value='#2013-04-27#' />
          <member value='#2013-04-28#' />
          <member value='#2013-05-01#' />
          <member value='#2013-05-02#' />
          <member value='#2013-05-03#' />
          <member value='#2013-05-04#' />
          <member value='#2013-05-05#' />
          <member value='#2013-05-06#' />
          <member value='#2013-05-07#' />
          <member value='#2013-05-08#' />
          <member value='#2013-05-09#' />
          <member value='#2013-05-10#' />
          <member value='#2013-05-11#' />
          <member value='#2013-05-12#' />
          <member value='#2013-05-13#' />
          <member value='#2013-05-14#' />
          <member value='#2013-05-15#' />
          <member value='#2013-05-16#' />
          <member value='#2013-05-17#' />
          <member value='#2013-05-18#' />
          <member value='#2013-05-19#' />
          <member value='#2013-05-20#' />
          <member value='#2013-05-21#' />
          <member value='#2013-05-22#' />
          <member value='#2013-05-23#' />
          <member value='#2013-05-24#' />
          <member value='#2013-05-25#' />
          <member value='#2013-05-26#' />
          <member value='#2013-05-27#' />
          <member value='#2013-05-28#' />
          <member value='#2013-06-01#' />
          <member value='#2013-06-02#' />
          <member value='#2013-06-03#' />
          <member value='#2013-06-04#' />
          <member value='#2013-06-05#' />
          <member value='#2013-06-06#' />
          <member value='#2013-06-07#' />
          <member value='#2013-06-08#' />
          <member value='#2013-06-09#' />
          <member value='#2013-06-10#' />
          <member value='#2013-06-11#' />
          <member value='#2013-06-12#' />
          <member value='#2013-06-13#' />
          <member value='#2013-06-14#' />
          <member value='#2013-06-15#' />
          <member value='#2013-06-17#' />
          <member value='#2013-06-18#' />
          <member value='#2013-06-19#' />
          <member value='#2013-06-21#' />
          <member value='#2013-06-22#' />
          <member value='#2013-06-23#' />
          <member value='#2013-06-24#' />
          <member value='#2013-06-26#' />
          <member value='#2013-06-27#' />
          <member value='#2013-06-28#' />
          <member value='#2013-07-01#' />
          <member value='#2013-07-02#' />
          <member value='#2013-07-03#' />
          <member value='#2013-07-04#' />
          <member value='#2013-07-05#' />
          <member value='#2013-07-06#' />
          <member value='#2013-07-08#' />
          <member value='#2013-07-09#' />
          <member value='#2013-07-10#' />
          <member value='#2013-07-11#' />
          <member value='#2013-07-12#' />
          <member value='#2013-07-13#' />
          <member value='#2013-07-14#' />
          <member value='#2013-07-15#' />
          <member value='#2013-07-16#' />
          <member value='#2013-07-17#' />
          <member value='#2013-07-18#' />
          <member value='#2013-07-19#' />
          <member value='#2013-07-20#' />
          <member value='#2013-07-21#' />
          <member value='#2013-07-22#' />
          <member value='#2013-07-23#' />
          <member value='#2013-07-24#' />
          <member value='#2013-07-25#' />
          <member value='#2013-07-26#' />
          <member value='#2013-07-27#' />
          <member value='#2013-07-28#' />
          <member value='#2013-08-01#' />
          <member value='#2013-08-02#' />
          <member value='#2013-08-03#' />
          <member value='#2013-08-04#' />
          <member value='#2013-08-05#' />
          <member value='#2013-08-06#' />
          <member value='#2013-08-07#' />
          <member value='#2013-08-08#' />
          <member value='#2013-08-09#' />
          <member value='#2013-08-10#' />
          <member value='#2013-08-11#' />
          <member value='#2013-08-12#' />
          <member value='#2013-08-13#' />
          <member value='#2013-08-14#' />
          <member value='#2013-08-15#' />
          <member value='#2013-08-17#' />
          <member value='#2013-08-18#' />
          <member value='#2013-08-19#' />
          <member value='#2013-08-20#' />
          <member value='#2013-08-21#' />
          <member value='#2013-08-22#' />
          <member value='#2013-08-23#' />
          <member value='#2013-08-24#' />
          <member value='#2013-08-25#' />
          <member value='#2013-08-26#' />
          <member value='#2013-08-27#' />
          <member value='#2013-08-28#' />
          <member value='#2013-09-01#' />
          <member value='#2013-09-02#' />
          <member value='#2013-09-03#' />
          <member value='#2013-09-04#' />
          <member value='#2013-09-05#' />
          <member value='#2013-09-06#' />
          <member value='#2013-09-07#' />
          <member value='#2013-09-08#' />
          <member value='#2013-09-09#' />
          <member value='#2013-09-10#' />
          <member value='#2013-09-11#' />
          <member value='#2013-09-12#' />
          <member value='#2013-09-13#' />
          <member value='#2013-09-14#' />
          <member value='#2013-09-15#' />
          <member value='#2013-09-16#' />
          <member value='#2013-09-17#' />
          <member value='#2013-09-18#' />
          <member value='#2013-09-19#' />
          <member value='#2013-09-20#' />
          <member value='#2013-09-21#' />
          <member value='#2013-09-22#' />
          <member value='#2013-09-23#' />
          <member value='#2013-09-24#' />
          <member value='#2013-09-25#' />
          <member value='#2013-09-26#' />
          <member value='#2013-09-27#' />
          <member value='#2013-09-28#' />
          <member value='#2013-10-01#' />
          <member value='#2013-10-02#' />
          <member value='#2013-10-03#' />
          <member value='#2013-10-04#' />
          <member value='#2013-10-05#' />
          <member value='#2013-10-06#' />
          <member value='#2013-10-07#' />
          <member value='#2013-10-08#' />
          <member value='#2013-10-09#' />
          <member value='#2013-10-10#' />
          <member value='#2013-10-11#' />
          <member value='#2013-10-12#' />
          <member value='#2013-10-13#' />
          <member value='#2013-10-14#' />
          <member value='#2013-10-15#' />
          <member value='#2013-10-16#' />
          <member value='#2013-10-17#' />
          <member value='#2013-10-18#' />
          <member value='#2013-10-19#' />
          <member value='#2013-10-20#' />
          <member value='#2013-10-21#' />
          <member value='#2013-10-22#' />
          <member value='#2013-10-23#' />
          <member value='#2013-10-24#' />
          <member value='#2013-10-25#' />
          <member value='#2013-10-26#' />
          <member value='#2013-10-28#' />
          <member value='#2013-11-01#' />
          <member value='#2013-11-02#' />
          <member value='#2013-11-03#' />
          <member value='#2013-11-04#' />
          <member value='#2013-11-06#' />
          <member value='#2013-11-07#' />
          <member value='#2013-11-08#' />
          <member value='#2013-11-09#' />
          <member value='#2013-11-10#' />
          <member value='#2013-11-11#' />
          <member value='#2013-11-12#' />
          <member value='#2013-11-13#' />
          <member value='#2013-11-14#' />
          <member value='#2013-11-15#' />
          <member value='#2013-11-16#' />
          <member value='#2013-11-17#' />
          <member value='#2013-11-18#' />
          <member value='#2013-11-19#' />
          <member value='#2013-11-20#' />
          <member value='#2013-11-21#' />
          <member value='#2013-11-22#' />
          <member value='#2013-11-23#' />
          <member value='#2013-11-24#' />
          <member value='#2013-11-25#' />
          <member value='#2013-11-26#' />
          <member value='#2013-11-27#' />
          <member value='#2013-11-28#' />
          <member value='#2013-12-01#' />
          <member value='#2013-12-02#' />
          <member value='#2013-12-03#' />
          <member value='#2013-12-04#' />
          <member value='#2013-12-05#' />
          <member value='#2013-12-06#' />
          <member value='#2013-12-07#' />
          <member value='#2013-12-08#' />
          <member value='#2013-12-09#' />
          <member value='#2013-12-10#' />
          <member value='#2013-12-11#' />
          <member value='#2013-12-12#' />
          <member value='#2013-12-13#' />
          <member value='#2013-12-14#' />
          <member value='#2013-12-15#' />
          <member value='#2013-12-16#' />
          <member value='#2013-12-17#' />
          <member value='#2013-12-18#' />
          <member value='#2013-12-19#' />
          <member value='#2013-12-22#' />
          <member value='#2013-12-23#' />
          <member value='#2013-12-24#' />
          <member value='#2013-12-25#' />
          <member value='#2013-12-26#' />
          <member value='#2013-12-27#' />
          <member value='#2013-12-28#' />
          <member value='#2014-01-01#' />
          <member value='#2014-01-02#' />
          <member value='#2014-01-03#' />
          <member value='#2014-01-04#' />
          <member value='#2014-01-05#' />
          <member value='#2014-01-06#' />
          <member value='#2014-01-07#' />
          <member value='#2014-01-08#' />
          <member value='#2014-01-09#' />
          <member value='#2014-01-10#' />
          <member value='#2014-01-11#' />
          <member value='#2014-01-12#' />
          <member value='#2014-01-13#' />
          <member value='#2014-01-14#' />
          <member value='#2014-01-15#' />
          <member value='#2014-01-16#' />
          <member value='#2014-01-17#' />
          <member value='#2014-01-18#' />
          <member value='#2014-01-19#' />
          <member value='#2014-01-20#' />
          <member value='#2014-01-21#' />
          <member value='#2014-01-22#' />
          <member value='#2014-01-24#' />
          <member value='#2014-01-25#' />
          <member value='#2014-01-26#' />
          <member value='#2014-01-27#' />
          <member value='#2014-01-28#' />
          <member value='#2014-02-01#' />
          <member value='#2014-02-02#' />
          <member value='#2014-02-03#' />
          <member value='#2014-02-04#' />
          <member value='#2014-02-05#' />
          <member value='#2014-02-06#' />
          <member value='#2014-02-07#' />
          <member value='#2014-02-08#' />
          <member value='#2014-02-09#' />
          <member value='#2014-02-10#' />
          <member value='#2014-02-11#' />
          <member value='#2014-02-12#' />
          <member value='#2014-02-13#' />
          <member value='#2014-02-14#' />
          <member value='#2014-02-15#' />
          <member value='#2014-02-16#' />
          <member value='#2014-02-17#' />
          <member value='#2014-02-18#' />
          <member value='#2014-02-19#' />
          <member value='#2014-02-20#' />
          <member value='#2014-02-21#' />
          <member value='#2014-02-22#' />
          <member value='#2014-02-23#' />
          <member value='#2014-02-24#' />
          <member value='#2014-02-25#' />
          <member value='#2014-02-26#' />
          <member value='#2014-02-27#' />
          <member value='#2014-02-28#' />
          <member value='#2014-03-01#' />
          <member value='#2014-03-02#' />
          <member value='#2014-03-03#' />
          <member value='#2014-03-04#' />
          <member value='#2014-03-05#' />
          <member value='#2014-03-06#' />
          <member value='#2014-03-07#' />
          <member value='#2014-03-08#' />
          <member value='#2014-03-09#' />
          <member value='#2014-03-10#' />
          <member value='#2014-03-11#' />
          <member value='#2014-03-12#' />
          <member value='#2014-03-13#' />
          <member value='#2014-03-14#' />
          <member value='#2014-03-15#' />
          <member value='#2014-03-16#' />
          <member value='#2014-03-18#' />
          <member value='#2014-03-19#' />
          <member value='#2014-03-21#' />
          <member value='#2014-03-22#' />
          <member value='#2014-03-23#' />
          <member value='#2014-03-24#' />
          <member value='#2014-03-25#' />
          <member value='#2014-03-26#' />
          <member value='#2014-03-27#' />
          <member value='#2014-03-28#' />
          <member value='#2014-04-01#' />
          <member value='#2014-04-02#' />
          <member value='#2014-04-03#' />
          <member value='#2014-04-04#' />
          <member value='#2014-04-05#' />
          <member value='#2014-04-06#' />
          <member value='#2014-04-07#' />
          <member value='#2014-04-08#' />
          <member value='#2014-04-09#' />
          <member value='#2014-04-10#' />
          <member value='#2014-04-11#' />
          <member value='#2014-04-12#' />
          <member value='#2014-04-13#' />
          <member value='#2014-04-14#' />
          <member value='#2014-04-15#' />
          <member value='#2014-04-16#' />
          <member value='#2014-04-17#' />
          <member value='#2014-04-19#' />
          <member value='#2014-04-20#' />
          <member value='#2014-04-22#' />
          <member value='#2014-04-23#' />
          <member value='#2014-04-24#' />
          <member value='#2014-04-25#' />
          <member value='#2014-04-26#' />
          <member value='#2014-04-27#' />
          <member value='#2014-04-28#' />
          <member value='#2014-05-01#' />
          <member value='#2014-05-02#' />
          <member value='#2014-05-03#' />
          <member value='#2014-05-04#' />
          <member value='#2014-05-05#' />
          <member value='#2014-05-06#' />
          <member value='#2014-05-07#' />
          <member value='#2014-05-08#' />
          <member value='#2014-05-09#' />
          <member value='#2014-05-10#' />
          <member value='#2014-05-11#' />
          <member value='#2014-05-12#' />
          <member value='#2014-05-13#' />
          <member value='#2014-05-14#' />
          <member value='#2014-05-15#' />
          <member value='#2014-05-17#' />
          <member value='#2014-05-18#' />
          <member value='#2014-05-19#' />
          <member value='#2014-05-20#' />
          <member value='#2014-05-21#' />
          <member value='#2014-05-23#' />
          <member value='#2014-05-25#' />
          <member value='#2014-05-27#' />
          <member value='#2014-06-01#' />
          <member value='#2014-06-02#' />
          <member value='#2014-06-03#' />
          <member value='#2014-06-04#' />
          <member value='#2014-06-06#' />
          <member value='#2014-06-07#' />
          <member value='#2014-06-08#' />
          <member value='#2014-06-09#' />
          <member value='#2014-06-10#' />
          <member value='#2014-06-11#' />
          <member value='#2014-06-12#' />
          <member value='#2014-06-13#' />
          <member value='#2014-06-14#' />
          <member value='#2014-06-15#' />
          <member value='#2014-06-16#' />
          <member value='#2014-06-17#' />
          <member value='#2014-06-18#' />
          <member value='#2014-06-19#' />
          <member value='#2014-06-20#' />
          <member value='#2014-06-21#' />
          <member value='#2014-06-22#' />
          <member value='#2014-06-23#' />
          <member value='#2014-06-24#' />
          <member value='#2014-06-25#' />
          <member value='#2014-06-26#' />
          <member value='#2014-06-27#' />
          <member value='#2014-06-28#' />
          <member value='#2014-07-01#' />
          <member value='#2014-07-02#' />
          <member value='#2014-07-03#' />
          <member value='#2014-07-04#' />
          <member value='#2014-07-05#' />
          <member value='#2014-07-06#' />
          <member value='#2014-07-07#' />
          <member value='#2014-07-08#' />
          <member value='#2014-07-09#' />
          <member value='#2014-07-10#' />
          <member value='#2014-07-11#' />
          <member value='#2014-07-12#' />
          <member value='#2014-07-13#' />
          <member value='#2014-07-14#' />
          <member value='#2014-07-15#' />
          <member value='#2014-07-16#' />
          <member value='#2014-07-17#' />
          <member value='#2014-07-18#' />
          <member value='#2014-07-20#' />
          <member value='#2014-07-21#' />
          <member value='#2014-07-22#' />
          <member value='#2014-07-23#' />
          <member value='#2014-07-24#' />
          <member value='#2014-07-25#' />
          <member value='#2014-07-26#' />
          <member value='#2014-07-27#' />
          <member value='#2014-07-28#' />
          <member value='#2014-08-01#' />
          <member value='#2014-08-02#' />
          <member value='#2014-08-03#' />
          <member value='#2014-08-04#' />
          <member value='#2014-08-05#' />
          <member value='#2014-08-06#' />
          <member value='#2014-08-07#' />
          <member value='#2014-08-08#' />
          <member value='#2014-08-09#' />
          <member value='#2014-08-10#' />
          <member value='#2014-08-11#' />
          <member value='#2014-08-12#' />
          <member value='#2014-08-14#' />
          <member value='#2014-08-15#' />
          <member value='#2014-08-16#' />
          <member value='#2014-08-17#' />
          <member value='#2014-08-18#' />
          <member value='#2014-08-19#' />
          <member value='#2014-08-20#' />
          <member value='#2014-08-21#' />
          <member value='#2014-08-22#' />
          <member value='#2014-08-23#' />
          <member value='#2014-08-24#' />
          <member value='#2014-08-25#' />
          <member value='#2014-08-26#' />
          <member value='#2014-08-27#' />
          <member value='#2014-08-28#' />
          <member value='#2014-09-01#' />
          <member value='#2014-09-02#' />
          <member value='#2014-09-03#' />
          <member value='#2014-09-04#' />
          <member value='#2014-09-05#' />
          <member value='#2014-09-06#' />
          <member value='#2014-09-07#' />
          <member value='#2014-09-08#' />
          <member value='#2014-09-09#' />
          <member value='#2014-09-10#' />
          <member value='#2014-09-11#' />
          <member value='#2014-09-12#' />
          <member value='#2014-09-13#' />
          <member value='#2014-09-15#' />
          <member value='#2014-09-16#' />
          <member value='#2014-09-17#' />
          <member value='#2014-09-18#' />
          <member value='#2014-09-19#' />
          <member value='#2014-09-20#' />
          <member value='#2014-09-21#' />
          <member value='#2014-09-22#' />
          <member value='#2014-09-23#' />
          <member value='#2014-09-24#' />
          <member value='#2014-09-25#' />
          <member value='#2014-09-26#' />
          <member value='#2014-09-27#' />
          <member value='#2014-09-28#' />
          <member value='#2014-10-02#' />
          <member value='#2014-10-03#' />
          <member value='#2014-10-04#' />
          <member value='#2014-10-05#' />
          <member value='#2014-10-06#' />
          <member value='#2014-10-07#' />
          <member value='#2014-10-08#' />
          <member value='#2014-10-09#' />
          <member value='#2014-10-10#' />
          <member value='#2014-10-11#' />
          <member value='#2014-10-12#' />
          <member value='#2014-10-13#' />
          <member value='#2014-10-14#' />
          <member value='#2014-10-15#' />
          <member value='#2014-10-16#' />
          <member value='#2014-10-17#' />
          <member value='#2014-10-18#' />
          <member value='#2014-10-19#' />
          <member value='#2014-10-20#' />
          <member value='#2014-10-21#' />
          <member value='#2014-10-23#' />
          <member value='#2014-10-24#' />
          <member value='#2014-10-25#' />
          <member value='#2014-10-26#' />
          <member value='#2014-10-27#' />
          <member value='#2014-10-28#' />
          <member value='#2014-11-01#' />
          <member value='#2014-11-02#' />
          <member value='#2014-11-03#' />
          <member value='#2014-11-04#' />
          <member value='#2014-11-05#' />
          <member value='#2014-11-06#' />
          <member value='#2014-11-07#' />
          <member value='#2014-11-08#' />
          <member value='#2014-11-09#' />
          <member value='#2014-11-10#' />
          <member value='#2014-11-12#' />
          <member value='#2014-11-13#' />
          <member value='#2014-11-14#' />
          <member value='#2014-11-15#' />
          <member value='#2014-11-16#' />
          <member value='#2014-11-17#' />
          <member value='#2014-11-18#' />
          <member value='#2014-11-19#' />
          <member value='#2014-11-20#' />
          <member value='#2014-11-21#' />
          <member value='#2014-11-22#' />
          <member value='#2014-11-23#' />
          <member value='#2014-11-24#' />
          <member value='#2014-11-25#' />
          <member value='#2014-11-26#' />
          <member value='#2014-11-27#' />
          <member value='#2014-11-28#' />
          <member value='#2014-12-01#' />
          <member value='#2014-12-02#' />
          <member value='#2014-12-03#' />
          <member value='#2014-12-04#' />
          <member value='#2014-12-05#' />
          <member value='#2014-12-06#' />
          <member value='#2014-12-07#' />
          <member value='#2014-12-08#' />
          <member value='#2014-12-09#' />
          <member value='#2014-12-10#' />
          <member value='#2014-12-11#' />
          <member value='#2014-12-12#' />
          <member value='#2014-12-13#' />
          <member value='#2014-12-14#' />
          <member value='#2014-12-15#' />
          <member value='#2014-12-16#' />
          <member value='#2014-12-17#' />
          <member value='#2014-12-18#' />
          <member value='#2014-12-19#' />
          <member value='#2014-12-20#' />
          <member value='#2014-12-21#' />
          <member value='#2014-12-22#' />
          <member value='#2014-12-23#' />
          <member value='#2014-12-24#' />
          <member value='#2014-12-25#' />
          <member value='#2014-12-26#' />
          <member value='#2014-12-28#' />
          <member value='#2015-01-01#' />
          <member value='#2015-01-02#' />
          <member value='#2015-01-03#' />
          <member value='#2015-01-04#' />
          <member value='#2015-01-05#' />
          <member value='#2015-01-07#' />
          <member value='#2015-01-08#' />
          <member value='#2015-01-09#' />
          <member value='#2015-01-10#' />
          <member value='#2015-01-11#' />
          <member value='#2015-01-12#' />
          <member value='#2015-01-14#' />
          <member value='#2015-01-15#' />
          <member value='#2015-01-16#' />
          <member value='#2015-01-17#' />
          <member value='#2015-01-18#' />
          <member value='#2015-01-19#' />
          <member value='#2015-01-20#' />
          <member value='#2015-01-21#' />
          <member value='#2015-01-22#' />
          <member value='#2015-01-23#' />
          <member value='#2015-01-25#' />
          <member value='#2015-01-26#' />
          <member value='#2015-01-27#' />
          <member value='#2015-01-28#' />
          <member value='#2015-02-01#' />
          <member value='#2015-02-02#' />
          <member value='#2015-02-03#' />
          <member value='#2015-02-04#' />
          <member value='#2015-02-05#' />
          <member value='#2015-02-06#' />
          <member value='#2015-02-07#' />
          <member value='#2015-02-08#' />
          <member value='#2015-02-09#' />
          <member value='#2015-02-10#' />
          <member value='#2015-02-12#' />
          <member value='#2015-02-13#' />
          <member value='#2015-02-14#' />
          <member value='#2015-02-15#' />
          <member value='#2015-02-16#' />
          <member value='#2015-02-17#' />
          <member value='#2015-02-18#' />
          <member value='#2015-02-19#' />
          <member value='#2015-02-20#' />
          <member value='#2015-02-21#' />
          <member value='#2015-02-22#' />
          <member value='#2015-02-23#' />
          <member value='#2015-02-24#' />
          <member value='#2015-02-25#' />
          <member value='#2015-02-26#' />
          <member value='#2015-02-27#' />
          <member value='#2015-02-28#' />
          <member value='#2015-03-01#' />
          <member value='#2015-03-02#' />
          <member value='#2015-03-03#' />
          <member value='#2015-03-04#' />
          <member value='#2015-03-05#' />
          <member value='#2015-03-06#' />
          <member value='#2015-03-07#' />
          <member value='#2015-03-08#' />
          <member value='#2015-03-09#' />
          <member value='#2015-03-10#' />
          <member value='#2015-03-11#' />
          <member value='#2015-03-12#' />
          <member value='#2015-03-13#' />
          <member value='#2015-03-14#' />
          <member value='#2015-03-15#' />
          <member value='#2015-03-16#' />
          <member value='#2015-03-17#' />
          <member value='#2015-03-18#' />
          <member value='#2015-03-19#' />
          <member value='#2015-03-20#' />
          <member value='#2015-03-21#' />
          <member value='#2015-03-22#' />
          <member value='#2015-03-23#' />
          <member value='#2015-03-24#' />
          <member value='#2015-03-25#' />
          <member value='#2015-03-26#' />
          <member value='#2015-03-27#' />
          <member value='#2015-03-28#' />
          <member value='#2015-04-01#' />
          <member value='#2015-04-02#' />
          <member value='#2015-04-03#' />
          <member value='#2015-04-04#' />
          <member value='#2015-04-05#' />
          <member value='#2015-04-06#' />
          <member value='#2015-04-07#' />
          <member value='#2015-04-08#' />
          <member value='#2015-04-09#' />
          <member value='#2015-04-10#' />
          <member value='#2015-04-12#' />
          <member value='#2015-04-13#' />
          <member value='#2015-04-14#' />
          <member value='#2015-04-15#' />
          <member value='#2015-04-16#' />
          <member value='#2015-04-17#' />
          <member value='#2015-04-18#' />
          <member value='#2015-04-19#' />
          <member value='#2015-04-20#' />
          <member value='#2015-04-21#' />
          <member value='#2015-04-22#' />
          <member value='#2015-04-23#' />
          <member value='#2015-04-24#' />
          <member value='#2015-04-25#' />
          <member value='#2015-04-26#' />
          <member value='#2015-04-27#' />
          <member value='#2015-04-28#' />
          <member value='#2015-05-01#' />
          <member value='#2015-05-02#' />
          <member value='#2015-05-03#' />
          <member value='#2015-05-04#' />
          <member value='#2015-05-05#' />
          <member value='#2015-05-06#' />
          <member value='#2015-05-07#' />
          <member value='#2015-05-08#' />
          <member value='#2015-05-09#' />
          <member value='#2015-05-10#' />
          <member value='#2015-05-11#' />
          <member value='#2015-05-12#' />
          <member value='#2015-05-13#' />
          <member value='#2015-05-14#' />
          <member value='#2015-05-15#' />
          <member value='#2015-05-16#' />
          <member value='#2015-05-17#' />
          <member value='#2015-05-18#' />
          <member value='#2015-05-19#' />
          <member value='#2015-05-20#' />
          <member value='#2015-05-21#' />
          <member value='#2015-05-22#' />
          <member value='#2015-05-23#' />
          <member value='#2015-05-24#' />
          <member value='#2015-05-25#' />
          <member value='#2015-05-26#' />
          <member value='#2015-05-27#' />
          <member value='#2015-05-28#' />
          <member value='#2015-06-01#' />
          <member value='#2015-06-02#' />
          <member value='#2015-06-03#' />
          <member value='#2015-06-04#' />
          <member value='#2015-06-05#' />
          <member value='#2015-06-06#' />
          <member value='#2015-06-07#' />
          <member value='#2015-06-08#' />
          <member value='#2015-06-10#' />
          <member value='#2015-06-11#' />
          <member value='#2015-06-12#' />
          <member value='#2015-06-13#' />
          <member value='#2015-06-14#' />
          <member value='#2015-06-15#' />
          <member value='#2015-06-16#' />
          <member value='#2015-06-17#' />
          <member value='#2015-06-18#' />
          <member value='#2015-06-19#' />
          <member value='#2015-06-20#' />
          <member value='#2015-06-21#' />
          <member value='#2015-06-22#' />
          <member value='#2015-06-23#' />
          <member value='#2015-06-24#' />
          <member value='#2015-06-26#' />
          <member value='#2015-06-27#' />
          <member value='#2015-06-28#' />
          <member value='#2015-07-01#' />
          <member value='#2015-07-02#' />
          <member value='#2015-07-03#' />
          <member value='#2015-07-04#' />
          <member value='#2015-07-05#' />
          <member value='#2015-07-06#' />
          <member value='#2015-07-07#' />
          <member value='#2015-07-08#' />
          <member value='#2015-07-09#' />
          <member value='#2015-07-10#' />
          <member value='#2015-07-11#' />
          <member value='#2015-07-12#' />
          <member value='#2015-07-13#' />
          <member value='#2015-07-14#' />
          <member value='#2015-07-15#' />
          <member value='#2015-07-16#' />
          <member value='#2015-07-17#' />
          <member value='#2015-07-18#' />
          <member value='#2015-07-19#' />
          <member value='#2015-07-20#' />
          <member value='#2015-07-21#' />
          <member value='#2015-07-22#' />
          <member value='#2015-07-23#' />
          <member value='#2015-07-24#' />
          <member value='#2015-07-25#' />
          <member value='#2015-07-26#' />
          <member value='#2015-07-27#' />
          <member value='#2015-07-28#' />
          <member value='#2015-08-01#' />
          <member value='#2015-08-02#' />
          <member value='#2015-08-03#' />
          <member value='#2015-08-05#' />
          <member value='#2015-08-06#' />
          <member value='#2015-08-07#' />
          <member value='#2015-08-08#' />
          <member value='#2015-08-09#' />
          <member value='#2015-08-10#' />
          <member value='#2015-08-11#' />
          <member value='#2015-08-12#' />
          <member value='#2015-08-13#' />
          <member value='#2015-08-14#' />
          <member value='#2015-08-15#' />
          <member value='#2015-08-16#' />
          <member value='#2015-08-17#' />
          <member value='#2015-08-19#' />
          <member value='#2015-08-20#' />
          <member value='#2015-08-21#' />
          <member value='#2015-08-22#' />
          <member value='#2015-08-23#' />
          <member value='#2015-08-24#' />
          <member value='#2015-08-25#' />
          <member value='#2015-08-26#' />
          <member value='#2015-08-27#' />
          <member value='#2015-08-28#' />
          <member value='#2015-09-01#' />
          <member value='#2015-09-02#' />
          <member value='#2015-09-03#' />
          <member value='#2015-09-04#' />
          <member value='#2015-09-05#' />
          <member value='#2015-09-06#' />
          <member value='#2015-09-08#' />
          <member value='#2015-09-09#' />
          <member value='#2015-09-10#' />
          <member value='#2015-09-11#' />
          <member value='#2015-09-12#' />
          <member value='#2015-09-13#' />
          <member value='#2015-09-14#' />
          <member value='#2015-09-15#' />
          <member value='#2015-09-16#' />
          <member value='#2015-09-18#' />
          <member value='#2015-09-19#' />
          <member value='#2015-09-20#' />
          <member value='#2015-09-21#' />
          <member value='#2015-09-22#' />
          <member value='#2015-09-24#' />
          <member value='#2015-09-25#' />
          <member value='#2015-09-26#' />
          <member value='#2015-09-27#' />
          <member value='#2015-09-28#' />
          <member value='#2015-10-01#' />
          <member value='#2015-10-02#' />
          <member value='#2015-10-03#' />
          <member value='#2015-10-04#' />
          <member value='#2015-10-05#' />
          <member value='#2015-10-06#' />
          <member value='#2015-10-07#' />
          <member value='#2015-10-08#' />
          <member value='#2015-10-09#' />
          <member value='#2015-10-10#' />
          <member value='#2015-10-11#' />
          <member value='#2015-10-12#' />
          <member value='#2015-10-13#' />
          <member value='#2015-10-14#' />
          <member value='#2015-10-15#' />
          <member value='#2015-10-16#' />
          <member value='#2015-10-17#' />
          <member value='#2015-10-18#' />
          <member value='#2015-10-19#' />
          <member value='#2015-10-20#' />
          <member value='#2015-10-21#' />
          <member value='#2015-10-22#' />
          <member value='#2015-10-23#' />
          <member value='#2015-10-24#' />
          <member value='#2015-10-25#' />
          <member value='#2015-10-26#' />
          <member value='#2015-10-27#' />
          <member value='#2015-10-28#' />
          <member value='#2015-11-01#' />
          <member value='#2015-11-02#' />
          <member value='#2015-11-03#' />
          <member value='#2015-11-04#' />
          <member value='#2015-11-05#' />
          <member value='#2015-11-06#' />
          <member value='#2015-11-07#' />
          <member value='#2015-11-08#' />
          <member value='#2015-11-09#' />
          <member value='#2015-11-10#' />
          <member value='#2015-11-11#' />
          <member value='#2015-11-13#' />
          <member value='#2015-11-14#' />
          <member value='#2015-11-15#' />
          <member value='#2015-11-16#' />
          <member value='#2015-11-17#' />
          <member value='#2015-11-18#' />
          <member value='#2015-11-19#' />
          <member value='#2015-11-20#' />
          <member value='#2015-11-21#' />
          <member value='#2015-11-23#' />
          <member value='#2015-11-24#' />
          <member value='#2015-11-25#' />
          <member value='#2015-11-26#' />
          <member value='#2015-11-27#' />
          <member value='#2015-11-28#' />
          <member value='#2015-12-02#' />
          <member value='#2015-12-03#' />
          <member value='#2015-12-04#' />
          <member value='#2015-12-05#' />
          <member value='#2015-12-06#' />
          <member value='#2015-12-07#' />
          <member value='#2015-12-08#' />
          <member value='#2015-12-09#' />
          <member value='#2015-12-10#' />
          <member value='#2015-12-11#' />
          <member value='#2015-12-12#' />
          <member value='#2015-12-13#' />
          <member value='#2015-12-14#' />
          <member value='#2015-12-15#' />
          <member value='#2015-12-16#' />
          <member value='#2015-12-17#' />
          <member value='#2015-12-18#' />
          <member value='#2015-12-19#' />
          <member value='#2015-12-20#' />
          <member value='#2015-12-21#' />
          <member value='#2015-12-22#' />
          <member value='#2015-12-23#' />
          <member value='#2015-12-24#' />
          <member value='#2015-12-25#' />
          <member value='#2015-12-26#' />
          <member value='#2015-12-27#' />
          <member value='#2015-12-28#' />
          <member value='#2016-01-01#' />
          <member value='#2016-01-02#' />
          <member value='#2016-01-03#' />
          <member value='#2016-01-04#' />
          <member value='#2016-01-05#' />
          <member value='#2016-01-06#' />
          <member value='#2016-01-07#' />
          <member value='#2016-01-08#' />
          <member value='#2016-01-09#' />
          <member value='#2016-01-10#' />
          <member value='#2016-01-13#' />
          <member value='#2016-01-15#' />
          <member value='#2016-01-16#' />
          <member value='#2016-01-17#' />
          <member value='#2016-01-18#' />
          <member value='#2016-01-19#' />
          <member value='#2016-01-20#' />
          <member value='#2016-01-21#' />
          <member value='#2016-01-22#' />
          <member value='#2016-01-23#' />
          <member value='#2016-01-24#' />
          <member value='#2016-01-25#' />
          <member value='#2016-01-26#' />
          <member value='#2016-01-27#' />
          <member value='#2016-01-28#' />
          <member value='#2016-02-01#' />
          <member value='#2016-02-02#' />
          <member value='#2016-02-03#' />
          <member value='#2016-02-04#' />
          <member value='#2016-02-05#' />
          <member value='#2016-02-06#' />
          <member value='#2016-02-07#' />
          <member value='#2016-02-08#' />
          <member value='#2016-02-09#' />
          <member value='#2016-02-10#' />
          <member value='#2016-02-11#' />
          <member value='#2016-02-12#' />
          <member value='#2016-02-13#' />
          <member value='#2016-02-14#' />
          <member value='#2016-02-15#' />
          <member value='#2016-02-16#' />
          <member value='#2016-02-17#' />
          <member value='#2016-02-18#' />
          <member value='#2016-02-19#' />
          <member value='#2016-02-20#' />
          <member value='#2016-02-21#' />
          <member value='#2016-02-22#' />
          <member value='#2016-02-23#' />
          <member value='#2016-02-24#' />
          <member value='#2016-02-25#' />
          <member value='#2016-02-26#' />
          <member value='#2016-02-27#' />
          <member value='#2016-02-28#' />
          <member value='#2016-03-01#' />
          <member value='#2016-03-02#' />
          <member value='#2016-03-03#' />
          <member value='#2016-03-04#' />
          <member value='#2016-03-05#' />
          <member value='#2016-03-06#' />
          <member value='#2016-03-07#' />
          <member value='#2016-03-08#' />
          <member value='#2016-03-09#' />
          <member value='#2016-03-10#' />
          <member value='#2016-03-11#' />
          <member value='#2016-03-12#' />
          <member value='#2016-03-13#' />
          <member value='#2016-03-14#' />
          <member value='#2016-03-15#' />
          <member value='#2016-03-16#' />
          <member value='#2016-03-17#' />
          <member value='#2016-03-19#' />
          <member value='#2016-03-20#' />
          <member value='#2016-03-21#' />
          <member value='#2016-03-22#' />
          <member value='#2016-03-23#' />
          <member value='#2016-03-24#' />
          <member value='#2016-03-25#' />
          <member value='#2016-03-26#' />
          <member value='#2016-03-27#' />
          <member value='#2016-03-28#' />
          <member value='#2016-04-01#' />
          <member value='#2016-04-02#' />
          <member value='#2016-04-03#' />
          <member value='#2016-04-04#' />
          <member value='#2016-04-05#' />
          <member value='#2016-04-06#' />
          <member value='#2016-04-07#' />
          <member value='#2016-04-08#' />
          <member value='#2016-04-09#' />
          <member value='#2016-04-10#' />
          <member value='#2016-04-12#' />
          <member value='#2016-04-14#' />
          <member value='#2016-04-16#' />
          <member value='#2016-04-17#' />
          <member value='#2016-04-18#' />
          <member value='#2016-04-19#' />
          <member value='#2016-04-20#' />
          <member value='#2016-04-21#' />
          <member value='#2016-04-22#' />
          <member value='#2016-04-23#' />
          <member value='#2016-04-24#' />
          <member value='#2016-04-25#' />
          <member value='#2016-04-26#' />
          <member value='#2016-04-27#' />
          <member value='#2016-04-28#' />
          <member value='#2016-05-01#' />
          <member value='#2016-05-02#' />
          <member value='#2016-05-03#' />
          <member value='#2016-05-04#' />
          <member value='#2016-05-05#' />
          <member value='#2016-05-06#' />
          <member value='#2016-05-07#' />
          <member value='#2016-05-09#' />
          <member value='#2016-05-10#' />
          <member value='#2016-05-11#' />
          <member value='#2016-05-12#' />
          <member value='#2016-05-13#' />
          <member value='#2016-05-14#' />
          <member value='#2016-05-15#' />
          <member value='#2016-05-16#' />
          <member value='#2016-05-17#' />
          <member value='#2016-05-18#' />
          <member value='#2016-05-19#' />
          <member value='#2016-05-20#' />
          <member value='#2016-05-21#' />
          <member value='#2016-05-22#' />
          <member value='#2016-05-23#' />
          <member value='#2016-05-24#' />
          <member value='#2016-05-26#' />
          <member value='#2016-05-27#' />
          <member value='#2016-05-28#' />
          <member value='#2016-06-01#' />
          <member value='#2016-06-02#' />
          <member value='#2016-06-03#' />
          <member value='#2016-06-04#' />
          <member value='#2016-06-05#' />
          <member value='#2016-06-06#' />
          <member value='#2016-06-07#' />
          <member value='#2016-06-08#' />
          <member value='#2016-06-09#' />
          <member value='#2016-06-10#' />
          <member value='#2016-06-11#' />
          <member value='#2016-06-12#' />
          <member value='#2016-06-13#' />
          <member value='#2016-06-14#' />
          <member value='#2016-06-15#' />
          <member value='#2016-06-16#' />
          <member value='#2016-06-17#' />
          <member value='#2016-06-20#' />
          <member value='#2016-06-22#' />
          <member value='#2016-06-23#' />
          <member value='#2016-06-24#' />
          <member value='#2016-06-25#' />
          <member value='#2016-06-27#' />
          <member value='#2016-06-28#' />
          <member value='#2016-07-01#' />
          <member value='#2016-07-02#' />
          <member value='#2016-07-03#' />
          <member value='#2016-07-04#' />
          <member value='#2016-07-05#' />
          <member value='#2016-07-06#' />
          <member value='#2016-07-07#' />
          <member value='#2016-07-08#' />
          <member value='#2016-07-09#' />
          <member value='#2016-07-10#' />
          <member value='#2016-07-11#' />
          <member value='#2016-07-12#' />
          <member value='#2016-07-13#' />
          <member value='#2016-07-14#' />
          <member value='#2016-07-15#' />
          <member value='#2016-07-16#' />
          <member value='#2016-07-17#' />
          <member value='#2016-07-18#' />
          <member value='#2016-07-19#' />
          <member value='#2016-07-20#' />
          <member value='#2016-07-21#' />
          <member value='#2016-07-22#' />
          <member value='#2016-07-23#' />
          <member value='#2016-07-24#' />
          <member value='#2016-07-25#' />
          <member value='#2016-07-26#' />
          <member value='#2016-07-27#' />
          <member value='#2016-07-28#' />
          <member value='#2016-08-01#' />
          <member value='#2016-08-02#' />
          <member value='#2016-08-03#' />
          <member value='#2016-08-04#' />
          <member value='#2016-08-05#' />
          <member value='#2016-08-06#' />
          <member value='#2016-08-07#' />
          <member value='#2016-08-08#' />
          <member value='#2016-08-09#' />
          <member value='#2016-08-10#' />
          <member value='#2016-08-11#' />
          <member value='#2016-08-12#' />
          <member value='#2016-08-13#' />
          <member value='#2016-08-14#' />
          <member value='#2016-08-15#' />
          <member value='#2016-08-16#' />
          <member value='#2016-08-17#' />
          <member value='#2016-08-18#' />
          <member value='#2016-08-19#' />
          <member value='#2016-08-20#' />
          <member value='#2016-08-21#' />
          <member value='#2016-08-22#' />
          <member value='#2016-08-23#' />
          <member value='#2016-08-24#' />
          <member value='#2016-08-25#' />
          <member value='#2016-08-26#' />
          <member value='#2016-08-27#' />
          <member value='#2016-08-28#' />
          <member value='#2016-09-01#' />
          <member value='#2016-09-03#' />
          <member value='#2016-09-05#' />
          <member value='#2016-09-06#' />
          <member value='#2016-09-07#' />
          <member value='#2016-09-08#' />
          <member value='#2016-09-09#' />
          <member value='#2016-09-10#' />
          <member value='#2016-09-11#' />
          <member value='#2016-09-12#' />
          <member value='#2016-09-13#' />
          <member value='#2016-09-14#' />
          <member value='#2016-09-15#' />
          <member value='#2016-09-16#' />
          <member value='#2016-09-17#' />
          <member value='#2016-09-18#' />
          <member value='#2016-09-19#' />
          <member value='#2016-09-20#' />
          <member value='#2016-09-21#' />
          <member value='#2016-09-22#' />
          <member value='#2016-09-23#' />
          <member value='#2016-09-24#' />
          <member value='#2016-09-25#' />
          <member value='#2016-09-26#' />
          <member value='#2016-09-27#' />
          <member value='#2016-09-28#' />
          <member value='#2016-10-01#' />
          <member value='#2016-10-02#' />
          <member value='#2016-10-03#' />
          <member value='#2016-10-04#' />
          <member value='#2016-10-05#' />
          <member value='#2016-10-06#' />
          <member value='#2016-10-07#' />
          <member value='#2016-10-08#' />
          <member value='#2016-10-09#' />
          <member value='#2016-10-11#' />
          <member value='#2016-10-12#' />
          <member value='#2016-10-13#' />
          <member value='#2016-10-14#' />
          <member value='#2016-10-15#' />
          <member value='#2016-10-16#' />
          <member value='#2016-10-17#' />
          <member value='#2016-10-18#' />
          <member value='#2016-10-19#' />
          <member value='#2016-10-20#' />
          <member value='#2016-10-21#' />
          <member value='#2016-10-22#' />
          <member value='#2016-10-23#' />
          <member value='#2016-10-24#' />
          <member value='#2016-10-25#' />
          <member value='#2016-10-26#' />
          <member value='#2016-10-27#' />
          <member value='#2016-10-28#' />
          <member value='#2016-11-01#' />
          <member value='#2016-11-02#' />
          <member value='#2016-11-03#' />
          <member value='#2016-11-04#' />
          <member value='#2016-11-05#' />
          <member value='#2016-11-06#' />
          <member value='#2016-11-07#' />
          <member value='#2016-11-08#' />
          <member value='#2016-11-09#' />
          <member value='#2016-11-10#' />
          <member value='#2016-11-11#' />
          <member value='#2016-11-12#' />
          <member value='#2016-11-13#' />
          <member value='#2016-11-14#' />
          <member value='#2016-11-16#' />
          <member value='#2016-11-17#' />
          <member value='#2016-11-18#' />
          <member value='#2016-11-19#' />
          <member value='#2016-11-20#' />
          <member value='#2016-11-21#' />
          <member value='#2016-11-22#' />
          <member value='#2016-11-23#' />
          <member value='#2016-11-24#' />
          <member value='#2016-11-25#' />
          <member value='#2016-11-26#' />
          <member value='#2016-11-27#' />
          <member value='#2016-11-28#' />
          <member value='#2016-12-01#' />
          <member value='#2016-12-02#' />
          <member value='#2016-12-03#' />
          <member value='#2016-12-04#' />
          <member value='#2016-12-05#' />
          <member value='#2016-12-06#' />
          <member value='#2016-12-07#' />
          <member value='#2016-12-08#' />
          <member value='#2016-12-09#' />
          <member value='#2016-12-11#' />
          <member value='#2016-12-12#' />
          <member value='#2016-12-13#' />
          <member value='#2016-12-14#' />
          <member value='#2016-12-15#' />
          <member value='#2016-12-16#' />
          <member value='#2016-12-17#' />
          <member value='#2016-12-18#' />
          <member value='#2016-12-19#' />
          <member value='#2016-12-20#' />
          <member value='#2016-12-21#' />
          <member value='#2016-12-22#' />
          <member value='#2016-12-23#' />
          <member value='#2016-12-24#' />
          <member value='#2016-12-26#' />
          <member value='#2016-12-27#' />
          <member value='#2016-12-28#' />
          <member value='#2017-01-02#' />
          <member value='#2017-01-04#' />
          <member value='#2017-01-05#' />
          <member value='#2017-01-06#' />
          <member value='#2017-01-07#' />
          <member value='#2017-01-08#' />
          <member value='#2017-01-09#' />
          <member value='#2017-01-10#' />
          <member value='#2017-01-11#' />
          <member value='#2017-01-12#' />
          <member value='#2017-01-13#' />
          <member value='#2017-01-14#' />
          <member value='#2017-01-15#' />
          <member value='#2017-01-16#' />
          <member value='#2017-01-17#' />
          <member value='#2017-01-18#' />
          <member value='#2017-01-19#' />
          <member value='#2017-01-20#' />
          <member value='#2017-01-21#' />
          <member value='#2017-01-22#' />
          <member value='#2017-01-24#' />
          <member value='#2017-01-25#' />
          <member value='#2017-01-26#' />
          <member value='#2017-01-27#' />
          <member value='#2017-01-28#' />
          <member value='#2017-02-01#' />
          <member value='#2017-02-02#' />
          <member value='#2017-02-03#' />
          <member value='#2017-02-04#' />
          <member value='#2017-02-05#' />
          <member value='#2017-02-06#' />
          <member value='#2017-02-07#' />
          <member value='#2017-02-08#' />
          <member value='#2017-02-09#' />
          <member value='#2017-02-10#' />
          <member value='#2017-02-11#' />
          <member value='#2017-02-12#' />
          <member value='#2017-02-13#' />
          <member value='#2017-02-14#' />
          <member value='#2017-02-15#' />
          <member value='#2017-02-16#' />
          <member value='#2017-02-17#' />
          <member value='#2017-02-18#' />
          <member value='#2017-02-19#' />
          <member value='#2017-02-20#' />
          <member value='#2017-02-21#' />
          <member value='#2017-02-23#' />
          <member value='#2017-02-24#' />
          <member value='#2017-02-25#' />
          <member value='#2017-02-26#' />
          <member value='#2017-02-27#' />
          <member value='#2017-02-28#' />
          <member value='#2017-03-01#' />
          <member value='#2017-03-02#' />
          <member value='#2017-03-04#' />
          <member value='#2017-03-05#' />
          <member value='#2017-03-06#' />
          <member value='#2017-03-07#' />
          <member value='#2017-03-08#' />
          <member value='#2017-03-09#' />
          <member value='#2017-03-10#' />
          <member value='#2017-03-11#' />
          <member value='#2017-03-12#' />
          <member value='#2017-03-13#' />
          <member value='#2017-03-14#' />
          <member value='#2017-03-15#' />
          <member value='#2017-03-16#' />
          <member value='#2017-03-17#' />
          <member value='#2017-03-18#' />
          <member value='#2017-03-19#' />
          <member value='#2017-03-20#' />
          <member value='#2017-03-21#' />
          <member value='#2017-03-22#' />
          <member value='#2017-03-23#' />
          <member value='#2017-03-24#' />
          <member value='#2017-03-25#' />
          <member value='#2017-03-26#' />
          <member value='#2017-03-27#' />
          <member value='#2017-03-28#' />
          <member value='#2017-04-01#' />
          <member value='#2017-04-02#' />
          <member value='#2017-04-03#' />
          <member value='#2017-04-04#' />
          <member value='#2017-04-05#' />
          <member value='#2017-04-06#' />
          <member value='#2017-04-07#' />
          <member value='#2017-04-08#' />
          <member value='#2017-04-09#' />
          <member value='#2017-04-11#' />
          <member value='#2017-04-12#' />
          <member value='#2017-04-13#' />
          <member value='#2017-04-14#' />
          <member value='#2017-04-15#' />
          <member value='#2017-04-17#' />
          <member value='#2017-04-18#' />
          <member value='#2017-04-19#' />
          <member value='#2017-04-20#' />
          <member value='#2017-04-21#' />
          <member value='#2017-04-22#' />
          <member value='#2017-04-23#' />
          <member value='#2017-04-24#' />
          <member value='#2017-04-25#' />
          <member value='#2017-04-26#' />
          <member value='#2017-04-27#' />
          <member value='#2017-04-28#' />
          <member value='#2017-05-01#' />
          <member value='#2017-05-02#' />
          <member value='#2017-05-03#' />
          <member value='#2017-05-04#' />
          <member value='#2017-05-05#' />
          <member value='#2017-05-06#' />
          <member value='#2017-05-07#' />
          <member value='#2017-05-08#' />
          <member value='#2017-05-09#' />
          <member value='#2017-05-10#' />
          <member value='#2017-05-11#' />
          <member value='#2017-05-12#' />
          <member value='#2017-05-13#' />
          <member value='#2017-05-14#' />
          <member value='#2017-05-15#' />
          <member value='#2017-05-16#' />
          <member value='#2017-05-17#' />
          <member value='#2017-05-18#' />
          <member value='#2017-05-19#' />
          <member value='#2017-05-20#' />
          <member value='#2017-05-21#' />
          <member value='#2017-05-22#' />
          <member value='#2017-05-24#' />
          <member value='#2017-05-25#' />
          <member value='#2017-05-26#' />
          <member value='#2017-05-28#' />
          <member value='#2017-06-01#' />
          <member value='#2017-06-02#' />
          <member value='#2017-06-03#' />
          <member value='#2017-06-04#' />
          <member value='#2017-06-05#' />
          <member value='#2017-06-06#' />
          <member value='#2017-06-07#' />
          <member value='#2017-06-08#' />
          <member value='#2017-06-09#' />
          <member value='#2017-06-10#' />
          <member value='#2017-06-11#' />
          <member value='#2017-06-12#' />
          <member value='#2017-06-13#' />
          <member value='#2017-06-14#' />
          <member value='#2017-06-15#' />
          <member value='#2017-06-16#' />
          <member value='#2017-06-17#' />
          <member value='#2017-06-18#' />
          <member value='#2017-06-19#' />
          <member value='#2017-06-20#' />
          <member value='#2017-06-21#' />
          <member value='#2017-06-22#' />
          <member value='#2017-06-23#' />
          <member value='#2017-06-24#' />
          <member value='#2017-06-25#' />
          <member value='#2017-06-26#' />
          <member value='#2017-06-27#' />
          <member value='#2017-06-28#' />
          <member value='#2017-07-01#' />
          <member value='#2017-07-02#' />
          <member value='#2017-07-03#' />
          <member value='#2017-07-04#' />
          <member value='#2017-07-05#' />
          <member value='#2017-07-06#' />
          <member value='#2017-07-07#' />
          <member value='#2017-07-08#' />
          <member value='#2017-07-09#' />
          <member value='#2017-07-10#' />
          <member value='#2017-07-11#' />
          <member value='#2017-07-12#' />
          <member value='#2017-07-13#' />
          <member value='#2017-07-14#' />
          <member value='#2017-07-15#' />
          <member value='#2017-07-16#' />
          <member value='#2017-07-17#' />
          <member value='#2017-07-18#' />
          <member value='#2017-07-19#' />
          <member value='#2017-07-20#' />
          <member value='#2017-07-21#' />
          <member value='#2017-07-22#' />
          <member value='#2017-07-23#' />
          <member value='#2017-07-24#' />
          <member value='#2017-07-25#' />
          <member value='#2017-07-26#' />
          <member value='#2017-07-27#' />
          <member value='#2017-07-28#' />
          <member value='#2017-08-01#' />
          <member value='#2017-08-02#' />
          <member value='#2017-08-03#' />
          <member value='#2017-08-04#' />
          <member value='#2017-08-05#' />
          <member value='#2017-08-06#' />
          <member value='#2017-08-07#' />
          <member value='#2017-08-08#' />
          <member value='#2017-08-09#' />
          <member value='#2017-08-10#' />
          <member value='#2017-08-11#' />
          <member value='#2017-08-12#' />
          <member value='#2017-08-13#' />
          <member value='#2017-08-14#' />
          <member value='#2017-08-15#' />
          <member value='#2017-08-16#' />
          <member value='#2017-08-17#' />
          <member value='#2017-08-18#' />
          <member value='#2017-08-19#' />
          <member value='#2017-08-20#' />
          <member value='#2017-08-21#' />
          <member value='#2017-08-22#' />
          <member value='#2017-08-23#' />
          <member value='#2017-08-24#' />
          <member value='#2017-08-25#' />
          <member value='#2017-08-26#' />
          <member value='#2017-08-27#' />
          <member value='#2017-08-28#' />
          <member value='#2017-09-01#' />
          <member value='#2017-09-02#' />
          <member value='#2017-09-03#' />
          <member value='#2017-09-04#' />
          <member value='#2017-09-06#' />
          <member value='#2017-09-07#' />
          <member value='#2017-09-08#' />
          <member value='#2017-09-09#' />
          <member value='#2017-09-10#' />
          <member value='#2017-09-11#' />
          <member value='#2017-09-12#' />
          <member value='#2017-09-13#' />
          <member value='#2017-09-14#' />
          <member value='#2017-09-16#' />
          <member value='#2017-09-17#' />
          <member value='#2017-09-19#' />
          <member value='#2017-09-20#' />
          <member value='#2017-09-21#' />
          <member value='#2017-09-22#' />
          <member value='#2017-09-23#' />
          <member value='#2017-09-24#' />
          <member value='#2017-09-25#' />
          <member value='#2017-09-26#' />
          <member value='#2017-09-27#' />
          <member value='#2017-09-28#' />
          <member value='#2017-10-01#' />
          <member value='#2017-10-02#' />
          <member value='#2017-10-03#' />
          <member value='#2017-10-04#' />
          <member value='#2017-10-05#' />
          <member value='#2017-10-06#' />
          <member value='#2017-10-07#' />
          <member value='#2017-10-08#' />
          <member value='#2017-10-09#' />
          <member value='#2017-10-10#' />
          <member value='#2017-10-11#' />
          <member value='#2017-10-13#' />
          <member value='#2017-10-14#' />
          <member value='#2017-10-15#' />
          <member value='#2017-10-16#' />
          <member value='#2017-10-17#' />
          <member value='#2017-10-18#' />
          <member value='#2017-10-19#' />
          <member value='#2017-10-20#' />
          <member value='#2017-10-22#' />
          <member value='#2017-10-23#' />
          <member value='#2017-10-24#' />
          <member value='#2017-10-25#' />
          <member value='#2017-10-26#' />
          <member value='#2017-10-27#' />
          <member value='#2017-10-28#' />
          <member value='#2017-11-01#' />
          <member value='#2017-11-02#' />
          <member value='#2017-11-03#' />
          <member value='#2017-11-04#' />
          <member value='#2017-11-05#' />
          <member value='#2017-11-06#' />
          <member value='#2017-11-07#' />
          <member value='#2017-11-08#' />
          <member value='#2017-11-09#' />
          <member value='#2017-11-10#' />
          <member value='#2017-11-11#' />
          <member value='#2017-11-12#' />
          <member value='#2017-11-14#' />
          <member value='#2017-11-15#' />
          <member value='#2017-11-16#' />
          <member value='#2017-11-17#' />
          <member value='#2017-11-18#' />
          <member value='#2017-11-19#' />
          <member value='#2017-11-20#' />
          <member value='#2017-11-21#' />
          <member value='#2017-11-23#' />
          <member value='#2017-11-24#' />
          <member value='#2017-11-25#' />
          <member value='#2017-11-26#' />
          <member value='#2017-11-27#' />
          <member value='#2017-11-28#' />
          <member value='#2017-12-01#' />
          <member value='#2017-12-02#' />
          <member value='#2017-12-03#' />
          <member value='#2017-12-04#' />
          <member value='#2017-12-05#' />
          <member value='#2017-12-06#' />
          <member value='#2017-12-07#' />
          <member value='#2017-12-08#' />
          <member value='#2017-12-09#' />
          <member value='#2017-12-10#' />
          <member value='#2017-12-11#' />
          <member value='#2017-12-12#' />
          <member value='#2017-12-13#' />
          <member value='#2017-12-14#' />
          <member value='#2017-12-15#' />
          <member value='#2017-12-16#' />
          <member value='#2017-12-17#' />
          <member value='#2017-12-18#' />
          <member value='#2017-12-19#' />
          <member value='#2017-12-20#' />
          <member value='#2017-12-21#' />
          <member value='#2017-12-22#' />
          <member value='#2017-12-23#' />
          <member value='#2017-12-24#' />
          <member value='#2017-12-25#' />
          <member value='#2017-12-26#' />
          <member value='#2017-12-27#' />
          <member value='#2017-12-28#' />
          <member value='#2018-01-01#' />
          <member value='#2018-01-02#' />
          <member value='#2018-01-03#' />
          <member value='#2018-01-04#' />
          <member value='#2018-01-05#' />
          <member value='#2018-01-06#' />
          <member value='#2018-01-07#' />
          <member value='#2018-01-08#' />
          <member value='#2018-01-09#' />
          <member value='#2018-01-10#' />
          <member value='#2018-01-11#' />
          <member value='#2018-01-12#' />
          <member value='#2018-01-13#' />
          <member value='#2018-01-14#' />
          <member value='#2018-01-15#' />
          <member value='#2018-01-16#' />
          <member value='#2018-01-17#' />
          <member value='#2018-01-18#' />
          <member value='#2018-01-19#' />
          <member value='#2018-01-20#' />
          <member value='#2018-01-21#' />
          <member value='#2018-01-22#' />
          <member value='#2018-01-23#' />
          <member value='#2018-01-24#' />
          <member value='#2018-01-25#' />
          <member value='#2018-01-26#' />
          <member value='#2018-01-27#' />
          <member value='#2018-01-28#' />
          <member value='#2018-02-01#' />
          <member value='#2018-02-02#' />
          <member value='#2018-02-03#' />
          <member value='#2018-02-04#' />
          <member value='#2018-02-05#' />
          <member value='#2018-02-06#' />
          <member value='#2018-02-07#' />
          <member value='#2018-02-08#' />
          <member value='#2018-02-09#' />
          <member value='#2018-02-10#' />
          <member value='#2018-02-11#' />
          <member value='#2018-02-13#' />
          <member value='#2018-02-14#' />
          <member value='#2018-02-15#' />
          <member value='#2018-02-16#' />
          <member value='#2018-02-17#' />
          <member value='#2018-02-18#' />
          <member value='#2018-02-19#' />
          <member value='#2018-02-21#' />
          <member value='#2018-02-22#' />
          <member value='#2018-02-23#' />
          <member value='#2018-02-24#' />
          <member value='#2018-02-25#' />
          <member value='#2018-02-26#' />
          <member value='#2018-02-27#' />
          <member value='#2018-02-28#' />
          <member value='#2018-03-01#' />
          <member value='#2018-03-02#' />
          <member value='#2018-03-03#' />
          <member value='#2018-03-04#' />
          <member value='#2018-03-05#' />
          <member value='#2018-03-06#' />
          <member value='#2018-03-07#' />
          <member value='#2018-03-08#' />
          <member value='#2018-03-09#' />
          <member value='#2018-03-10#' />
          <member value='#2018-03-11#' />
          <member value='#2018-03-12#' />
          <member value='#2018-03-13#' />
          <member value='#2018-03-14#' />
          <member value='#2018-03-15#' />
          <member value='#2018-03-16#' />
          <member value='#2018-03-17#' />
          <member value='#2018-03-18#' />
          <member value='#2018-03-19#' />
          <member value='#2018-03-20#' />
          <member value='#2018-03-21#' />
          <member value='#2018-03-22#' />
          <member value='#2018-03-23#' />
          <member value='#2018-03-24#' />
          <member value='#2018-03-25#' />
          <member value='#2018-03-26#' />
          <member value='#2018-03-27#' />
          <member value='#2018-03-28#' />
          <member value='#2018-04-01#' />
          <member value='#2018-04-02#' />
          <member value='#2018-04-03#' />
          <member value='#2018-04-04#' />
          <member value='#2018-04-05#' />
          <member value='#2018-04-06#' />
          <member value='#2018-04-07#' />
          <member value='#2018-04-08#' />
          <member value='#2018-04-09#' />
          <member value='#2018-04-10#' />
          <member value='#2018-04-11#' />
          <member value='#2018-04-12#' />
          <member value='#2018-04-13#' />
          <member value='#2018-04-14#' />
          <member value='#2018-04-15#' />
          <member value='#2018-04-16#' />
          <member value='#2018-04-17#' />
          <member value='#2018-04-18#' />
          <member value='#2018-04-19#' />
          <member value='#2018-04-20#' />
          <member value='#2018-04-21#' />
          <member value='#2018-04-22#' />
          <member value='#2018-04-23#' />
          <member value='#2018-04-24#' />
          <member value='#2018-04-25#' />
          <member value='#2018-04-26#' />
          <member value='#2018-04-27#' />
          <member value='#2018-04-28#' />
          <member value='#2018-05-01#' />
          <member value='#2018-05-02#' />
          <member value='#2018-05-03#' />
          <member value='#2018-05-04#' />
          <member value='#2018-05-05#' />
          <member value='#2018-05-07#' />
          <member value='#2018-05-08#' />
          <member value='#2018-05-09#' />
          <member value='#2018-05-10#' />
          <member value='#2018-05-11#' />
          <member value='#2018-05-12#' />
          <member value='#2018-05-13#' />
          <member value='#2018-05-14#' />
          <member value='#2018-05-15#' />
          <member value='#2018-05-16#' />
          <member value='#2018-05-17#' />
          <member value='#2018-05-18#' />
          <member value='#2018-05-19#' />
          <member value='#2018-05-22#' />
          <member value='#2018-05-24#' />
          <member value='#2018-05-25#' />
          <member value='#2018-05-26#' />
          <member value='#2018-05-27#' />
          <member value='#2018-05-28#' />
          <member value='#2018-06-01#' />
          <member value='#2018-06-02#' />
          <member value='#2018-06-03#' />
          <member value='#2018-06-04#' />
          <member value='#2018-06-05#' />
          <member value='#2018-06-06#' />
          <member value='#2018-06-07#' />
          <member value='#2018-06-08#' />
          <member value='#2018-06-09#' />
          <member value='#2018-06-10#' />
          <member value='#2018-06-11#' />
          <member value='#2018-06-12#' />
          <member value='#2018-06-13#' />
          <member value='#2018-06-14#' />
          <member value='#2018-06-15#' />
          <member value='#2018-06-16#' />
          <member value='#2018-06-17#' />
          <member value='#2018-06-18#' />
          <member value='#2018-06-19#' />
          <member value='#2018-06-20#' />
          <member value='#2018-06-21#' />
          <member value='#2018-06-22#' />
          <member value='#2018-06-23#' />
          <member value='#2018-06-24#' />
          <member value='#2018-06-25#' />
          <member value='#2018-06-26#' />
          <member value='#2018-06-27#' />
          <member value='#2018-06-28#' />
          <member value='#2018-07-01#' />
          <member value='#2018-07-02#' />
          <member value='#2018-07-03#' />
          <member value='#2018-07-05#' />
          <member value='#2018-07-06#' />
          <member value='#2018-07-07#' />
          <member value='#2018-07-08#' />
          <member value='#2018-07-09#' />
          <member value='#2018-07-10#' />
          <member value='#2018-07-11#' />
          <member value='#2018-07-12#' />
          <member value='#2018-07-13#' />
          <member value='#2018-07-14#' />
          <member value='#2018-07-15#' />
          <member value='#2018-07-17#' />
          <member value='#2018-07-18#' />
          <member value='#2018-07-19#' />
          <member value='#2018-07-20#' />
          <member value='#2018-07-21#' />
          <member value='#2018-07-22#' />
          <member value='#2018-07-23#' />
          <member value='#2018-07-24#' />
          <member value='#2018-07-25#' />
          <member value='#2018-07-26#' />
          <member value='#2018-07-27#' />
          <member value='#2018-07-28#' />
          <member value='#2018-08-01#' />
          <member value='#2018-08-02#' />
          <member value='#2018-08-03#' />
          <member value='#2018-08-04#' />
          <member value='#2018-08-05#' />
          <member value='#2018-08-06#' />
          <member value='#2018-08-07#' />
          <member value='#2018-08-08#' />
          <member value='#2018-08-09#' />
          <member value='#2018-08-10#' />
          <member value='#2018-08-11#' />
          <member value='#2018-08-12#' />
          <member value='#2018-08-13#' />
          <member value='#2018-08-14#' />
          <member value='#2018-08-15#' />
          <member value='#2018-08-16#' />
          <member value='#2018-08-17#' />
          <member value='#2018-08-18#' />
          <member value='#2018-08-19#' />
          <member value='#2018-08-20#' />
          <member value='#2018-08-21#' />
          <member value='#2018-08-22#' />
          <member value='#2018-08-23#' />
          <member value='#2018-08-24#' />
          <member value='#2018-08-25#' />
          <member value='#2018-08-26#' />
          <member value='#2018-08-27#' />
          <member value='#2018-08-28#' />
          <member value='#2018-09-01#' />
          <member value='#2018-09-02#' />
          <member value='#2018-09-03#' />
          <member value='#2018-09-04#' />
          <member value='#2018-09-05#' />
          <member value='#2018-09-06#' />
          <member value='#2018-09-08#' />
          <member value='#2018-09-09#' />
          <member value='#2018-09-10#' />
          <member value='#2018-09-11#' />
          <member value='#2018-09-12#' />
          <member value='#2018-09-13#' />
          <member value='#2018-09-14#' />
          <member value='#2018-09-15#' />
          <member value='#2018-09-16#' />
          <member value='#2018-09-17#' />
          <member value='#2018-09-18#' />
          <member value='#2018-09-19#' />
          <member value='#2018-09-20#' />
          <member value='#2018-09-21#' />
          <member value='#2018-09-22#' />
          <member value='#2018-09-23#' />
          <member value='#2018-09-24#' />
          <member value='#2018-09-25#' />
          <member value='#2018-09-26#' />
          <member value='#2018-09-27#' />
          <member value='#2018-09-28#' />
          <member value='#2018-10-01#' />
          <member value='#2018-10-02#' />
          <member value='#2018-10-03#' />
          <member value='#2018-10-04#' />
          <member value='#2018-10-05#' />
          <member value='#2018-10-06#' />
          <member value='#2018-10-07#' />
          <member value='#2018-10-08#' />
          <member value='#2018-10-09#' />
          <member value='#2018-10-10#' />
          <member value='#2018-10-11#' />
          <member value='#2018-10-12#' />
          <member value='#2018-10-13#' />
          <member value='#2018-10-14#' />
          <member value='#2018-10-15#' />
          <member value='#2018-10-16#' />
          <member value='#2018-10-17#' />
          <member value='#2018-10-18#' />
          <member value='#2018-10-20#' />
          <member value='#2018-10-22#' />
          <member value='#2018-10-23#' />
          <member value='#2018-10-24#' />
          <member value='#2018-10-25#' />
          <member value='#2018-10-26#' />
          <member value='#2018-10-27#' />
          <member value='#2018-10-28#' />
          <member value='#2018-11-01#' />
          <member value='#2018-11-02#' />
          <member value='#2018-11-03#' />
          <member value='#2018-11-04#' />
          <member value='#2018-11-05#' />
          <member value='#2018-11-06#' />
          <member value='#2018-11-07#' />
          <member value='#2018-11-08#' />
          <member value='#2018-11-09#' />
          <member value='#2018-11-10#' />
          <member value='#2018-11-11#' />
          <member value='#2018-11-12#' />
          <member value='#2018-11-13#' />
          <member value='#2018-11-14#' />
          <member value='#2018-11-15#' />
          <member value='#2018-11-16#' />
          <member value='#2018-11-17#' />
          <member value='#2018-11-18#' />
          <member value='#2018-11-19#' />
          <member value='#2018-11-20#' />
          <member value='#2018-11-21#' />
          <member value='#2018-11-22#' />
          <member value='#2018-11-23#' />
          <member value='#2018-11-24#' />
          <member value='#2018-11-25#' />
          <member value='#2018-11-27#' />
          <member value='#2018-11-28#' />
          <member value='#2018-12-01#' />
          <member value='#2018-12-02#' />
          <member value='#2018-12-03#' />
          <member value='#2018-12-04#' />
          <member value='#2018-12-05#' />
          <member value='#2018-12-06#' />
          <member value='#2018-12-07#' />
          <member value='#2018-12-08#' />
          <member value='#2018-12-09#' />
          <member value='#2018-12-10#' />
          <member value='#2018-12-11#' />
          <member value='#2018-12-12#' />
          <member value='#2018-12-13#' />
          <member value='#2018-12-14#' />
          <member value='#2018-12-15#' />
          <member value='#2018-12-16#' />
          <member value='#2018-12-17#' />
          <member value='#2018-12-18#' />
          <member value='#2018-12-19#' />
          <member value='#2018-12-20#' />
          <member value='#2018-12-21#' />
          <member value='#2018-12-22#' />
          <member value='#2018-12-23#' />
          <member value='#2018-12-24#' />
          <member value='#2018-12-25#' />
          <member value='#2018-12-26#' />
          <member value='#2018-12-27#' />
          <member value='#2018-12-28#' />
        </members>
      </column>
      <column caption=' Date Parameter ' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;year&quot;'>
        <calculation class='tableau' formula='&quot;year&quot;' />
        <members>
          <member value='&quot;year&quot;' />
          <member value='&quot;quarter&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption=' country Parameter ' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Liberia&quot;'>
        <calculation class='tableau' formula='&quot;Liberia&quot;' />
        <members>
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Ontario&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Scotland&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;south Africa&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United States&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 3]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;year&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;month&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;quarter&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='data (Zomato data)' inline='true' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Zomato data' name='excel-direct.1xmg4eg1a11oya114n3z31oyfdvj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yoges/OneDrive/Desktop/excelr project/Zomato data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1xmg4eg1a11oya114n3z31oyfdvj' name='data' table='[data$]' type='table'>
          <columns gridOrigin='A1:T9552:no:A1:T9552:0' header='yes' outcome='6'>
            <column datatype='integer' name='RestaurantID' ordinal='0' />
            <column datatype='string' name='RestaurantName' ordinal='1' />
            <column datatype='integer' name='CountryCode' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='Address' ordinal='4' />
            <column datatype='string' name='Locality' ordinal='5' />
            <column datatype='string' name='LocalityVerbose' ordinal='6' />
            <column datatype='real' name='Longitude' ordinal='7' />
            <column datatype='real' name='Latitude' ordinal='8' />
            <column datatype='string' name='Cuisines' ordinal='9' />
            <column datatype='string' name='Currency' ordinal='10' />
            <column datatype='string' name='Has_Table_booking' ordinal='11' />
            <column datatype='string' name='Has_Online_delivery' ordinal='12' />
            <column datatype='string' name='Is_delivering_now' ordinal='13' />
            <column datatype='string' name='Switch_to_order_menu' ordinal='14' />
            <column datatype='integer' name='Price_range' ordinal='15' />
            <column datatype='integer' name='Votes' ordinal='16' />
            <column datatype='integer' name='Average_Cost_for_two' ordinal='17' />
            <column datatype='real' name='Rating' ordinal='18' />
            <column datatype='date' date-parse-format='yyyy_MM_dd' name='Datekey_Opening' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1xmg4eg1a11oya114n3z31oyfdvj' name='data' table='[data$]' type='table'>
          <columns gridOrigin='A1:T9552:no:A1:T9552:0' header='yes' outcome='6'>
            <column datatype='integer' name='RestaurantID' ordinal='0' />
            <column datatype='string' name='RestaurantName' ordinal='1' />
            <column datatype='integer' name='CountryCode' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='Address' ordinal='4' />
            <column datatype='string' name='Locality' ordinal='5' />
            <column datatype='string' name='LocalityVerbose' ordinal='6' />
            <column datatype='real' name='Longitude' ordinal='7' />
            <column datatype='real' name='Latitude' ordinal='8' />
            <column datatype='string' name='Cuisines' ordinal='9' />
            <column datatype='string' name='Currency' ordinal='10' />
            <column datatype='string' name='Has_Table_booking' ordinal='11' />
            <column datatype='string' name='Has_Online_delivery' ordinal='12' />
            <column datatype='string' name='Is_delivering_now' ordinal='13' />
            <column datatype='string' name='Switch_to_order_menu' ordinal='14' />
            <column datatype='integer' name='Price_range' ordinal='15' />
            <column datatype='integer' name='Votes' ordinal='16' />
            <column datatype='integer' name='Average_Cost_for_two' ordinal='17' />
            <column datatype='real' name='Rating' ordinal='18' />
            <column datatype='date' date-parse-format='yyyy_MM_dd' name='Datekey_Opening' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T9552:no:A1:T9552:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RestaurantID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RestaurantID]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>RestaurantID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RestaurantName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RestaurantName]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>RestaurantName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Locality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Locality]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Locality</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalityVerbose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalityVerbose]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>LocalityVerbose</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cuisines</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cuisines]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Cuisines</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Currency]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Currency</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Has_Table_booking</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Has_Table_booking]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Has_Table_booking</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Has_Online_delivery</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Has_Online_delivery]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Has_Online_delivery</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is_delivering_now</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Is_delivering_now]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Is_delivering_now</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Switch_to_order_menu</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Switch_to_order_menu]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Switch_to_order_menu</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price_range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price_range]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Price_range</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Votes]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Votes</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Cost_for_two</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average_Cost_for_two]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Average_Cost_for_two</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rating]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Rating</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Datekey_Opening</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Datekey_Opening]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>Datekey_Opening</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_56CBCF8C942C4CACBED9B5E9AAD58C90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Cost for two' datatype='integer' name='[Average_Cost_for_two]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[Calculation_2294302545843171328]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
      </column>
      <column caption='Contains City' datatype='boolean' name='[Calculation_2294302545857978370]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([City],[Parameters].[Parameter 1])' />
      </column>
      <column caption='order_year' datatype='string' name='[Calculation_2294302545880002572]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
      </column>
      <column caption='order_quarter' datatype='string' name='[Calculation_2294302545880211469]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
      </column>
      <column caption='order_month' datatype='string' name='[Calculation_2294302545880690702]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
      </column>
      <column caption='Date' datatype='string' name='[Calculation_2294302545884704784]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &apos;month&apos; THEN [Calculation_2294302545880690702]&#13;&#10;WHEN &apos;year&apos; THEN [Calculation_2294302545880002572]&#13;&#10;WHEN &apos;quarter&apos; THEN [Calculation_2294302545880211469]&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='Rating (copy)' datatype='real' name='[Calculation_955326081973182464]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Rating]' />
      </column>
      <column caption='Month Name' datatype='string' name='[Calculation_955326082012110850]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;month&apos;,[Datekey_Opening])' />
      </column>
      <column caption='Weekday name' datatype='string' name='[Calculation_955326082012966915]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[Datekey_Opening])' />
      </column>
      <column aggregation='Sum' caption='Financial Quarter' datatype='integer' name='[Calculation_955326082013257732]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,DATEADD(&apos;month&apos;,-3,[Datekey_Opening]))' />
      </column>
      <column aggregation='Sum' caption='Financial Month' datatype='integer' name='[Calculation_955326082013609989]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF  MONTH([Datekey_Opening]) - 3 &gt; 0&#13;&#10;THEN MONTH([Datekey_Opening]) - 3&#13;&#10;ELSE MONTH([Datekey_Opening]) + 12 - 3&#13;&#10;END' />
      </column>
      <column caption='Month_Year' datatype='string' name='[Calculation_955326082014277638]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
      </column>
      <column aggregation='Sum' caption='Weekday no' datatype='integer' name='[Calculation_955326082014887943]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPART(&apos;weekday&apos;,[Datekey_Opening])' />
      </column>
      <column caption='Month no' datatype='integer' name='[Calculation_955326082018402312]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='MONTH([Datekey_Opening])' />
      </column>
      <column caption='Quarter' datatype='string' name='[Calculation_955326082020794378]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
      </column>
      <column caption='Bucket list' datatype='string' name='[Calculation_955326082026409995]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Average_Cost_for_two]&lt;=1000  then       &#13;&#10;&quot;0-1000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=10000  then&#13;&#10;&quot;1001-10000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=100000  then&#13;&#10;&quot;10001-100000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=1000000  then&#13;&#10;&quot;100001-1000000&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Cuisines]' role='dimension' type='nominal' />
      <column caption='Datekey Opening' datatype='date' name='[Datekey_Opening]' role='dimension' type='ordinal' />
      <column caption='Has Online delivery' datatype='string' name='[Has_Online_delivery]' role='dimension' type='nominal' />
      <column caption='Has Table booking' datatype='string' name='[Has_Table_booking]' role='dimension' type='nominal' />
      <column caption='Is delivering now' datatype='string' name='[Is_delivering_now]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Locality Verbose' datatype='string' name='[LocalityVerbose]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Price range' datatype='integer' name='[Price_range]' role='measure' type='quantitative' />
      <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
      <column caption='Restaurant Name' datatype='string' name='[RestaurantName]' role='dimension' type='nominal' />
      <column caption='Switch to order menu' datatype='string' name='[Switch_to_order_menu]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='data' datatype='table' name='[__tableau_internal_object_id__].[data_56CBCF8C942C4CACBED9B5E9AAD58C90]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[CountryCode]' derivation='None' name='[none:CountryCode:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Cuisines]' derivation='None' name='[none:Cuisines:nk]' pivot='key' type='nominal' />
      <column-instance column='[Has_Online_delivery]' derivation='None' name='[none:Has_Online_delivery:nk]' pivot='key' type='nominal' />
      <column-instance column='[Has_Table_booking]' derivation='None' name='[none:Has_Table_booking:nk]' pivot='key' type='nominal' />
      <column-instance column='[RestaurantName]' derivation='None' name='[none:RestaurantName:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.846608' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.153392' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:RestaurantName:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot; Let&apos;s Burrrp&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AB&apos;s - Absolute Barbecues&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe Coffee Day&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;17 Degree Food Service&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbeque Nation&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Keventers&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;13 Cafe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Bao&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Green Chick Chop&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;\#hashtag&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Caterspoint&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Pizza Hut&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;44 Grills&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CakeBee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McDonald&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;\#InstaFreeze&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coco Bambu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Subway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4U&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atlanta Highway Seafood Market&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Giani&apos;s&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;34 Park Street Lane&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Braseiro da Gíçvea&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;KFC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3x Cafe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AB&apos;s Absolute Barbecues&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Domino&apos;s Pizza&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;365 Naturals&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Carnival By Tresind&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Moti Mahal Delux&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cuisines:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;American, Asian, Burger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American, Breakfast, Vegetarian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American, Desserts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American, International, Southwestern&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American, North Indian, European, Asian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andhra, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asian, Chinese, Thai, Vietnamese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asian, Seafood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Awadhi, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bakery, Desserts, Fast Food, Pizza, Burger, Finger Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bakery, Street Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bengali, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Biryani, Kerala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazilian, Steak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British, Burger, Cafe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burger, Desserts, Fast Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burger, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Coffee and Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Continental, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Fast Food, Desserts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Italian, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Italian, Pizza, European, Bakery, Deli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, North Indian, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Tea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, Cafe, North Indian, Desserts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, Italian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, Naga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, North Indian, Seafood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, Sushi, Thai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, Thai, Sushi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, American, Asian, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, Cafe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, Chinese, Thai, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, Italian, Asian, Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, Mexican&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, North Indian, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, Seafood, Burger, South African, Finger Food, Grill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Desserts, Bí_rek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Desserts, Sandwich, Southern&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;European, Desserts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;European, Sushi, Italian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fast Food, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fast Food, North Indian, Beverages&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fast Food, Street Food, Beverages&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finger Food, Italian, Spanish, Greek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Goan, American, Portuguese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gujarati, South Indian, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Healthy Food, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ice Cream, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indian, Mughlai, South Indian, Biryani&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;International, Southern&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italian, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italian, Fast Food, South Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italian, Mexican, Continental, North Indian, Finger Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italian, Seafood, Mediterranean, Desserts, Cafe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japanese, Sushi, Asian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kashmiri, North Indian, Mughlai, South Indian, Maharashtrian, Gujarati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latin American, Mexican&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysian, Indonesian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mediterranean, Mexican, North Indian, American&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexican, North Indian, European, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mithai, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mithai, Street Food, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mughlai, Lucknowi, Awadhi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Afghani&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Cafe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Chinese, Continental, Thai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Chinese, Mediterranean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Chinese, South Indian, Seafood, Chettinad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Continental, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Continental, Lebanese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Fast Food, Biryani&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Hyderabadi, Kashmiri, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Kashmiri&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Middle Eastern, Pizza&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Raw Meats&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Rajasthani&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, South Indian, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, South Indian, Street Food, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistani, Chinese, Indian, Afghani&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pizza, Fast Food, Bakery&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajasthani, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seafood, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Indian, Chinese, Continental, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Indian, North Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steak, Seafood, Grill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Street Food, Mithai, South Indian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwanese, Street Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tibetan, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American, BBQ, Sandwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American, Chinese, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American, Fast Food, Steak, Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American, Italian, Seafood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American, Seafood, Sushi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Asian, Breakfast, Hawaiian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Asian, Japanese, Korean, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Asian, Vietnamese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bakery, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bakery, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bakery, Healthy Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BBQ, Caribbean, Seafood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beverages, Salad, Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazilian, Bar Food, Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Breakfast, Mexican, Southwestern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burger, American, Grill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burger, Izgara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, American, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Continental, Italian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, European, Mexican&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Healthy Food, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Italian, Mexican, Bakery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Mexican, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Pizza, Burger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, Asian, Mediterranean, Continental&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, Fast Food, Bakery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, Japanese, Thai, Malaysian, Vietnamese, Asian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, North Indian, Italian, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, Seafood, North Indian, Biryani&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, Thai, Malaysian, Indonesian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coffee and Tea, Tapas, Australian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, American, Tex-Mex, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, Chinese, Mexican, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, Finger Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, Italian, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, North Indian, Italian, Seafood, Goan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Desserts, American&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Desserts, Latin American, Argentine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;European, Cafe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;European, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fast Food, Cafe, Desserts, Bakery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fast Food, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fast Food, Pizza, Burger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finger Food, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French, Italian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greek, Mediterranean&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Healthy Food, Continental, North Indian, Salad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hyderabadi, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indian, Cafe, Curry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indian, South Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italian, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italian, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italian, Mediterranean, Pizza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italian, Pizza, Bakery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japanese, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juices, Desserts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kerala, South Indian, Continental, North Indian, Seafood, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanese, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mediterranean, Continental, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexican, Grill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mithai, Bakery, Street Food, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mithai, South Indian, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mughlai, Chinese, Cafe, BBQ, Cajun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepalese, Tibetan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Bengali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Chinese, Continental, Italian, Burger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Chinese, Italian, Finger Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Chinese, Tibetan, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, European, Continental&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Fast Food, South Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Italian, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Mediterranean, Asian, Continental&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Mughlai, Biryani, Bengali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Mughlai, Mexican, Thai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, South Indian, Gujarati, Rajasthani&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Street Food, South Indian, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pizza, Bar Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pizza, Sandwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Restaurant Cafe, Turkish, Desserts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seafood, Continental, European, German&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Indian, Fast Food, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Indian, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southern, Cajun, Soul Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Street Food, Continental, South Indian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunda, Indonesian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thai, Chinese, Asian, Malaysian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnamese, Fish and Chips&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Afghani, North Indian, Pakistani, Arabian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American, Breakfast, Desserts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American, Continental, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American, Greek, Seafood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American, Mexican&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American, Sandwich, Tea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asian, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Awadhi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bakery, Desserts, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bakery, Mithai, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bengali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biryani&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazilian, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Breakfast, Spanish, Tapas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burger, Bar Food, Vegetarian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burger, Pizza, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Australian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Chinese, Fast Food, Seafood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Continental, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Fast Food, Bakery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Italian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Italian, Mexican, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, North Eastern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Spanish, Turkish, Greek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, Beverages&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, Fast Food, North Indian, South Indian, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, North Indian, Mithai, Street Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, Thai, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Contemporary, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, Asian, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, Chinese, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, Kashmiri, Italian, North Indian, Moroccan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, North Indian, Chinese, Arabian, Thai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, North Indian, Mughlai, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Desserts, Bakery, Western&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Desserts, North Indian, Chinese, South Indian, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;European, Italian, Cafe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;European, Pizza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fast Food, Chinese, Bengali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fast Food, Mughlai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fast Food, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finger Food, European, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;French, Western&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grill, Steak, Burger, Sushi, Tapas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Healthy Food, Italian, Juices, Beverages&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ice Cream, Bakery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indian, Grill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;International, Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italian, European&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italian, Mexican, Cafe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italian, Pizza, Lebanese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japanese, Seafood, Sushi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kashmiri, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Korean, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lucknowi, Mughlai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mediterranean, Italian, American&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexican, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mithai, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mithai, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mughlai, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Eastern, Continental, South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Biryani, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Chinese, Continental, Mughlai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Chinese, Italian, Mexican, Lebanese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Chinese, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Continental, Asian, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Continental, Italian, Asian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, European, South Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, French, Continental&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Italian, Mexican, Asian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Mediterranean, European, Asian, Chinese, Pizza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Mughlai, South Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, South Indian, Chinese, Healthy Food, Bakery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, South Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Tibetan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pizza, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portuguese, African, Lebanese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandwich, Seafood, Cajun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seafood, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Indian, Chettinad, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Indian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steak&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Street Food, Fast Food, Chinese, South Indian, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sushi, Japanese, Cantonese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thai, European, Mexican, North Indian, Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;World Cuisine, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;American, Coffee and Tea&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American, Bakery, European, Burger, Fusion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American, Burger, Cajun&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American, European&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American, Italian, Cafe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American, Sandwich, Salad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arabian, Mexican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asian, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asian, Sushi, Thai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bakery, Beverages, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bakery, Desserts, North Indian, Bengali, South Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bar Food, Sandwich, Seafood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beverages, Bar Food, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Biryani, North Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Breakfast, Cajun&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;British, French&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burger, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Bakery, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Belgian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Continental, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Fast Food, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Italian, Continental, Mexican, Mediterranean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Korean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cajun&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, Continental, Mexican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, North Indian, South Indian, Street Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, Thai, Asian, Malaysian, Vietnamese, Japanese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, Tibetan, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, American, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, Cafe, Spanish, Italian, European, Greek, Mediterranean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, European, North Indian, French&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, Italian, Mediterranean, Asian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, Mexican, Burger, American, Pizza, Tex-Mex&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, North Indian, European&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, Seafood, North Indian, Asian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Desserts, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;European&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fast Food, American, Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fast Food, Desserts, Ice Cream, Beverages&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fast Food, North Indian, Chinese, South Indian, Ice Cream&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fast Food, Turkish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finger Food, North Indian, Continental, Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goan, Seafood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Healthy Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Healthy Food, North Indian, Italian, Salad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ice Cream, Desserts, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indian, North Indian, Mughlai, Biryani&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italian, Continental, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italian, French, European, Cafe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italian, North Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japanese, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kebab, Turkish Pizza&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanese, Arabian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malwani, North Indian, Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mediterranean, Turkish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexican, Tex-Mex&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mithai, North Indian, South Indian, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Modern Australian, Australian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mughlai, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, American, Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Chinese, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Chinese, Mexican, Italian, Thai, Lebanese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Continental, Chinese, Italian, Thai, Mughlai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Continental, Salad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Fast Food, Chinese, Japanese, Asian, Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Italian, Asian, South Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Lebanese, European, Mexican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Mithai, South Indian, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Mughlai, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Seafood, Bengali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, South Indian, Chinese, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Street Food, Beverages&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parsi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pizza, Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Raw Meats, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seafood, Asian, Filipino, Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seafood, Steak&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Indian, North Indian, Street Food, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Street Food, Beverages&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Street Food, North Indian, Mithai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tea, Cafe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tibetan, South Indian, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American, Asian, European, Seafood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American, British, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American, Desserts, Diner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American, International, Sushi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American, North Indian, Thai, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andhra, North Indian, Chinese, Seafood, Biryani&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asian, Chinese, Tibetan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asian, Sushi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bakery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bakery, Desserts, Fast Food, Street Food, Chinese, Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bar Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bengali, Seafood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Biryani, Lucknowi, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Breakfast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British, Cafe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burger, Desserts, Sandwich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burger, Steak, Seafood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Bakery, Italian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Coffee and Tea, Sandwich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Continental, Italian, Street Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Fast Food, Healthy Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Italian, Continental, Desserts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Italian, Salad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Tea, Desserts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, Italian, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, North Eastern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, Thai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, Thai, Tibetan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, American, Cafe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, Cafe, Desserts, Bakery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, European&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, Mexican, American, Fast Food, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, North Indian, Chinese, Italian, Finger Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, Seafood, Chinese, North Indian, Biryani&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Desserts, Cafe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Desserts, Street Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European, German&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fast Food, American, Salad, Healthy Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fast Food, Continental, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fast Food, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fast Food, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finger Food, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goan, Chinese, Indian, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hawaiian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Healthy Food, North Indian, Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ice Cream, Desserts, Cafe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indian, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;International, Southern, Vegetarian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italian, Continental, Chinese, Mexican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italian, French&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italian, Mexican, Lebanese, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italian, Seafood, Vegetarian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japanese, Sushi, Ramen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kebab&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin American, Mexican, Southwestern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysian, North Indian, Sri Lankan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mediterranean, Mughlai, Thai, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexican, Southwestern, Sushi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mithai, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mithai, Street Food, North Indian, South Indian, Chinese, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Afghani, Mughlai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Cafe, Italian, Mexican, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Chinese, Mediterranean, Asian, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Chinese, South Indian, Street Food, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Continental, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Continental, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Kashmiri, Chinese, Thai, Korean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Mithai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Rajasthani, Asian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, South Indian, Chinese, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, South Indian, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pakistani, Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pizza, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ramen, Japanese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seafood, African, Sushi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seafood, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Indian, North Indian, Chinese, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Steak, Tapas, Bar Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Street Food, Mughlai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tapas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tibetan, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;African&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American, Breakfast, Diner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American, Continental, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American, Grill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American, Mexican, Burger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American, Tex-Mex&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asian, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asian, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Awadhi, Mughlai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bakery, Desserts, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bengali, Chinese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Biryani, Andhra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazilian, Mineira&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Breakfast, Vegetarian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burger, Coffee and Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burger, Pizza, Sandwich&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Bakery&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Continental, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Italian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Italian, Mexican, Salad, Desserts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Sri Lankan, Continental, American&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, Biryani, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, Fast Food, Pizza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, South Indian, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, Thai, Seafood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Contemporary, Sushi, Grill, Italian, Steak&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, Asian, Sushi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, Kerala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, North Indian, Chinese, Asian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Desserts, Bar Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Desserts, Pizza, Ice Cream&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;European, Continental&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;European, South African&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fast Food, Chinese, Burger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fast Food, Mughlai, Armenian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fast Food, South Indian, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finger Food, Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gujarati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Healthy Food, Juices&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ice Cream, Beverages&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indian, International, Vegetarian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;International, Italian, Southern&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian, Continental&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian, European, Cafe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian, Mexican, Chinese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian, Pizza, Sandwich&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japanese, Steak&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kashmiri, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korean, Japanese, Chinese, Asian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lucknowi, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mediterranean, Italian, Continental, Spanish, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexican, Italian, North Indian, Continental, Asian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mithai, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mithai, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mughlai, Hyderabadi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Eastern, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Biryani, Fast Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Chinese, Continental, Pizza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Chinese, Italian, Street Food, Desserts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Chinese, South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Continental, Asian, Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Continental, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Greek, Mughlai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Italian, Mexican, Chettinad, Chinese, Lebanese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Mexican, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Mughlai, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, South Indian, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, South Indian, Street Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oriya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pizza, Continental, Beverages&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pub Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sandwich, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seafood, Japanese, Sushi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Indian, Chettinad, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Indian, North Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Steak, American&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Street Food, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sushi, Japanese, Healthy Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thai, Japanese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;World Cuisine, Patisserie, Cafe&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;European, Asian, Indian&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Pizza, Fast Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American, BBQ, Southern&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American, Continental, Burger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American, Fast Food, Desserts, Steak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American, Italian, North Indian, European, Thai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American, Seafood, Southern&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asian Fusion, Pub Food, Fusion, Asian, Filipino, Malaysian, Thai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asian, Japanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asian, Vegetarian, Vietnamese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bakery, Desserts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bakery, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BBQ, Burger, Seafood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Beverages, Juices&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Breakfast, French&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burger, American, Fast Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burger, Greek, Sandwich&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, American, Italian, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Charcoal Grill, Steak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Desserts, Healthy Food, Juices&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Healthy Food, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Italian, Lebanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Mexican, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Patisserie, Bakery, Desserts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, Canadian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, Dim Sum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, Japanese, Thai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, Seafood, Cantonese, Dim Sum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, Thai, Japanese, Asian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coffee and Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, American, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, Chinese, Italian, Finger Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, Fast Food, North Indian, Asian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, Italian, North Indian, Lebanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, Middle Eastern, Asian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, North Indian, Italian, Asian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cuisine Varies&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Desserts, Ice Cream, Pizza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European, Asian, Mediterranean, Modern Indian, Desserts, Finger Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European, Mediterranean, Contemporary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fast Food, Burger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fast Food, Italian, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fast Food, North Indian, South Indian, Chinese, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finger Food, Continental, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French, Brazilian, Beverages&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greek, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Healthy Food, Continental, Juices, Beverages, Italian, Salad, Lebanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hyderabadi, Biryani&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indian, Asian, Durban, International, Desserts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indian, Rajasthani&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italian, Cafe, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italian, Continental, Mexican, Lebanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italian, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japanese, Chinese, Asian, Thai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Juices, Beverages, Fast Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kerala, South Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanese, Mediterranean, Arabian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mediterranean, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mexican, American, Tex-Mex, Burger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mithai, Bakery, North Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mithai, North Indian, Street Food, Chinese, South Indian, Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mughlai, Biryani&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Naga, Tibetan, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Asian, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Chinese, Continental, Goan, Seafood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Chinese, Italian, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Chinese, Mughlai, South Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Chinese, Thai, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Continental, European, American, Mediterranean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, European, Asian, Mediterranean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Italian, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Mediterranean, Asian, Arabian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Mughlai, Awadhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Mughlai, Lebanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, South Indian, Bakery, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, South Indian, Fast Food, Street Food, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peruvian, Latin American&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Restaurant Cafe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seafood, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singaporean, Chinese, Seafood, Malay, Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Indian, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Indian, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Street Food, Chinese, North Indian, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Street Food, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thai, Chinese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkish, Mediterranean, Middle Eastern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghani&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American, BBQ, Steak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American, Finger Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American, Japanese, Singaporean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American, Southern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Asian, Burmese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Asian, Japanese, Sushi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Assamese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bakery, Desserts, Cafe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bakery, Italian, Chinese, Mexican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BBQ, Grill, Brazilian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beverages, Street Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazilian, Cafe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Breakfast, Modern Australian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burger, Bar Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burger, Juices, Finger Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, American, Mexican, Italian, Thai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Chinese, Continental, Italian, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Continental, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Italian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Italian, Mexican, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Mexican, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Pizza, Italian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, Asian, Thai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, Fast Food, Ice Cream&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, Lucknowi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, North Indian, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, Seafood, Thai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, Thai, Malaysian, Vietnamese, Korean, Indonesian, Asian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coffee and Tea, Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, Asian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, Finger Food, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, Italian, Pizza, Asian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, North Indian, American, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, North Indian, Mexican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Desserts, Bakery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Desserts, Middle Eastern, Turkish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;European, Cafe, Italian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;European, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fast Food, Cafe, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fast Food, Maharashtrian, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fast Food, Raw Meats&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finger Food, Continental, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French, Japanese, Desserts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greek, Mediterranean, Middle Eastern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Healthy Food, European, Continental, Salad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hyderabadi, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indian, Street Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italian, Chinese, Continental, Thai, Mediterranean, Lebanese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italian, Continental, North Indian, Cafe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italian, Mediterranean, Sushi, Desserts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italian, Pizza, Beverages, Desserts, Grill, Seafood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japanese, Chinese, Thai, Malaysian, Burmese, Asian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Juices, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kiwi, European&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanese, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mediterranean, European&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexican, Italian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mithai, Beverages&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mithai, South Indian, Chinese, Street Food, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mughlai, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New American&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Beverages&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Chinese, Continental, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Chinese, Italian, Lebanese, Mexican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Chinese, Seafood, Chettinad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Chinese, Turkish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Continental, Finger Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, European, Continental, Finger Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Mediterranean, Asian, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Mughlai, Kashmiri&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Mughlai, Mughlai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, South Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, South Indian, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Street Food, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pizza, Bar Food, Sandwich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pizza, Sandwich, Vegetarian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salad, Continental&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seafood, Continental, Goan, Asian, Andhra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Indian, Andhra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Indian, Kerala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spanish, Italian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Street Food, Desserts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sushi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thai, Chinese, Japanese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western, Asian, Cafe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American, BBQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American, Burger, Sandwich&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American, Fast Food, Burger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American, Seafood, Cajun&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asian, European, Seafood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asian, Thai, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bakery, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bakery, Fast Food, Desserts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bengali, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beverages, Ice Cream&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Biryani, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Breakfast, Diner, Sandwich&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burger, American&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burger, Bar Food, Steak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burger, Finger Food, Pizza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, American, Desserts, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, Burger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, Continental, Desserts, Ice Cream, Italian, Beverages&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, Desserts, Bakery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, French&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, Mexican&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, North Indian, Lebanese, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinese, Continental, Singaporean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinese, Japanese, Korean, Asian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinese, North Indian, Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinese, Thai, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coffee and Tea, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, American, Italian, Seafood, North Indian, Cafe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, Chinese, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, Fast Food, Desserts, Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, Mexican, Mediterranean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, North Indian, Finger Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, Thai, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Desserts, Ice Cream, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;European, Asian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;European, Italian, Thai, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fast Food, Beverages, Desserts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fast Food, Italian, Beverages&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fast Food, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finger Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finger Food, North Indian, Italian, European, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gourmet Fast Food, Burger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Healthy Food, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hyderabadi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indian, Pakistani, Curry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italian, Burger, Charcoal Grill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italian, Continental, Mexican, Cafe, Bakery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italian, Lebanese, Mexican&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italian, North Indian, Desserts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japanese, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Juices&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kerala, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanese, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mediterranean, Cafe, European&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexican, American, Italian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mithai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mithai, North Indian, South Indian, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mughlai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Naga, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Asian, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Chinese, Continental, Desserts, Fast Food, Sandwich&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Chinese, Mughlai, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Chinese, Thai, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Continental, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, European&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Fast Food, Italian, Asian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Italian, Chinese, Mexican&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Mangalorean, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Mughlai, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, South Indian, Asian, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, South Indian, Fast Food, Street Food, Chinese, Beverages, Mithai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peranakan, Indonesian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pizza, Mexican, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raw Meats, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seafood, Chinese, Japanese, Sushi, Thai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seafood, Western&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Indian, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Indian, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Street Food, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Street Food, North Indian, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkish, Arabian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;African, Portuguese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American, Breakfast, Greek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American, Continental, Italian, North Indian, Asian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American, Hawaiian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American, Mexican, Finger Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American, Tex-Mex, Italian, Mexican, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asian, Chinese, Thai, Japanese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asian, North Indian, Japanese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Awadhi, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bakery, Desserts, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bakery, Pizza&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Biryani, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazilian, North Eastern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burger, Desserts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burger, Sandwich, Seafood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Bakery, American, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Continental, Italian, Mexican, Chinese, American&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Italian, Coffee and Tea, Western, Indonesian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Street Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, Healthy Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, North Indian, Mughlai, Continental&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, Steak&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, Thai, Seafood, Naga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, Burger, American&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, Chinese, Thai, Malaysian, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, Italian, American&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, Lebanese, Mexican&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, North Indian, Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, North Indian, South Indian, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Desserts, Sandwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European, South African, Steak&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fast Food, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fast Food, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finger Food, Italian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;German, Ice Cream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gujarati, Rajasthani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Healthy Food, Juices, Salad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ice Cream, Beverages, Fast Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indian, Mediterranean, Middle Eastern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;International, Mediterranean, Sandwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italian, Continental, American&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italian, Mexican, Chinese, Thai, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italian, Pizza, Seafood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japanese, Steak, Sushi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kashmiri, Mughlai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latin American&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maharashtrian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mediterranean, Italian, European&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexican, Lebanese, Italian, Continental, Thai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mithai, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mithai, Street Food, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mughlai, Italian, Finger Food, Middle Eastern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Eastern, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Biryani, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Chinese, Continental, Rajasthani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Chinese, Italian, Thai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Chinese, South Indian, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Continental, Beverages, Italian, Burger, Healthy Food, Mediterranean&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Continental, Italian, Finger Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Fast Food, Afghani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Healthy Food, Rajasthani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Italian, Parsi, Asian, Kerala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Mughlai, South Indian, Rajasthani, Street Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, South Indian, Chinese, Mithai, Fast Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, South Indian, Street Food, Bakery&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pizza, Desserts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajasthani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandwich, Sushi, Tapas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seafood, Kiwi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Indian, North Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steak, BBQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sushi, Teriyaki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thai, Japanese, Chinese, Indonesian, Vietnamese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American, Bar Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American, Burger, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American, European, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American, Sandwich, Seafood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arabian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asian, Continental, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asian, Sushi, Vegetarian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bakery, Cafe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bakery, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bar Food, Seafood, Vegetarian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beverages, Desserts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Biryani, North Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Breakfast, Coffee and Tea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;British, Scottish, Seafood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burger, Fast Food, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, American&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Beverages&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Continental, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Continental, North Indian, Chinese, Mexican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Italian, Desserts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Korean, Desserts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, Italian, North Indian, Mexican, Mediterranean, Thai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, North Indian, Continental, Italian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, Thai, Burmese, Vietnamese, Tibetan, Japanese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, Tibetan, Japanese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, American, Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, Mexican, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, North Indian, European, Asian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, South African, Beverages, Desserts, Seafood, Grill, Ice Cream, International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Desserts, Fast Food, Ice Cream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;European, American&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;European, Contemporary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;European, Italian, Desserts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fast Food, French&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fast Food, North Indian, Desserts, Ice Cream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Filipino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finger Food, North Indian, Continental, Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goan, Seafood, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Healthy Food, American, Burger, Salad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Healthy Food, Salad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ice Cream, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indian, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italian, American, Lebanese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italian, Continental, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italian, Fusion, Cafe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japanese, American, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japanese, Thai, Italian, Asian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kebab, Turkish Pizza, Dí_ner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanese, Arabian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mediterranean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexican, Vegetarian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mithai, North Indian, South Indian, Chinese, Street Food, Bakery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Modern Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mughlai, Pakistani, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Andhra, Chettinad, Bengali, Mughlai, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Chinese, Biryani&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Chinese, Fast Food, South Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Chinese, Mexican, Lebanese, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Chinese, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Continental, Chinese, Japanese, Italian, Thai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Continental, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Fast Food, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Lebanese, Mexican, Asian, Italian, American, European&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Mithai, South Indian, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Mughlai, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Seafood, Continental&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, South Indian, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parsi, Iranian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pizza, Italian, Beverages, Desserts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raw Meats, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seafood, Asian, Grill, Sushi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seafood, Steak, Vegetarian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Indian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Indian, Pizza, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Street Food, Burger, American, Finger Food, German&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Street Food, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tea, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tibetan, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American, Bar Food, BBQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American, Chinese, Sushi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American, European, Sandwich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American, Italian, Chinese, North Indian, Cafe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American, Tapas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arabian, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asian, Continental, Seafood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asian, Thai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bakery, Cafe, Fast Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bakery, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bar Food, Steak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beverages, Fast Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Biryani, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Breakfast, Coffee and Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British, Steak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burger, Fast Food, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, American, Continental, Armenian, Fast Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Beverages, Desserts, Pizza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Continental, Chinese, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Continental, North Indian, Italian, Chinese, Bakery, Desserts, Finger Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Fast Food, Pizza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Italian, Desserts, Fast Food, Chinese, Tea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Lebanese, Italian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, North Indian, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caribbean, Mexican, Cajun&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese, Continental, North Indian, Mexican&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese, Japanese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese, North Indian, Continental, Mexican&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese, North Indian, Thai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese, Thai, Continental, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coffee and Tea, Cuban, Latin American&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, American, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, Chinese, Biryani, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, Fast Food, Asian, Italian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, Mexican, Fast Food, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, North Indian, European, Finger Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, South Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Desserts, Greek, Sandwich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;European, American, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;European, Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fast Food, Bakery&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fast Food, Healthy Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fast Food, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Filipino, Japanese, Asian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finger Food, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goan, Seafood, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Healthy Food, Beverages&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Healthy Food, Salad, Italian, Continental&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ice Cream, Mithai, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indian, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italian, American, Pizza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italian, Continental, Finger Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italian, German, Continental&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italian, North Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japanese, Asian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japanese, Thai, Sushi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanese, Arabian, Moroccan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mediterranean, American, Asian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexican, American&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Middle Eastern, Arabian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mithai, North Indian, South Indian, Fast Food, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Modern Indian, Asian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mughlai, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Chinese, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Chinese, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Continental, Chinese, Mexican, Italian, Desserts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Continental, South Indian, Chinese, Thai, Asian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Fast Food, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Italian, Chinese, American&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Lucknowi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Mithai, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Mughlai, Fast Food, South Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Seafood, South Indian, Italian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Street Food, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parsi, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pizza, Italian, Cafe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raw Meats, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seafood, Bar Food, Brazilian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seafood, Sushi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Indian, Chinese, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Indian, Seafood, Kerala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Street Food, Burger, Desserts, Italian, Pizza, North Indian, European, Finger Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Street Food, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkish&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American, BBQ, Burger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American, Cafe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American, Fast Food, Desserts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American, Italian, North Indian, Chinese, Lebanese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American, Seafood, Italian, Japanese, Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Asian Fusion, Cafe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Asian, Indonesian, Western&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Asian, Thai, Vegetarian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bakery, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bakery, Fast Food, Pizza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BBQ, Burger, Desserts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beverages, International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Biryani, Pizza, Fast Food, Healthy Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Breakfast, Diner, Southern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burger, American, Beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burger, German, Sandwich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, American, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Burger, Tapas, South African, European, Grill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Continental, European, Beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Grill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Italian, Japanese, Continental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Mexican, American, Italian, Lebanese, Continental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Patisserie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charcoal Grill, Italian, North Indian, European, Indonesian, Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinese, Continental, Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinese, Japanese, Sushi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinese, North Indian, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinese, Seafood, Asian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinese, Thai, Japanese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coffee and Tea, Mediterranean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, American, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, Chinese, Italian, Cafe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, Italian, North Indian, Chinese, Lebanese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, Mexican, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cuban, Spanish&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Desserts, Ice Cream, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;European, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;European, Lebanese, Mediterranean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fast Food, Biryani&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fast Food, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fast Food, North Indian, South Indian, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finger Food, American, Continental, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Healthy Food, Continental, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hyderabadi, Awadhi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indian, Asian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indian, Persian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italian, Cafe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italian, Continental, Mexican, Japanese, American, British&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italian, Lebanese, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italian, North Indian, Desserts, Continental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japanese, Chinese, Asian, Malaysian, Thai, Vietnamese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Juices, Beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kerala, Indian, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanese, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mediterranean, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexican, American, Tex-Mex&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mithai, Bakery&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mithai, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mughlai, Afghani&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Naga, Tibetan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Asian, European&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Chinese, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Chinese, Italian, American, Middle Eastern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Chinese, Mughlai, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Chinese, Thai, Italian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Continental, European&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, European, Asian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Fast Food, Italian, Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Italian, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Mediterranean, Asian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Mughlai, Asian, Continental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, South Indian, Bakery, Beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, South Indian, Fast Food, Street Food, Chinese, Desserts, Mithai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Street Food, Fast Food, Chinese, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Persian, Arabian, Lebanese, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pizza, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raw Meats, Street Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seafood, Chinese, Japanese, Vietnamese, Asian, Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singaporean, Australian, German&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Indian, Street Food, Desserts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Street Food, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Street Food, South Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thai, Asian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkish, Arabian, Moroccan, Lebanese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American, BBQ, Seafood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American, Fast Food, Salad, Healthy Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asian, Bakery&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asian, Japanese, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asian, Vegetarian, Vietnamese, Bubble Tea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bakery, Desserts, Bakery&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bakery, French&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BBQ, Caribbean, Cajun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverages, Salad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazilian, Bar Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Breakfast, Mexican&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burger, American, Fast Food, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burger, Grill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, American, Italian, Filipino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Continental, Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, European&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Healthy Food, Continental, Italian, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Italian, Lebanese, Continental, Mediterranean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Mexican, Italian, Continental&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, Japanese, Thai, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, North Indian, Italian, Continental&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, Seafood, Japanese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, Thai, Japanese, Tibetan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coffee and Tea, Sandwich&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, American, Seafood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, Chinese, Japanese, North Indian, Thai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, Fast Food, Tea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, Italian, North Indian, Lebanese, Thai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, Modern Indian, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, North Indian, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Desserts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Desserts, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;European, Asian, North Indian, Italian, Continental, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;European, Mediterranean, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fast Food, Cafe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fast Food, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fast Food, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finger Food, Continental, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greek, Lebanese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Healthy Food, Continental, Juices, Salad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hyderabadi, Biryani, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indian, Cafe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indian, Seafood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italian, Cafe, Desserts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italian, Continental, Mexican, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italian, Mediterranean, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italian, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japanese, Chinese, Malaysian, Thai, Vietnamese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Juices, Beverages, Healthy Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kerala, South Indian, Chinese, Biryani&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanese, Mediterranean, Middle Eastern, Arabian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mediterranean, Continental, Italian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mexican, Fast Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mithai, Bakery, Street Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mithai, South Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mughlai, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepalese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Awadhi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Chinese, Continental, Italian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Chinese, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Chinese, Raw Meats&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Chinese, Tibetan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Continental, European, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, European, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Fast Food, Mughlai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Italian, Continental, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Mediterranean, Asian, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Mughlai, Biryani&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Mughlai, Lebanese, Arabian, Mediterranean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, South Indian, Bihari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, South Indian, Fast Food, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Street Food, Mughlai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pizza, Salad, Finger Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Restaurant Cafe, Desserts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seafood, Continental, European&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South American&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Street Food, Continental, Burger, Grill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Street Food, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thai, Chinese, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnamese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Asian, Italian, Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Burger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Caribbean, Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Desserts, Steak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Italian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Pizza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arabian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asian, Chinese, Vegetarian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asian, Sushi, Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bakery, Arabian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bakery, Desserts, Healthy Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bar Food, Brazilian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bengali, South Indian, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Biryani, Mughlai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Breakfast, Burger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burger, Desserts, Vegetarian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burmese, Chinese, Japanese, Malaysian, Thai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Bakery, Parsi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Coffee and Tea, Western&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Continental, Mexican, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Italian, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Kiwi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, North Indian, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Tibetan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, Continental&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, Italian, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, North Indian, South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, Thai, Asian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, Thai, Tibetan, Japanese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, American, Fast Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, Cafe, Italian, Desserts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, European, Asian, North Indian, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, Mexican, American, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, North Indian, Chinese, Mediterranean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, Seafood, Goan, Andhra, Kerala, Thai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Desserts, Cafe, Mexican&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Desserts, Thai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European, International, Tapas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fast Food, American&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fast Food, Desserts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fast Food, North Indian, Chinese, Desserts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fast Food, Street Food, South Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finger Food, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goan, Mangalorean, Continental, French&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hawaiian, Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Healthy Food, North Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ice Cream, Desserts, Continental&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;International, Tapas, Vegetarian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italian, Continental, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italian, French, Bakery, Cafe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italian, Mexican, Mediterranean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italian, Tex-Mex, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japanese, Sushi, Teriyaki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kebab, Desserts, Turkish Pizza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin American, Steak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysian, Thai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mediterranean, Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexican, Southwestern, Tex-Mex&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mithai, North Indian, South Indian, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mithai, Street Food, South Indian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mughlai, North Indian, Bengali, Continental&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, American, Asian, Biryani&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Chinese, Fast Food, Cafe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Chinese, Mexican, Beverages&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Chinese, South Indian, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Continental, Chinese, Italian, Lebanese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Continental, Mughlai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Fast Food, Chinese, Biryani, Mughlai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Italian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Kashmiri, Mughlai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Mithai, Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Mughlai, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Rajasthani, Gujarati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, South Indian, Chinese, Street Food, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Spanish, Mediterranean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistani, Indian, Afghani, Curry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pizza, Grill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raw Meats&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seafood, American&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seafood, South Indian, Andhra, Hyderabadi, Goan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Indian, Chinese, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Indian, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Street Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Street Food, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tibetan, Fast Food&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;BBQ, Breakfast, Southern&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American, Breakfast, Hawaiian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American, Continental, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American, Ice Cream, Desserts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American, Mexican, Seafood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andhra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Asian, Chinese, Thai, Malaysian, Indonesian, Burmese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Asian, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Awadhi, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakery, Desserts, Fast Food, Pizza, Burger, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakery, Sandwich, Brazilian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bengali, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Biryani, Hyderabadi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazilian, Seafood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British, Bar Food, Sandwich&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burger, Seafood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Bakery, Desserts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Chinese, Thai, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Continental, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Fast Food, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Italian, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, North Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Tapas, South African, Beverages, Healthy Food, Desserts, Spanish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, Cafe, Fast Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, North Indian, Mughlai, Pizza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, Thai, Seafood, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, American&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, Burger, Pizza, North Indian, European, Finger Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, Chinese, Thai, Mediterranean&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, Italian, American, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, Mediterranean, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, North Indian, Chinese, European, Asian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, North Indian, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Desserts, Beverages, Juices&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Desserts, Sandwich, Ice Cream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;European, Continental, Pizza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;European, Spanish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fast Food, Chinese, Mithai, Street Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fast Food, North Indian, Bakery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finger Food, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Goan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gujarati, Rajasthani, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Healthy Food, Juices, Salad, Italian, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ice Cream, Desserts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;International, Pizza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italian, Continental, Cafe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italian, Fast Food, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italian, Mexican, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italian, Pizza, Vegetarian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japanese, Sushi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kashmiri, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latin American, Italian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mediterranean, Italian, Thai, European&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexican, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mithai, North Indian, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mithai, Street Food, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mughlai, Lucknowi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Andhra, Mughlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Biryani, Mughlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Chinese, Continental, Seafood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Chinese, Kashmiri&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Chinese, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Continental, Italian, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Fast Food, Bihari&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Hyderabadi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Japanese, Italian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Mexican, Italian, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Mangalorean&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, North Eastern, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, South Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, South Indian, Street Food, Chinese, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistani, Afghani, Indian, Hyderabadi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pizza, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajasthani, Gujarati, Mughlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scottish, Cafe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seafood, Mediterranean&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Indian, North Indian, Chinese, Fast Food, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Steak, Scottish, British&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Street Food, Mithai, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sushi, Thai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tibetan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Afghani, Mughlai, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American, Breakfast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American, Burger, Grill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American, French&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American, Japanese, Sushi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American, Southern, Southwestern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asian, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asian, Latin American, Vegetarian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Assamese, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakery, Desserts, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakery, Italian, Fast Food, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BBQ, Sandwich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bihari&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazilian, Grill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Breakfast, Pizza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burger, Bar Food, Southern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burger, Pizza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, American, Tea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Continental, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Fast Food, American&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Italian, Mexican, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Mexican, Italian, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Sandwich, Southern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, Assamese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, Mangalorean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, North Indian, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, Seafood, Vegetarian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, Thai, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Contemporary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, Asian, Italian, Mediterranean, Burger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, Chinese, North Indian, Healthy Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, Goan, Seafood, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, Italian, Thai, Finger Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, North Indian, Asian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, North Indian, Mughlai, Burmese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Desserts, Bakery, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Desserts, Mithai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;European, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;European, North Indian, Continental, Italian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fast Food, Mexican, Tex-Mex&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fast Food, Seafood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finger Food, Continental, North Indian, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French, Kiwi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greek, Mediterranean, Vegetarian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Healthy Food, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hyderabadi, North Indian, Biryani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indian, Continental&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italian, Chinese, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italian, Continental, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italian, Mexican&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italian, Pizza, Cafe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japanese, French&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Juices, Healthy Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Korean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lucknowi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mediterranean, European, American, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexican, Italian, American&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mithai, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mithai, South Indian, Street Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mughlai, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New American, Tapas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Biryani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Chinese, Continental, Italian, Mexican, Lebanese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Chinese, Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Continental&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Continental, Goan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, European, Mediterranean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Finger Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Italian, Finger Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Mediterranean, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Mughlai, Nepalese, Tibetan, Korean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, South Indian, Chinese, Fast Food, Bakery, Mithai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, South Indian, Italian, Continental, Mediterranean, Lebanese, Desserts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Thai, Continental&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pizza, Burger, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pizza, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salad, Healthy Food, Burger, Italian, Continental, Chinese, North Indian, Beverages&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seafood, Filipino, Asian, European&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Indian, Biryani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Indian, Nepalese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spanish, Tapas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sushi, Asian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thai, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western, Fusion, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American, Bar Food, Sandwich&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American, Burger, Pizza, Cafe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American, Italian, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American, Seafood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Argentine, American&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asian, European&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asian, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bakery, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bakery, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BBQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beverages, Healthy Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Biryani, North Indian, Hyderabadi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Breakfast, Diner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burger, Fast Food, Grill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, American, Continental, Nepalese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, British&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, Continental, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, Italian, European, Bakery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, Mediterranean&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, North Indian, Italian, Japanese, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caribbean, Seafood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinese, Continental, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinese, Japanese, Italian, Seafood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinese, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinese, Pizza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinese, Thai, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coffee and Tea, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, American, Italian, North Indian, Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, Fast Food, Chinese, Charcoal Grill, Mexican&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, Italian, North Indian, American&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, North Indian, Fast Food, Street Food, South Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, Tex-Mex&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Desserts, Ice Cream&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;European, Arabian, Japanese, Bakery, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;European, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fast Food, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Filipino, Mexican&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finger Food, North Indian, Italian, Continental, Thai, South Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Goan, Seafood, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Healthy Food, Cafe, Desserts, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Healthy Food, Seafood, Beverages, Belgian, Contemporary, Desserts, Finger Food, International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ice Cream, Street Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indian, Pakistani&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian, Bakery, Continental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian, Continental, Goan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian, Lebanese, Fast Food, Bakery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japanese, Asian, Seafood, Sushi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japanese, Tibetan, Vietnamese, Korean&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kerala, Biryani&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanese, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mediterranean, Asian, Continental, North Indian, Arabian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexican, American, Healthy Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle Eastern, Mediterranean, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mithai, North Indian, South Indian, Street Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Modern Indian, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Naga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Asian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Chinese, Finger Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Chinese, Mughlai, Continental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Continental, Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Continental, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Fast Food, Continental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Italian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Maharashtrian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Mughlai, Armenian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Mughlai, Hyderabadi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, South Indian, Fast Food, Street Food, Chinese, Beverages, Desserts, Mithai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Street Food, Chinese, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Patisserie, Coffee and Tea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pizza, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raw Meats, North Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seafood, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seafood, Tapas, Bar Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Indian, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Indian, Street Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Street Food, North Indian, South Indian, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tex-Mex, American&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkish Pizza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American, Asian, North Indian, Mexican, South Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American, Burger, Cafe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American, Diner, Southern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American, Italian, Bakery, Deli, Burger, Sandwich, Pizza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American, Pizza, Bar Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arabian, Lebanese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asian, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asian, Sushi, Tapas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bakery, Beverages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bakery, Desserts, Ice Cream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bar Food, Modern Australian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biryani, Mughlai, Bengali, North Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Breakfast, Burger, Sandwich&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British, Contemporary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burger, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burmese, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Bakery, Tea, Vegetarian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Fast Food, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Italian, Continental, Mexican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Kiwi, Ice Cream, Desserts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, North Indian, Continental, Italian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Western&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, Continental, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, North Indian, Cafe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, North Indian, South Indian, Healthy Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, Thai, Asian, Japanese, Korean, Seafood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, Tibetan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, American, Italian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, Cafe, Italian, Pizza, North Indian, Chinese, Bakery, Mughlai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, European, North Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, Mexican, Beverages, Desserts, North Indian, Chinese, Rajasthani&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, North Indian, Chinese, Mughlai, Asian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, Seafood, North Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Desserts, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Drinks Only&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fast Food, American, Burger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fast Food, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fast Food, North Indian, Chinese, Desserts, Ice Cream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fast Food, Tea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finger Food, North Indian, Continental, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Goan, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaiian, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Healthy Food, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ice Cream, Desserts, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indian, North Indian, Curry, Cafe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italian, Continental, European, Cafe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italian, French, Cafe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italian, Mexican, Spanish, Thai, Vietnamese, Indonesian, American&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italian, World Cuisine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japanese, Sushi, Thai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kebab, Izgara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysian, Thai, Kerala, Vietnamese, Sri Lankan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mediterranean, Tapas, Vegetarian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexican, Spanish&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mithai, North Indian, South Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modern Australian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mughlai, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, American, Chinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Chinese, Arabian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Chinese, Fast Food, Desserts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Chinese, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Chinese, Sri Lankan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Continental, Chinese, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Continental, Mughlai, Asian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Fast Food, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Italian, Asian, American&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Kerala, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Mithai, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Mughlai, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Seafood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, South Indian, Chinese, Street Food, Fast Food, Mithai, Desserts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistani, Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pizza, Ice Cream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raw Meats, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seafood, American, Mediterranean, Japanese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seafood, Southern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Indian, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Indian, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Street Food, Bakery&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Street Food, North Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tea, Beverages, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tibetan, Nepalese&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Continental, Indian&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;North Indian, Mughlai, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Afghani, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American, Breakfast, Burger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American, Greek&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American, Mediterranean, Seafood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American, Steak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asian, Chinese, Japanese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asian, Mediterranean, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bakery, Desserts, Fast Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bakery, Mithai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BBQ, Southern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bihari, Lucknowi, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazilian, Healthy Food, Juices, Pizza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Breakfast, Sandwich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burger, Desserts, Bar Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burger, Pizza, Biryani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Asian, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Chinese, Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Continental, Italian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Fast Food, Asian, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Italian, Mexican, Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, South Indian, North Indian, Bakery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, Fast Food, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, Mexican, Fast Food, Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, North Indian, Italian, Mughlai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, Thai, North Indian, Japanese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Contemporary, Burger, European&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, Asian, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, Chinese, North Indian, Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, Healthy Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, Juices, Cafe, Desserts, Salad, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, North Indian, Mughlai, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Desserts, Bakery, Pizza, Burger, Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Desserts, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;European, Chinese, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;European, North Indian, Mediterranean, American&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fast Food, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fast Food, Mithai, Bakery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fast Food, South Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finger Food, European&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French, Mediterranean, European&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grill, Burger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Healthy Food, Fast Food, Salad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ice Cream&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indian, Curry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italian, Chinese, Mexican, Thai, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italian, Deli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italian, Mexican, American, Mediterranean&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italian, Pizza, Fast Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japanese, Korean&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kashmiri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Korean, Beverages, Desserts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lucknowi, Biryani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mediterranean, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexican, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mithai, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mithai, Street Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mughlai, Fast Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Eastern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Biryani, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Chinese, Continental, Mediterranean, Asian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Chinese, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Chinese, South Indian, Bakery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Continental, Asian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Continental, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, European, Mediterranean, Asian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Finger Food, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Mediterranean, Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Mughlai, Seafood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, South Indian, Chinese, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Thai, Italian, Chinese, Mexican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pizza, Cafe, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portuguese, African&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sandwich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seafood, French&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Indian, Chettinad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Indian, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lankan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Street Food, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sushi, Japanese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thai, Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;World Cuisine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Has_Table_booking:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Has_Online_delivery:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ankara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Armidale&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Delhi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dubai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gurgaon&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Agra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Noida&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CountryCode:ok]' type='palette'>
            <map to='#499894'>
              <bucket>184</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>94</bucket>
            </map>
            <map to='#79706e'>
              <bucket>214</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>189</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>148</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>14</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>162</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>215</bucket>
            </map>
            <map to='#d37295'>
              <bucket>216</bucket>
            </map>
            <map to='#e15759'>
              <bucket>191</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>166</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>30</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>208</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>37</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='RestaurantID' />
        <field-sort-custom-order field='RestaurantName' />
        <field-sort-custom-order field='CountryCode' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Calculation_2294302545857978370' />
        <field-sort-custom-order field='Address' />
        <field-sort-custom-order field='Locality' />
        <field-sort-custom-order field='Calculation_2294302545880690702' />
        <field-sort-custom-order field='Calculation_2294302545865367558' />
        <field-sort-custom-order field='LocalityVerbose' />
        <field-sort-custom-order field='Calculation_2294302545880211469' />
        <field-sort-custom-order field='Calculation_2294302545866043400' />
        <field-sort-custom-order field='Longitude' />
        <field-sort-custom-order field='Latitude' />
        <field-sort-custom-order field='Cuisines' />
        <field-sort-custom-order field='Currency' />
        <field-sort-custom-order field='Has_Table_booking' />
        <field-sort-custom-order field='Has_Online_delivery' />
        <field-sort-custom-order field='Calculation_2294302545865793543' />
        <field-sort-custom-order field='Is_delivering_now' />
        <field-sort-custom-order field='Switch_to_order_menu' />
        <field-sort-custom-order field='Price_range' />
        <field-sort-custom-order field='Votes' />
        <field-sort-custom-order field='Average_Cost_for_two' />
        <field-sort-custom-order field='Average Cost for two (copy)_955326082026852364' />
        <field-sort-custom-order field='Rating' />
        <field-sort-custom-order field='Datekey_Opening' />
        <field-sort-custom-order field='Calculation_2294302545884704784' />
        <field-sort-custom-order field='Calculation_2294302545881133071' />
        <field-sort-custom-order field='Calculation_2294302545876860939' />
        <field-sort-custom-order field='Calculation_2294302545872891914' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='City Parameter ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;London&quot;'>
          <calculation class='tableau' formula='&quot;London&quot;' />
        </column>
        <column caption=' Date Parameter ' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;year&quot;'>
          <calculation class='tableau' formula='&quot;year&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data' id='data_56CBCF8C942C4CACBED9B5E9AAD58C90'>
            <properties context=''>
              <relation connection='excel-direct.1xmg4eg1a11oya114n3z31oyfdvj' name='data' table='[data$]' type='table'>
                <columns gridOrigin='A1:T9552:no:A1:T9552:0' header='yes' outcome='6'>
                  <column datatype='integer' name='RestaurantID' ordinal='0' />
                  <column datatype='string' name='RestaurantName' ordinal='1' />
                  <column datatype='integer' name='CountryCode' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Address' ordinal='4' />
                  <column datatype='string' name='Locality' ordinal='5' />
                  <column datatype='string' name='LocalityVerbose' ordinal='6' />
                  <column datatype='real' name='Longitude' ordinal='7' />
                  <column datatype='real' name='Latitude' ordinal='8' />
                  <column datatype='string' name='Cuisines' ordinal='9' />
                  <column datatype='string' name='Currency' ordinal='10' />
                  <column datatype='string' name='Has_Table_booking' ordinal='11' />
                  <column datatype='string' name='Has_Online_delivery' ordinal='12' />
                  <column datatype='string' name='Is_delivering_now' ordinal='13' />
                  <column datatype='string' name='Switch_to_order_menu' ordinal='14' />
                  <column datatype='integer' name='Price_range' ordinal='15' />
                  <column datatype='integer' name='Votes' ordinal='16' />
                  <column datatype='integer' name='Average_Cost_for_two' ordinal='17' />
                  <column datatype='real' name='Rating' ordinal='18' />
                  <column datatype='date' date-parse-format='yyyy_MM_dd' name='Datekey_Opening' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Opening of restaurants '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Book'>Opening of Restaurants based on Yearly,Quarterly,Monthly</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption=' Date Parameter ' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;year&quot;'>
              <calculation class='tableau' formula='&quot;year&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Datekey Opening' datatype='date' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Datekey_Opening]' derivation='Year' name='[yr:Datekey_Opening:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Datekey_Opening:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Datekey_Opening:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Datekey_Opening:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Parameters].[Parameter 3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[cnt:RestaurantID:qk]</rows>
        <cols>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Datekey_Opening:ok]</cols>
      </table>
      <simple-id uuid='{D605B47E-8E6B-4598-BFE8-BAA2256D60FA}' />
    </worksheet>
    <worksheet name='Q 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='order_year' datatype='string' name='[Calculation_2294302545880002572]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
            </column>
            <column caption='Month Name' datatype='string' name='[Calculation_955326082012110850]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;month&apos;,[Datekey_Opening])' />
            </column>
            <column caption='Weekday name' datatype='string' name='[Calculation_955326082012966915]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[Datekey_Opening])' />
            </column>
            <column aggregation='Sum' caption='Financial Quarter' datatype='integer' name='[Calculation_955326082013257732]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,DATEADD(&apos;month&apos;,-3,[Datekey_Opening]))' />
            </column>
            <column aggregation='Sum' caption='Financial Month' datatype='integer' name='[Calculation_955326082013609989]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF  MONTH([Datekey_Opening]) - 3 &gt; 0&#13;&#10;THEN MONTH([Datekey_Opening]) - 3&#13;&#10;ELSE MONTH([Datekey_Opening]) + 12 - 3&#13;&#10;END' />
            </column>
            <column caption='Month_Year' datatype='string' name='[Calculation_955326082014277638]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
            </column>
            <column aggregation='Sum' caption='Weekday no' datatype='integer' name='[Calculation_955326082014887943]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;weekday&apos;,[Datekey_Opening])' />
            </column>
            <column caption='Month no' datatype='integer' name='[Calculation_955326082018402312]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='MONTH([Datekey_Opening])' />
            </column>
            <column caption='Quarter' datatype='string' name='[Calculation_955326082020794378]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
            </column>
            <column caption='Datekey Opening' datatype='date' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2294302545880002572]' derivation='None' name='[none:Calculation_2294302545880002572:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_955326082012110850]' derivation='None' name='[none:Calculation_955326082012110850:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_955326082012966915]' derivation='None' name='[none:Calculation_955326082012966915:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_955326082013257732]' derivation='None' name='[none:Calculation_955326082013257732:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_955326082013609989]' derivation='None' name='[none:Calculation_955326082013609989:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_955326082014277638]' derivation='None' name='[none:Calculation_955326082014277638:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_955326082014887943]' derivation='None' name='[none:Calculation_955326082014887943:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_955326082018402312]' derivation='None' name='[none:Calculation_955326082018402312:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_955326082020794378]' derivation='None' name='[none:Calculation_955326082020794378:nk]' pivot='key' type='nominal' />
            <column-instance column='[Datekey_Opening]' derivation='None' name='[none:Datekey_Opening:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Datekey_Opening:ok] / ([federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545880002572:nk] / ([federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326082018402312:ok] / ([federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326082012110850:nk] / ([federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326082020794378:nk] / ([federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326082014887943:ok] / ([federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326082012966915:nk] / ([federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326082014277638:nk] / ([federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326082013609989:ok] / [federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326082013257732:ok])))))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{1BDA3427-3693-4D18-BAC1-6D4D7B0908F8}' />
    </worksheet>
    <worksheet name='Q 3.1'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='City Parameter ' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;London&quot;'>
              <calculation class='tableau' formula='&quot;London&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Contains City' datatype='boolean' name='[Calculation_2294302545857978370]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([City],[Parameters].[Parameter 1])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='CountD' name='[ctd:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2294302545857978370]' derivation='None' name='[none:Calculation_2294302545857978370:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545857978370:nk]'>
            <groupfilter function='member' level='[none:Calculation_2294302545857978370:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545857978370:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[ctd:RestaurantID:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{293A0784-8860-4D3B-AC8F-40CBE932F68F}' />
    </worksheet>
    <worksheet name='Q 3.2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Country' datatype='string' name='[Calculation_2294302545843171328]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
            </column>
            <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='CountD' name='[ctd:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2294302545843171328]' derivation='None' name='[none:Calculation_2294302545843171328:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[ctd:RestaurantID:qk]</rows>
        <cols>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</cols>
      </table>
      <simple-id uuid='{B5B34563-C7F4-44E0-8E1A-AD6293FB9F77}' />
    </worksheet>
    <worksheet name='Q 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption=' Date Parameter ' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;year&quot;'>
              <calculation class='tableau' formula='&quot;year&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='order_year' datatype='string' name='[Calculation_2294302545880002572]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
            </column>
            <column caption='order_quarter' datatype='string' name='[Calculation_2294302545880211469]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
            </column>
            <column caption='order_month' datatype='string' name='[Calculation_2294302545880690702]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
            </column>
            <column caption='Date' datatype='string' name='[Calculation_2294302545884704784]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &apos;month&apos; THEN [Calculation_2294302545880690702]&#13;&#10;WHEN &apos;year&apos; THEN [Calculation_2294302545880002572]&#13;&#10;WHEN &apos;quarter&apos; THEN [Calculation_2294302545880211469]&#13;&#10;END' />
            </column>
            <column caption='Datekey Opening' datatype='date' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='CountD' name='[ctd:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2294302545884704784]' derivation='None' name='[none:Calculation_2294302545884704784:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545884704784:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[ctd:RestaurantID:qk]</rows>
        <cols>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545884704784:nk]</cols>
      </table>
      <simple-id uuid='{4FF87389-9072-4CC2-824D-00A93EADDBBF}' />
    </worksheet>
    <worksheet name='Q 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Average Cost for two' datatype='integer' name='[Average_Cost_for_two]' role='measure' type='quantitative' />
            <column caption='Bucket list' datatype='string' name='[Calculation_955326082026409995]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Average_Cost_for_two]&lt;=1000  then       &#13;&#10;&quot;0-1000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=10000  then&#13;&#10;&quot;1001-10000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=100000  then&#13;&#10;&quot;10001-100000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=1000000  then&#13;&#10;&quot;100001-1000000&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Average_Cost_for_two]' derivation='Count' name='[cnt:Average_Cost_for_two:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average_Cost_for_two]' derivation='None' name='[none:Average_Cost_for_two:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_955326082026409995]' derivation='None' name='[none:Calculation_955326082026409995:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[cnt:Average_Cost_for_two:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326082026409995:nk] / [federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Average_Cost_for_two:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{E21171A8-BDD6-4AEB-9708-8C491CE9D3ED}' />
    </worksheet>
    <worksheet name='Q1'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Country' datatype='string' name='[Calculation_2294302545843171328]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
            </column>
            <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2294302545843171328]' derivation='None' name='[none:Calculation_2294302545843171328:nk]' pivot='key' type='nominal' />
            <column-instance column='[CountryCode]' derivation='None' name='[none:CountryCode:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='211' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:CountryCode:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{D411E565-70A7-4669-854C-DDB90519F820}' />
    </worksheet>
    <worksheet name='Q5'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column aggregation='Sum' caption='Rating (copy)' datatype='real' name='[Calculation_955326081973182464]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Rating]' />
            </column>
            <column datatype='real' name='[Rating]' role='measure' type='quantitative' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='CountD' name='[ctd:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_955326081973182464]' derivation='None' name='[none:Calculation_955326081973182464:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326081973182464:ok]'>
            <groupfilter function='member' level='[none:Calculation_955326081973182464:ok]' member='2.8999999999999999' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326081973182464:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[ctd:RestaurantID:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{49CB6B25-7303-4D26-B1BE-2A55AD514114}' />
    </worksheet>
    <worksheet name='Q7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Book'>Percentage of Restaurants Based on&quot;Has Table Booking&quot;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Country' datatype='string' name='[Calculation_2294302545843171328]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
            </column>
            <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
            <column caption='Has Table booking' datatype='string' name='[Has_Table_booking]' role='dimension' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2294302545843171328]' derivation='None' name='[none:Calculation_2294302545843171328:nk]' pivot='key' type='nominal' />
            <column-instance column='[Has_Table_booking]' derivation='None' name='[none:Has_Table_booking:nk]' pivot='key' type='nominal' />
            <column-instance column='[RestaurantID]' derivation='CountD' name='[pcto:ctd:RestaurantID:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_2294302545843171328:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Has_Table_booking:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[pcto:ctd:RestaurantID:qk:4]</rows>
        <cols>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Has_Table_booking:nk]</cols>
      </table>
      <simple-id uuid='{8EE5ECD0-4266-429F-8BFD-3210DF3F4709}' />
    </worksheet>
    <worksheet name='Q8'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Book'>Percentage of Restaurants Based on &quot;Has Online delivery&quot;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Country' datatype='string' name='[Calculation_2294302545843171328]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
            </column>
            <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
            <column caption='Has Online delivery' datatype='string' name='[Has_Online_delivery]' role='dimension' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2294302545843171328]' derivation='None' name='[none:Calculation_2294302545843171328:nk]' pivot='key' type='nominal' />
            <column-instance column='[Has_Online_delivery]' derivation='None' name='[none:Has_Online_delivery:nk]' pivot='key' type='nominal' />
            <column-instance column='[RestaurantID]' derivation='CountD' name='[pcto:ctd:RestaurantID:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_2294302545843171328:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Has_Online_delivery:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[pcto:ctd:RestaurantID:qk:4]</rows>
        <cols>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Has_Online_delivery:nk]</cols>
      </table>
      <simple-id uuid='{3EB81232-C216-4399-AE8C-0EB771FF7DBD}' />
    </worksheet>
    <worksheet name='Top 10 cities with maximum voted restaurants '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Book'>Top 10 Cities With Maximum Voted Restaurants</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Country' datatype='string' name='[Calculation_2294302545843171328]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Votes]' role='measure' type='quantitative' />
            <column-instance column='[Votes]' derivation='Max' name='[max:Votes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2294302545843171328]' derivation='None' name='[none:Calculation_2294302545843171328:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_2294302545843171328:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Votes])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:City:nk]</column>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:City:nk]</rows>
        <cols>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Votes:qk]</cols>
      </table>
      <simple-id uuid='{E16C0FD5-D349-4D80-9D3B-4B654679E34C}' />
    </worksheet>
    <worksheet name='Top 10 cuisines by ratings'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Book'>Top 10 Cuisines by Average Ratings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column datatype='string' name='[Cuisines]' role='dimension' type='nominal' />
            <column caption='Datekey Opening' datatype='date' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Rating]' role='measure' type='quantitative' />
            <column-instance column='[Rating]' derivation='Avg' name='[avg:Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cuisines]' derivation='None' name='[none:Cuisines:nk]' pivot='key' type='nominal' />
            <column-instance column='[Datekey_Opening]' derivation='Year' name='[yr:Datekey_Opening:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Cuisines:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Rating])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Cuisines:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Datekey_Opening:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Datekey_Opening:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Cuisines:nk]</column>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Datekey_Opening:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <size column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[avg:Rating:qk]' />
              <text column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Cuisines:nk]' />
              <color column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Cuisines:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F0DC0222-6680-4DE5-B125-A7A0ECBAAD00}' />
    </worksheet>
    <worksheet name='Top 10 least rated restaurants'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Book'>Top 10 Least Rated Restaurants</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Country' datatype='string' name='[Calculation_2294302545843171328]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
            </column>
            <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Rating]' role='measure' type='quantitative' />
            <column caption='Restaurant Name' datatype='string' name='[RestaurantName]' role='dimension' type='nominal' />
            <column-instance column='[Rating]' derivation='Max' name='[max:Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2294302545843171328]' derivation='None' name='[none:Calculation_2294302545843171328:nk]' pivot='key' type='nominal' />
            <column-instance column='[RestaurantName]' derivation='None' name='[none:RestaurantName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_2294302545843171328:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Rating])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:RestaurantName:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]</column>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Rating:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Rating:qk]' />
              <text column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{53109D9E-2457-45FA-890B-356672E89F1D}' />
    </worksheet>
    <worksheet name='Top 10 restaurants by ratings '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Book'>Top 10 restaurants by Average Ratings </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Country' datatype='string' name='[Calculation_2294302545843171328]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
            </column>
            <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Rating]' role='measure' type='quantitative' />
            <column caption='Restaurant Name' datatype='string' name='[RestaurantName]' role='dimension' type='nominal' />
            <column-instance column='[Rating]' derivation='Max' name='[max:Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2294302545843171328]' derivation='None' name='[none:Calculation_2294302545843171328:nk]' pivot='key' type='nominal' />
            <column-instance column='[RestaurantName]' derivation='None' name='[none:RestaurantName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_2294302545843171328:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Rating])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:RestaurantName:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]</column>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Rating:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Rating:qk]' />
              <text column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{EF016C0A-2DBC-420C-8F7B-CBB6E371F9BA}' />
    </worksheet>
    <worksheet name='Top 5 costly Restaurants by avg cost'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Book'>Top 5 Costly Restaurants By Average Cost</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Average Cost for two' datatype='integer' name='[Average_Cost_for_two]' role='measure' type='quantitative' />
            <column caption='Datekey Opening' datatype='date' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column caption='Restaurant Name' datatype='string' name='[RestaurantName]' role='dimension' type='nominal' />
            <column-instance column='[Average_Cost_for_two]' derivation='Avg' name='[avg:Average_Cost_for_two:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RestaurantName]' derivation='None' name='[none:RestaurantName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Datekey_Opening]' derivation='Year' name='[yr:Datekey_Opening:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Average_Cost_for_two])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:RestaurantName:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Datekey_Opening:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Datekey_Opening:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[avg:Average_Cost_for_two:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]</column>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Datekey_Opening:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[avg:Average_Cost_for_two:qk]</rows>
        <cols>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]</cols>
      </table>
      <simple-id uuid='{38302F1A-384B-4113-ADA0-E893F3A305CA}' />
    </worksheet>
    <worksheet name='country wise count of cuisines'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Book'>Country wise count of Cuisines</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
          </datasources>
          <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
            <column caption='Country' datatype='string' name='[Calculation_2294302545843171328]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
            </column>
            <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Cuisines]' role='dimension' type='nominal' />
            <column-instance column='[Cuisines]' derivation='CountD' name='[ctd:Cuisines:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2294302545843171328]' derivation='None' name='[none:Calculation_2294302545843171328:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_2294302545843171328:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[ctd:Cuisines:qk]</rows>
        <cols>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</cols>
      </table>
      <simple-id uuid='{16FBC9E9-B2ED-4315-9701-48E49583C4BD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
      </datasources>
      <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
        <column caption='Country' datatype='string' name='[Calculation_2294302545843171328]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_2294302545843171328]' derivation='None' name='[none:Calculation_2294302545843171328:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='24' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='18' type-v2='layout-basic' w='99034' x='483' y='940'>
              <zone h='87783' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='11277'>
                <zone h='87783' id='5' type-v2='layout-basic' w='99034' x='483' y='11277'>
                  <zone h='43715' id='3' name='Q7' w='24499' x='483' y='11277'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='43715' id='9' name='Q8' w='27037' x='26913' y='11277'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='40310' id='11' name='country wise count of cuisines' w='53467' x='483' y='58750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='40310' id='13' name='Top 10 restaurants by ratings ' w='21367' x='78150' y='58750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='40310' id='15' name='Top 10 least rated restaurants' w='22269' x='53950' y='58750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='43715' id='16' name='Top 10 cities with maximum voted restaurants ' w='45567' x='53950' y='11277'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3758' id='28' param='vert' type-v2='layout-flow' w='53467' x='483' y='54992' />
                  <zone h='3758' id='29' param='vert' type-v2='layout-flow' w='45567' x='53950' y='54992' />
                  <zone h='43715' id='30' param='horz' type-v2='layout-flow' w='1931' x='24982' y='11277' />
                  <zone h='40310' id='31' param='horz' type-v2='layout-flow' w='1931' x='76219' y='58750' />
                </zone>
              </zone>
              <zone forceUpdate='true' h='10337' id='17' type-v2='text' w='89378' x='483' y='940'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='36'>Zomato</run>
                  <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='48'>Æ </run>
                  <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='36'>Dashboard 1</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f0f7fa' />
                </zone-style>
              </zone>
              <zone h='10337' id='34' mode='dropdown' name='Top 10 cities with maximum voted restaurants ' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' type-v2='filter' values='database' w='9656' x='89861' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='37' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone forceUpdate='true' h='10337' id='17' type-v2='text' w='89378' x='483' y='940'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='36'>Zomato</run>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='48'>Æ </run>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='36'>Dashboard 1</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f0f7fa' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43715' id='3' is-fixed='true' name='Q7' w='24499' x='483' y='11277'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43715' id='9' is-fixed='true' name='Q8' w='27037' x='26913' y='11277'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10337' id='34' mode='dropdown' name='Top 10 cities with maximum voted restaurants ' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' type-v2='filter' values='database' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43715' id='16' is-fixed='true' name='Top 10 cities with maximum voted restaurants ' w='45567' x='53950' y='11277'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40310' id='11' is-fixed='true' name='country wise count of cuisines' w='53467' x='483' y='58750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40310' id='15' is-fixed='true' name='Top 10 least rated restaurants' w='22269' x='53950' y='58750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40310' id='13' is-fixed='true' name='Top 10 restaurants by ratings ' w='21367' x='78150' y='58750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ED3495C2-463C-4FE3-A8A1-F2C6AD496BE4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='data (Zomato data)' name='federated.0ipbie809pjegg1ao5zs11qf2bw2' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption=' Date Parameter ' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;year&quot;'>
          <calculation class='tableau' formula='&quot;year&quot;' />
          <members>
            <member value='&quot;year&quot;' />
            <member value='&quot;quarter&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0ipbie809pjegg1ao5zs11qf2bw2'>
        <column caption='Datekey Opening' datatype='date' name='[Datekey_Opening]' role='dimension' type='ordinal' />
        <column-instance column='[Datekey_Opening]' derivation='Year' name='[yr:Datekey_Opening:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98466' id='15' param='horz' type-v2='layout-flow' w='99166' x='417' y='767'>
            <zone h='98466' id='13' type-v2='layout-basic' w='93176' x='417' y='767'>
              <zone h='88508' id='7' param='horz' type-v2='layout-flow' w='53714' x='417' y='10725'>
                <zone fixed-size='784' h='88508' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='53714' x='417' y='10725'>
                  <zone fixed-size='685' h='66443' id='9' is-fixed='true' name='Top 10 cuisines by ratings' w='53714' x='417' y='10725'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='40597' id='10' name='Opening of restaurants ' w='37470' x='56123' y='10725'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43876' id='11' name='Top 5 costly Restaurants by avg cost' w='37470' x='56123' y='55357'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='9958' id='12' type-v2='text' w='93176' x='417' y='767'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='36'>Zomato Dashboard 2</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f0f7fa' />
                </zone-style>
              </zone>
              <zone h='88508' id='20' param='horz' type-v2='layout-flow' w='1992' x='54131' y='10725' />
              <zone h='4035' id='21' param='vert' type-v2='layout-flow' w='37470' x='56123' y='51322' />
            </zone>
            <zone fixed-size='115' h='98466' id='14' is-fixed='true' param='vert' type-v2='layout-flow' w='5990' x='93593' y='767'>
              <zone h='5369' id='16' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='5990' x='93593' y='767'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25503' id='17' name='Opening of restaurants ' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Datekey_Opening:ok]' type-v2='filter' values='database' w='5990' x='93593' y='6136'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='26' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='9958' id='12' type-v2='text' w='93176' x='417' y='767'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='36'>Zomato Dashboard 2</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f0f7fa' />
                  </zone-style>
                </zone>
                <zone h='5369' id='16' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='5990' x='93593' y='767'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66443' id='9' is-fixed='true' name='Top 10 cuisines by ratings' w='53714' x='417' y='10725'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25503' id='17' mode='checkdropdown' name='Opening of restaurants ' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Datekey_Opening:ok]' type-v2='filter' values='database' w='5990' x='93593' y='6136'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40597' id='10' is-fixed='true' name='Opening of restaurants ' w='37470' x='56123' y='10725'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43876' id='11' is-fixed='true' name='Top 5 costly Restaurants by avg cost' w='37470' x='56123' y='55357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7313DC51-11BD-45CF-AA4E-17E70BB7E916}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:CountryCode:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CC6141F-E6A1-4B7C-BD7D-EE9E291956C0}' />
    </window>
    <window class='worksheet' name='Q 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545880002572:nk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326082012110850:nk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Datekey_Opening:qk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[sum:Calculation_955326082018402312:ok]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Datekey_Opening:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B6CCC2B-7526-4E8D-893B-FC03317FAF5D}' />
    </window>
    <window class='worksheet' maximized='true' name='Q 3.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545857978370:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{46935A5D-0EA0-4177-8FA9-9878F482DAC2}' />
    </window>
    <window class='worksheet' name='Q 3.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:CountryCode:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11A09669-CCD1-4258-9EC4-BD040B21B1ED}' />
    </window>
    <window class='worksheet' name='Q 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545884704784:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545881133071:nk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545884704784:nk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[yr:Calculation_2294302545876860939:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A1EB0A8-817F-4AB3-ADEB-B9F30C30C66D}' />
    </window>
    <window class='worksheet' name='Q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_955326081973182464:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32E4100F-CE2F-4095-B658-E1BF37D0BC4A}' />
    </window>
    <window class='worksheet' name='Q 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C27E877C-F283-424A-90FC-B76756385FA5}' />
    </window>
    <window class='worksheet' name='Q7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Has_Table_booking:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Has_Table_booking:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70904443-10CE-4C30-9A83-3267AA969183}' />
    </window>
    <window class='worksheet' name='Q8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Has_Online_delivery:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Has_Online_delivery:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D57AFA26-4543-454E-B99B-71FAFE8D25C8}' />
    </window>
    <window class='worksheet' name='country wise count of cuisines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:CountryCode:ok]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA83530D-B449-45F5-B8A9-BB2CC6815391}' />
    </window>
    <window class='worksheet' name='Top 10 restaurants by ratings '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Rating:qk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0CFEFFE-8463-4960-8FF8-7F29F7E8D3E7}' />
    </window>
    <window class='worksheet' name='Top 10 least rated restaurants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{634DCDF1-000F-48F8-B7EC-7EED33CC551C}' />
    </window>
    <window class='worksheet' name='Top 10 cuisines by ratings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Cuisines:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Cuisines:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B7C559C-8103-4E43-A259-4BBC1F2B09A8}' />
    </window>
    <window class='worksheet' name='Top 5 costly Restaurants by avg cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:RestaurantName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E47AC42-6279-4715-BB0B-EDABC9A61F68}' />
    </window>
    <window class='worksheet' name='Top 10 cities with maximum voted restaurants '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545843171328:nk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1E5A626-460F-40DE-9BE0-A839DE9B5A7B}' />
    </window>
    <window class='worksheet' name='Opening of restaurants '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 3]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545880002572:nk]</field>
            <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Calculation_2294302545884704784:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5A89BC5-4A5D-4961-8819-B63E163AF2BF}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Q7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q8'>
          <zoom type='entire-view' />
          <highlight field='[federated.0ipbie809pjegg1ao5zs11qf2bw2].[none:Has_Online_delivery:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 cities with maximum voted restaurants '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 least rated restaurants'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 restaurants by ratings '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ipbie809pjegg1ao5zs11qf2bw2].[max:Rating:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='country wise count of cuisines'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{7CFB9E40-3A72-4D07-AEC7-AAA53F9383D0}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Opening of restaurants '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 cuisines by ratings' />
        <viewpoint name='Top 5 costly Restaurants by avg cost'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{8D1DCADA-8154-4344-B9D6-27C3937C3D01}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Opening of restaurants ' width='192'>
      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
      PGQFMQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 3.1' width='123'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 3.2' width='192'>
      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
      18t6hOiplgG48qN/ypXvuDxws1Gn1mjicjjQUNA1VdbiizOn6yM2lz0ml4qhWn1YXV6KuSwX
      ludPszYhXrmuA+BxOXmQKTEzM8gXd7+Si+SJM6nrAKTTx3i9LsqlGhevvEt8f4fA95ZkS6Q4
      U7o+WkYnZxjl6UXyxoN+QHaEibNFvvlWGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBia
      BEAYmgRAGJoEQBiaBEAYmgRAGJoEQBha18uhk7EIiWSGsYlxdIuTUjbNxMT4adYmxCvXdQAG
      QmOotTLFfJ7t/XUWli++9h1huuwIEx3qOgCxyA4W7zDDtiqFWohisYgy4H2yE6zT3VytdHof
      ismE2Wx+6ccVxtF1AHRdIZ2I4hgbY2oyQK1cAEWBr9+1TyMA3XhdjyvOpq4DMD49+8zPbkcA
      kC2R4myRWSBhaBIAYWgSAGFoEgBhaBIAYWgSAGFoEgBhaBIAYWgSAGFoEgBhaBIAYWgSAGFo
      EgBhaBIAYWhdB+D46JDbX92jWUwRTeXY2HxwmnUJ0RNd7wcIDI1ydJxF11Xu3vlSLpInzqSu
      A1DIZTg+zjAy0MfShUsc7ocJfG9BLpInzpSujxazxcLS0jJ2l5sJqxUt2H+adQnRE10HwOX2
      4nJ/4xdmGyBbIsXZIrNAwtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQehoAVVVRVVXW
      7BiYrut8/vnnxONx0uk0KysrHa/5Oo0aGo0Guq5j/vWvf/3r075zeH4dT7lc5ne/+x26rrOy
      ssLKygrBYBC3293qbgDYy1TJVtUTP3bQY2XMZ2/792q1ytraGsFgkHw+j6nDr1MvlUp8+umn
      aJqG3+/nD3/4A1NTUx2tWTo8POTGjRuoqsrNmzcJhUI4nc4Tt39ZyWSSmzdv4nK5uHv3LoeH
      h4yNjZ34Oei6zsOHD9F1HVVVyeVyL/w//LZIJEKpVGJ9fZ1EIoHH40FVVfr6+k58H4lEgkQi
      gc/nY2Njg0Ag0NHas88//5ytrS1sNlv3PUA5n2HzwS7NeoVitUE6nX7h7WOxGKVSic3NTWw2
      G9evXycej3f78F1JJBI4nU4+++wzfv/735NIJDpqb7FYuHbtGuFwmNu3b3N0dNRRe1VVWV9f
      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
    </thumbnail>
    <thumbnail height='192' name='Q 4' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q 6' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q1' width='192'>
      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
      pfTEgz/sAngu81vqesOJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q5' width='132'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAdV0lEQVR4nO3deXQc9YHg8W9V9d1qqXVLlnVZsiWfso3vCGwwlxMmNhicgWGWECBZXt6S
      vEnem52Q3cy83Uzmgk0C2Swbkh0y3ITTdjDBBIMvjI1syYes+7bu1tF3d1X99g/bwooheDI+
      kOr3+U/VpV//qlXfOrr72YoQQiBJFqQoiqJe6UlI0pUkA5AsTQYgWZoMQLI0GYBkaTIAydJk
      AJKlyQAkS5MBSJYmA5AsTQYgWZoM4FLq28F/3XIrj31onrMwRsfBl/m77/2Ap/d1X+QnFBix
      Eep3PsnfPHA7X95wC7fe/W1+8tpBesPGhQ/T8wH/9+++x9+/eIBTUYDj/OqBu4mMjV3k+X6C
      mie4ffNfsbX3QlYe4K0f3sdt/7gT3TCJj/Xz6g+28M3vvUTTBT6dDOBSMqKMDg0RTJz7fUOB
      kYgwNjpGOK5fvOcSAjM+zonX/5Ef/OIopXf/E8+89DQ/+eZqRnY8weMvvEdHyOCCvvmoxwmN
      jTIeiWMIAJ1YMAiX43uTyRCDQyNEL6hXk+jYMEPjMQQghEk8PE4oHOdCc7f96TOVLhZhJIhG
      IsTiydM7nKLh9PpIcdtREZhGklg4TDShY6Ki2Z14PW4cNg1FOTMGgtDAbp5+ppHyr/4z962d
      hQb4Vt/K3WMDPPr8NnZVFHH76nJciXFGQ+D1O0iGwsSTAsXmwJOSgtv+ScfEBdz7xP/D5UtF
      mEnCY+Mk7V48SoJwLIEhVJweLx63E5sCCJNENEQomsAwQbU58PhScNvOH1uYOrFImGgsgSEU
      bKEEH1cqEKZBIhomHE1iADaHG4/HjcOmovzBWM7UHG792+e5yXCQcoGvvQzgcyDWU8PLL73K
      7tpOxmI64KDo2vv51r3rmOmIM9S4j1eefoHdLaPoqoeskmVsvPNWqufNwKOdGUSYjB98n6O2
      Cr5dXYY2MbqDWQurKNtxhJON/YxUlaG+80PueSTJ/T++nsGXt7GvYQAjtYSb7v0r7r56Bo7z
      ZjjAjv/xDTb896dQtFP88lvfYu+cr/OfS9vZ+m4N7QE7Feu/wr133UxFukpspIldzz/Hawcb
      GImAO7OMdX9+P3d8oQSvds6wIsF45yFeee43vF/XTRgXM30JkobrzCbpjHcfZecrz/HmwR6C
      poq/eDm33L6Ja6sKSbFPnqURCbD353/Nk+1r+W8/u4e5F/DaywAug+GWIxz2nj36xTnVcoqx
      5MePJ3UHZevv4YYHysnxqYzV/JL/8teP8vJVq/jW3GGa9/2eD2NLeOjx+7gqNULXwQN0mTFi
      OucEIBjs60O1ryQ3Z/Lzq2l+sr2CzkCQeMLEDUAnjV0zuP/hn3BfqI3Xf/pDfv/Oh1x39SZK
      PmuD9ASxgSEcd36Nf9jydep/+yv+z9sHOd66nIrFNmqef5LXBxbx9X/4LlXZDtp3/Av/8/Gf
      kVn6I/6s8ONdzhhv5s2nX2B/eD73/fD7rCzxkdz1CBv+tgEQJIO9HHrzOd4LLefbP/17Kl19
      vP/0z3lt+zvkZG1h+WdO9LPJAC6Dxnef5t9qz56wDSKBXroTM1hxZklqcSVzerrorD9IY0zH
      FCnkucJ09QRgvobN6UKNBuhsbiS7KJ+85espcWjnXQJ8KqcTt91OMhrF0M9eHVdwzYYF5Dts
      JKIOvC47ZjhB8o8OdIbDTfqC1VSXZQEhnE4XqjJMUtchcJL3awL4FjoYOP4RezRBgiwyxYcc
      bxznzwozJoYZb66jtluj6vZqFpRkYFfB7rVzesMMQmPt1HzYjG1xNcPH9rEXCGJjbKCb3pFR
      9JL/+O4rA7gMVt//L3yv+uyhOkrr3t/w+DMfnfk5yeDJPbz6xl46IwJNU1EI02dCHoDbT/Hy
      alZ3vMPhbb+hNTuPmYVzWLJyCWX5fpznXFZ7U1IQZpBIBPB8vFyMBOgP6vgqM3G7/+C64WIL
      DNEbG6Xn+IfYh32cvaXwr7iWymxt0qqjI8OEFJUMn2fSdpxmkEz0caolSLdtP+8Ou84sVykt
      r2SG341yYbn+UTKAK26Yut9t5/D4Au6+/w5Wlqah0cmTX7uXBgDVTe6ca/jLby/iVFs9R498
      wK7fPk9TUOP+29Yw03f6T6ioKtnzq8h+5UNqjwVYuSLjzFt8BoGOdrrCKRQUZZLiUoheys1x
      efBqLsqu+098d9NC0l2f/kaj3e7AZggSuoF53qMqmuYlJSeLeTfcy9/cXoHzvHX6/sPTlW+D
      XnFJYtEkittPeooLkmO07tvF0dHTj+rhUdqPHaR+GPLmruZLt32Zq8s1BnsGGI+c+2afiqf8
      GjYsFBx4/Q0Oto+hG0mC3UfZ+e5hYvkLWVZZgO8SnwDIqWBpqZ2O997mQMsgcVNgJkL0ttVy
      rDM8adX0giLy3VEaj7XQNxpHT47T3t6PMAWg4UkpZe5sjcYPdnKgZYSEaaKHh2k+0URPIMhn
      vokcH+TEnq3862920dAbAqD30Cv8+snnOdgfB+QZ4HMgk3mrl7Ln5T38+vEmsgoKKM0TuDRO
      HxWFTqi3nnd+9z47dAPTjDAayKJq3Wyyfef8+RQFR0oZ1915J8Fte9n268fYZddIxqIYKeXc
      vPEmFs5Iu/R/cHcRV2/+CoPP/pY3nvophzJ8uJxufFkzmLe6fNKq3sIl3Hh9Cy+88xa/ePQQ
      WTOKmafHz5wNVFxpxVz95U10v/4eL/3vH/N+TgpupwdvTgVrr80h97Pmkhim4YMdPFOXR3b5
      XCryU+g7/AbPPh1m06ovAaDIfxXiEop0c3B/PZ5F1zM/++wtq05osIvG9gCpRZWU53rRw300
      n2imOxCBlGzKKoowmo8QLFjN4gI7kcApWls76B+NoGPDk17A7Nml5KS50CbdCQtMI8F4XztN
      rd2MhA0Ul48ZpeWUFmThsZ1eOdp9hP0nFRZct5AcVcWIh+hrOk63ns+8xUX4wgOcbOgg5i9m
      TlEOHluUrsMfMmPBalCiNB+qIZBVxeryDEBnrLeNxp4IOSWzKc7ygBlnuL2B+o4+wgkT1eEl
      M7+EWaUF+Cdd7Av0YB9NDS30DEfAm0NFnsLJ9igVa1ZR5BEYiTCDHQ00dgwTMcDuTiVnZiml
      BVl4nQl6jhzkpFLGdYtmgB5nsPkILeFc5i8rJS05TldzI02jLioqyylIdzHS/AG17ToFy1Yy
      J92hyAAky5L/LIpkeTIAydJkABdRIpFA1y/iF9ykS04GIFmaDECyNBmAZGkyAMnSZACSpckA
      JEuTAUiWJgOQLE0GIFmaDECyNBmAZGkyAMnSZACSpckAJEuTAUiWJgOQLE0GIFmaDECyNBmA
      ZGkyAMnSZACSpckAJEuTAUiWJgOQLE0GIFmaDECyNBmAZGkyAMnSZACSpckAJEuTAUiWJgOQ
      LE0GIFmaDECyNBmAZGkyAMnSZACSpckAJEuTAUiWJgOQLE0GIFma7UpPYLrSdZ3R0VEMw0AI
      MbFcURRcLhc+nw9VVSetPz4+jhACv9+PpmnnjSmEIJFIEIlESCQSAKiqSkpKCi6XC0VRJq2b
      TCYJBoPYbDZSUlLQNA0hBKFQiGg0is1mIy0tbeK5DMMgFouhaRpOp3PSeNOWkC6aeDwuksmk
      EEKIxsZGccstt4i5c+eKyspKUVlZKebMmSOKiorEgw8+KEZHRyd+zzRNUVNTI9avXy9Wrlwp
      enp6PnH8SCQi3njjDbFlyxZRVVUl5s6dK9asWSMee+wxMTIyMmndRCIh3nrrLbF69Wrx1a9+
      VbS0tAghhOjr6xPf/e53xaJFi8SGDRvEkSNHhGmawjRN0draKh555BHxxhtvCF3XL9Gr9PkB
      8gxwycyePZutW7dO/CyEYHBwkGeeeQafz4fX6514LBAI8Oqrr7J8+XJOnDjxqUfeSCSCaZo8
      +OCDLFu2DLfbTV1dHQ8//DAzZszgtttuA8A0TTo7O6mpqaG4uJjCwsKJ5du3b8fv97Nz5072
      7t3Lz3/+cx599FEA6urqcDqdXH311Z94BpqO5D3AZWIYBu3t7XR3d3PNNddgs50+9sTjcd5+
      ++2JHc/tdn/qGJmZmWzcuJF169ZNXNJUVVWxYsUKOjs7gdOhBYNB9u3bh6IorF+/HrvdDkAi
      kaCtrY3q6mr8fj+rV68mEonQ19dHR0cHbW1trFmzBr/ff+lfkM8JGcBlIIQgHA5z4MABysrK
      KC0tBU4fkY8fP86JEydYt24deXl5FzymYRgMDw+ze/duBgcHWblyJXD6XqK+vp6TJ0+yfv16
      srOzJ81DCIHdbp84y+i6TiAQoL6+HpfLRW9vLy+++CK1tbXEYrGL+Cp8Pk35S6Bo73FqmgaI
      Jc3JDzhTyS+pYN7MVAj309DUSvdwZNIquQvWsiBXw0iE6Gs+QdNAAl9uMeWzCklznrkMSQzT
      2Bwks3gG6R4H6p9wXyiEoLOzk4aGBh566KGJI/Lg4CC7d++msrKSBQsW0NHR8ZljxeNx9u/f
      T21tLQMDA4RCIdauXcuSJUsmLrN2797NggULqKqqoqenZ+J37XY7WVlZ1NfXs2DBAtrb23G5
      XESjUTo7O3E6nWzduhVVVTl69CibN29m4cKF0/pyaMoHIPQ4sWiESOLjAPTIKKcGjjHqmcW8
      mRAfbOFofSMhJZ1M78cnvYQBwtAJdtex70g3Nq+doZEQceFk6bxcXBiMtNZxvCOFZQX5pP+J
      c0wkEuzatYvS0lKKi4sBiMViHDhwAIBVq1aRmpp6YdsrBNFolGAwiGmaZGZmMjg4yPj4OD6f
      j7179yKE4MYbb5wI7SybzcbatWt59tln+dGPfkQwGGT58uU0NTWRm5tLc3MzGzduZNmyZTz1
      1FPU19cze/bsSfcr082UD8BTuJT1hecsEEkCXUfZt7uLktLT17LB8RDu3HKWLF5NWcbko5kR
      D9HffAJmb2JDlYfeukM09bQwXJZLfryD2nadoopSclL+tKM/QGdnJ4cPH+Y73/kOTqcTgK6u
      LrZt20ZHRwcNDQ3YbDaGhoaoqanh+9//PuvXr+euu+46byyXy8WGDRu4+eabCYVCHD9+nJdf
      fplXXnmFm266iV/+8peoqkp3dzcAra2tDA0N0dHRwV133cXy5cvZuHEjR48eJT09HafTyfDw
      MOXl5TQ2NlJWVkZGRgZ5eXlEo1Hi8bgMYCoxYmH62+qJ5lczy68BcYLj4HJ48HrPP5WbhiA0
      liC/KhuXQ+DzOVAGBxkNRTFbuzAzCinO8+PQ/rS93zRNfve731FWVsbs2bMnlmdkZLBlyxb6
      +vomlnV1ddHW1saSJUsm7hM+jaIo+Hw+Vq1aRVdXF1u3buX222/ngQceIBqNTqynaRoul4tF
      ixaRl5eH0+mkurqa6upqurq6eOKJJ7jnnnuIx+MAE59ZCCEs8TnA9ApAGETHu2hpc1OxqQCP
      AhAmOD7IsY8OcaRmLw7Njju9iKVXf4GqglRQQFFNkvrZMTQ0zQ6BdnoML361n72v7uZUyM2c
      a7/EtbP9qP+OHaO/v589e/bw8MMP43A4JpZnZmZy/fXXT1q3rq6O2tpaNm/eTH5+/nljNTc3
      c/jwYcrKypg3bx4Oh4POzk62b99ORUUFGRkZbN68edLv+Hw+6urquOWWW5g1a9bEcl3XeeGF
      F6isrKS0tJSenh5sNhu1tbV4PB66urqYM2cOHo/ngrd1KppWAZh6kuGmGvrzq7kh7eym+Shb
      dT3plWGSAEaSsVN17HvxZaJ3/QWrMzUyc/0cOdrIsvRM+gYCREwXo6NhvEqQ5rZx0stWcF3q
      KB+++Q71M29lvkfDNM2JT2Mnnt80EUJMOpo+99xzlJeXU1hYSDgc/qPzj8Vi6LpONBolHA4T
      jUbZunUrTU1NPPTQQ9hsNvr6+nj22WcZHBzENE28Xi8rV67kjjvumHTkPysej5NMJifGPOvQ
      oUPU1dWxZcsW4vE4Pp+PRYsW8dRTT/Gzn/2MNWvWUFlZia7rnznvqUw5+4nYlCcE8VA9O578
      iIKv3cmytE9pW5joiTDdu37Nr0LX8ne3VRAbbmHP9m3s64iRVX4VS0oy0Jw2/PRybDSPq5Ys
      pMhv0vjaYxyd923uqLRNvKV4rmQyiaqqE++aCCEIBAJomnZB763H43ECgQDZ2dnYbDZM02R0
      dJR4PE5OTg4AoVCIsbExEokEQghsNhvp6emkpaV94iVLKBQiHo+Tmpo66aY4HA4TDAbJzc1F
      UZSJcIeGhkgkEqSlpX3qVzKmC03TlGlzBhBA4PB7dFbcxIbUP7JZiorN6aOoIIPQRzEURcWV
      UcbaLd9glS5Q4/0cb+4D7ywyou3YXU6cdhuqqpCepjIeTAA2FEU5b4c7u+zc7/ic+z78Z3G7
      3RQUFEz8rKoqWVlZk9ZJT08nPf3C34/6tHeXfD4fPp9v0jKPx0NRUdEFjz0dTJ8PwpKt7PtA
      YdWaUuzn7peJOJFImIhuYJ45aptGkuHhUbxeF6CgqBoOt5cUj8pQ9yDRqJOSsgxcTheGrqMb
      JkIYRKI6Xo/902YgTUHT4wwgdEYP/J6GuTewya8w6bgc6uCD3TWcshWzfGEpGS4Ya9/Ltt0m
      199bfs4YJuH+djoGBnFWXE+OXYEZRVDbTLs/BVvGEHuaSlh67fQ5ZkjTJQBzmKMNbm7aUsZ5
      V6wZ5VSvdVF7YC/vvLSLkSg4s0v4wl/8JSvyzzmaG2ECI2Mk7OVUFZ75Po5/LtctH2HHO6+x
      b9zD/C9uodItA5hOps9N8OdAIpFAVdWJL7pJn2+Kokyfm+DPu1hC56OG3is9jc+Ul+mlbEbG
      lZ7GZSMDuExGgzH+6bm9V3oan+nmleU8uNE6AcgLWsnSZACSpckAJEuTAUiWJgOQLE0GIFma
      DECyNBmAZGkyAMnSZACSpckAJEuTAUiWJgOQLE0GIFmaDECyNBmAZGkyAMnSZACSpckAJEuT
      AUiWJgOQLE0GIFmaDECyNBmAZGkyAMnSZACSpckAJEuTAUiWJgOQLE0GIFmaDECyNBmAZGky
      AMnSZACSpckAJEuTAUiWJgOQLE0GIFmaDECyNBmAZGlT/j/KjvWeoKZ5gLguJj/g8JFXUsHc
      Ah9gEB0+RWtbJ0NBHVtaPnMqZ5HltqEoAiMRoq/lJC2DcVJyiiibVUiaQzk9TmKYppYQmUX5
      +D0OVOWyb6J0CU35AMxklHA4RDRhTixLRkbpHQgQcJcytwDigQ5qDtbSEzRwOOwYvR10DCf5
      4rVzSVMNgj1H2X+4C8VtY2AoSNx0sXReDk4MRlrrONbmZdmMXPxXcDulS2PKB+Apuoobis5Z
      IJIEuo6yf08nRaVpIML0NjTRF01l/jUrqMj2EDtVx/atu6mdW051dpL+puOI8k3cstjNqbqP
      aOppZqgsh/x4J7UdOoUVs8hJccqj/zQ07e4BjHiY/vZ6InmLKfPbIDpM56ggo7CMWdk+bKpG
      ysyFrJtjcrhhCNMQhMYS5BVn43J4SfU5UPUhRkNReho7MdJnUpLvx6HJvX86mvJngEmEQXSs
      i5ZWFxWbZuJRgEiIsKrhS/HhmsjdRlZBDsM1w6Ckoqgmun52DA1Ns0Gggx7dS7o2wL7X99Eb
      dDH72i+xrjwNVZExTBfTKgBTTzLcdJj+vC9wQ9qZTTNNHC4HDpeTc3dbLc2PRzfQNI3MXD9H
      jjWxLD2DvoEAEdPN6GgIrxKkpXUcf8lVrPWNcvDNd6i/fxPzPRqmaZJIJCY9vxACXdfPWw4Q
      jUUv4ZZfPHpSJxKJXOlpXDbTJwAhSMbaOHJIYdFXi3Ges7cnEkn0pD55/ViUCKDYnWRXrmDm
      9m38+JEYmWVLWVySgqZquNUoZM2krGI+RWkGNDzO0S7B/ApQFAWHwzFpyGQyiaIoaJp23vSc
      Tv28ZZ9Hmk3D6XRe6WlcNtMmAAEEjrxH1+wbuTntnM1yONEMEyMexwDO7prx0RFsvgoURcWd
      Uc66Ox5glW6ixAeob+kH7yzSox3YXS6cdhuqZifdrzI+ngBsKIqC8geXQoqioKrqJwagKlPj
      duvTAp6upsZf5UIk29i/X7BiTSmOc/fL1AxySRAa6GM4YSKEwDSC1NV1Uzm7AFBQVA2HJwVf
      io2RU8NEo06KyzJwO50Yuo5hmghhEonqeNz2K7WF0iUwPQIQOmMfvsPJyhu5Kl2ZdK2Pmkl5
      ZSZjXUc5WNNA39AATe++yFvh5VTPOedUL0wife109A/gnDWfXLuCL78I0dNOW0cH/T2H2NNY
      zKLS6fGSSadNj0sgc4jaehc3faWMTzp5e0uWcaOusGvXDv717SiuwqXc/pWrybefs/lGmOHA
      KDFbGYsK3aeXpc9l/YoAb+58mT1jXhZ86StUumUA04kihBCfvZp0IRKJBKqqYrOdf1zpGw7x
      jUe2XYFZ/fvcvLKcBzcuu9LTuCwURZkid2aSdInIACRLkwFIliYDkCxNBiBZmgxAsjQZgGRp
      MgDJ0mQAkqXJACRLkwFIliYDkCxNBiBZmgxAsjQZgGRpMgDJ0mQAkqXJACRLkwFIliYDkCxN
      BiBZmgxAsjQZgGRpMgDJ0mQAkqXJACRLkwFIliYDkCxNBiBZmgxAsjQZgGRpMgDJ0mQAkqXJ
      ACRLkwFIliYDkCxNBiBZmgxAsjQZgGRpMgDJ0mQAkqXJACRLs13pCVwsRnSQxuONDIZ0sHvI
      nFHCrKJs3BoQHqCxpY1Tgeik38mZV828HA0jEaa/9SQtgwlScgqZVTqTNIdyeqVEgKbWIJlF
      +fjdDlTl8m+bdOlMiwDMcAcH3jtCb9TEpikIxokLBxm52bg9kBhqpvbYScbxk+n5+KSXkgRh
      6gR7jrKvpgNcNvoGx4iZTpbOzcGJwWhbHcdaPSzLy8XvvoIbKV0S0yAAnVM173EiOocbrltM
      od+JSEQIhaOoZ7ZufDyEO28OSxevpixDm/TbRjzEQPNxzLIv8+UlHk7VfkRTdzPDs3LIi3dS
      256gsGI+OT6nPPpPQ1M/gFgnh2oF8+6oojjddXqZ00ua03tmhTjBMXA53Hi92nm/bhqC4Gic
      /EU5uByC1FQH6tAgI6EYRlsnenohJfnpODS5909HUz+AQAfN9gyK2nfz4vZ2huImbv9M5i1f
      w9LyDOxECI4PUn+4hmO1B3Bodtz+IpZUr2JhQSoooCgmun5mPKGhaTYItNOje0nXBtj/xn56
      Q25mr93A2vI0VEXGMF1M/QDCIcZHOmkLLmfemnU4FINgfwuNH7yFYd/EmuIUZq28jtTZQRIC
      MHXG+46x76VXif75nazM1MjM9VN7rIlgegb9gyNETDejYyG8SpCW1nHSihZT7Rvjox2/5+R9
      G5nn0TBNk0QiMWkqQgh0XT9vOUA0Fj1v2eeRrutEIpErPY3LZuoHIARm5hxWLV1Art+NpgiM
      GWmo+gecPNnJ4uIKUjLzScnMP7O+iV4yk4zov/HU/lZW3TqH7MoVFLy5nZ/8rxgZpUtYXJKC
      hobbFoXMmZRXLqAozURpfJzjXYJ5FaAoCg6HY9JUkskkiqKgaedfajkd+nnLPo80TcPpdF7p
      aVw2Uz+AzCzyRoeIuGzYVAVQsKWkkpGXg+9EmDjgOXd9RcXmSqWkMINgTRRFUXFnlrF289dY
      kRSoiUFOtvZDyizSox3Y3S6cdjuqppDhVxkbTwA2FEVB+YNLIUVRUFX1EwNQ1anxkcunBTxd
      TY2/yh+TMYtKex0fnoxgCIEQAhGLER4ZYdzrwZVIEItFiRnm6ceEQJgGIyOjeFwuQEFRbTi9
      qaSlOhjtHSYadVBcloHb6cDQDQzTRAiTaEzH47Zf6S2WLqKpfwZQ8vjCF6v46QtP8657C0ty
      FcY66jjeOk7Z+jLcoVZ2vldDn7OUlVVlZLpgrG03r72rs/6+8o/HESaRvnY6BgZwzL6eXLsC
      +UWYR1poz0jFkTnInoYiFq+b+scM6WNTPwDAPeeLfPPOPby47RfsHRf4citZs2Ejy2fYgdlc
      s87NkQPvs+OZnYxEwZldytV338PK/HOO5kaYocAIUbWMlUVnPvFKn8f1ywP8dueLvDfmYeEt
      dzLXLQOYTv4/M1Lgiwr6G/IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 cities with maximum voted restaurants ' width='192'>
      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
      eKY09mbeVfgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 cuisines by ratings' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 least rated restaurants' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 restaurants by ratings ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 costly Restaurants by avg cost' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='country wise count of cuisines' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
